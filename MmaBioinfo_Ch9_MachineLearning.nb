(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    424128,       8937]
NotebookOptionsPosition[    413010,       8733]
NotebookOutlinePosition[    413740,       8759]
CellTagsIndexPosition[    413652,       8754]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica for Bioinformatics", "Title",
 CellChangeTimes->{{3.716505231034802*^9, 3.7165052399525843`*^9}, {
  3.7189700660987*^9, 3.718970066321953*^9}, {3.719671162174827*^9, 
  3.719671169138997*^9}, {3.719918559461687*^9, 3.719918616051854*^9}, {
  3.719918720054628*^9, 3.719918725308221*^9}, {3.7199190461734447`*^9, 
  3.719919048693425*^9}},ExpressionUUID->"3414ea2f-4509-4c5a-a02d-\
dd9b81320855"],

Cell[TextData[{
 StyleBox["by George I. Mias, PhD\n",
  FontColor->RGBColor[
   0.1573052567330434, 0.15793087663080796`, 0.4541237506675822]],
 Cell[BoxData[
  TemplateBox[{"\"http://georgemias.org\"","http://georgemias.org"},
   "HyperlinkURL"]], "Output",
  CellChangeTimes->{3.719919204810491*^9, 3.719919290636554*^9},
  FontFamily->"Source Code Pro",
  FontSize->18,ExpressionUUID->"906277dd-33a5-436a-be7f-c6f68b4e467c"]
}], "Text",
 CellChangeTimes->{{3.7199190500652037`*^9, 3.719919115146494*^9}, 
   3.7199191833934107`*^9, {3.7199192683634*^9, 3.719919303306136*^9}, 
   3.719919352773055*^9},
 FontSize->24,
 FontWeight->"Bold",ExpressionUUID->"50c8a2f2-ad95-43e1-a8cf-800daf0992cd"],

Cell[CellGroupData[{

Cell["Chapter 9:  Machine Learning", "Chapter",
 CellChangeTimes->{{3.716505231034802*^9, 3.7165052399525843`*^9}, {
  3.7189700660987*^9, 3.718970066321953*^9}, {3.719671162174827*^9, 
  3.719671169138997*^9}, {3.719918559461687*^9, 3.7199185831615763`*^9}, {
  3.719919425090145*^9, 3.71991942946268*^9}, {3.71991948546815*^9, 
  3.719919500276846*^9}, {3.719919555917303*^9, 
  3.7199195564090433`*^9}},ExpressionUUID->"2e5798e6-0771-4291-bfad-\
92143ba4a306"],

Cell[CellGroupData[{

Cell["A taste of clustering", "Section",
 CellChangeTimes->{{3.7199491448906507`*^9, 
  3.719949150435939*^9}},ExpressionUUID->"c99be4af-e9ce-49ed-b93c-\
760a3d79a93b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7198503609882317`*^9, 3.719850370736845*^9}, 
   3.720906042507864*^9},ExpressionUUID->"bcc29e56-62f9-410e-9d03-\
0887477854de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"golubAssociation", "=", 
   RowBox[{"<<", "\"\<golubAssociation\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198501613490353`*^9, 3.719850167682922*^9}, {
  3.719850359747254*^9, 3.719850379432122*^9}, {3.720906049141327*^9, 
  3.720906050219523*^9}, {3.721743731358945*^9, 3.72174373320129*^9}, {
  3.730038657578101*^9, 
  3.7300386644714327`*^9}},ExpressionUUID->"24769630-b8d7-46e1-9eec-\
5dba21b7a066"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hu6800IDtoAnnotation", "=", 
   RowBox[{"<<", "\"\<hu6800IDtoAnnotation\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.719850398954671*^9, 3.7198504038584137`*^9}, 
   3.7209060532373466`*^9, {3.721743736352775*^9, 
   3.721743739243112*^9}},ExpressionUUID->"f1c582a7-65af-480f-ac4c-\
b7bfcfb81599"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myosinExample", "=", 
  RowBox[{
   RowBox[{"Query", "[", 
    RowBox[{"All", ",", "\"\<M31211_s_at\>\""}], "]"}], "@", 
   "golubAssociation"}]}]], "Input",
 CellChangeTimes->{{3.719947281707796*^9, 3.719947301603002*^9}, 
   3.719947906280883*^9, {3.719947936643196*^9, 3.719947937439789*^9}, {
   3.71994804642179*^9, 3.719948047319502*^9}, {3.719948126478077*^9, 
   3.7199481309860687`*^9}},ExpressionUUID->"563b6c8e-be78-470a-b05c-\
6bdcb1929298"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AML\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9296977608501635`"}], ",", 
      RowBox[{"-", "1.2143853831506357`"}], ",", 
      RowBox[{"-", "1.3655872827319675`"}], ",", 
      RowBox[{"-", "1.0305435037652275`"}], ",", 
      RowBox[{"-", "1.2991495586323216`"}], ",", 
      RowBox[{"-", "0.4011217902697098`"}], ",", 
      RowBox[{"-", "0.2632450585388963`"}], ",", 
      RowBox[{"-", "1.2724061258095911`"}], ",", 
      RowBox[{"-", "0.6511764709485812`"}], ",", 
      RowBox[{"-", "0.32312484357444404`"}], ",", 
      RowBox[{"-", "1.4347270114342876`"}], ",", 
      RowBox[{"-", "0.20351794588868766`"}], ",", 
      RowBox[{"-", "1.043356063382701`"}], ",", 
      RowBox[{"-", "1.2270212041465278`"}], ",", 
      RowBox[{"-", "1.2807126429115745`"}], ",", "0.2602067426742524`", ",", 
      RowBox[{"-", "1.0580099078120297`"}], ",", 
      RowBox[{"-", "0.7203310732505191`"}], ",", 
      RowBox[{"-", "0.8099045693124726`"}], ",", 
      RowBox[{"-", "0.5882081614242479`"}], ",", 
      RowBox[{"-", "0.5136317002987141`"}], ",", 
      RowBox[{"-", "0.2472963459658415`"}], ",", 
      RowBox[{"-", "1.4203608388573667`"}], ",", 
      RowBox[{"-", "1.4816276584804704`"}], ",", 
      RowBox[{"-", "1.3110958098343686`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ALL\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.21672955027100788`", ",", 
      RowBox[{"-", "0.05120115895569135`"}], ",", "0.051219581522963735`", 
      ",", "0.06582984659939808`", ",", "0.355841853944418`", ",", 
      RowBox[{"-", "0.07641561285915632`"}], ",", 
      RowBox[{"-", "0.2989317933653348`"}], ",", 
      RowBox[{"-", "0.46566980206515224`"}], ",", "0.4903721549236263`", ",", 
      "0.651372581833078`", ",", "0.7152124889848497`", ",", 
      "0.14814887759898335`", ",", "0.3543626691363583`", ",", 
      RowBox[{"-", "0.4661932944500926`"}], ",", "0.5761752444431527`", ",", 
      "0.41746108466459714`", ",", 
      RowBox[{"-", "0.40758602579889913`"}], ",", "0.3881376387798891`", ",", 
      "0.26681742576525735`", ",", "0.6349129669283509`", ",", 
      "0.7078976451369176`", ",", 
      RowBox[{"-", "0.7758709659645383`"}], ",", "0.07653314699875012`", ",", 
      "0.10865802494564528`", ",", "0.2247036454783714`", ",", 
      "0.4668979162482864`", ",", 
      RowBox[{"-", "0.87136046796972`"}], ",", "0.19309658826712045`", ",", 
      RowBox[{"-", "0.37864986968992315`"}], ",", 
      RowBox[{"-", "0.08961188950957222`"}], ",", "0.28486558881337476`", ",",
       "0.5199495112520192`", ",", 
      RowBox[{"-", "0.20494844176144664`"}], ",", "0.5609265292777812`", ",", 
      
      RowBox[{"-", "0.07587433139763333`"}], ",", "0.7267730187822518`", ",", 
      "0.3370381890554236`", ",", "0.37495397039013934`", ",", 
      "0.14678166771436427`", ",", 
      RowBox[{"-", "0.47457395405299724`"}], ",", "0.17077678644332647`", ",",
       "0.13699115419938196`", ",", "0.10743804367560046`", ",", 
      RowBox[{"-", "0.5506896455663939`"}], ",", "0.27912091767633085`", ",", 
      
      RowBox[{"-", "0.6657575701974796`"}], ",", "0.5458818217752643`"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.719947302095689*^9, 3.7199480478332443`*^9, 
  3.719948131537043*^9, 3.7202912596417294`*^9, 3.7209060553057327`*^9, 
  3.720907388885*^9, 3.720911313711656*^9, 3.72091135543154*^9, 
  3.720912255803228*^9, 3.7217437471378403`*^9, 3.7217440550447206`*^9, 
  3.721744408804841*^9, 3.7217451934686737`*^9, 3.721750043334738*^9, 
  3.7217501478238173`*^9, 
  3.721750209778242*^9},ExpressionUUID->"3d8ab76a-4466-4962-806c-\
272b0a11064f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"labelsMYL6BAML", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[Rule]", " ", "\"\<AML\>\""}], "&"}], "@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "25"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.719949380538043*^9, 
  3.719949388263859*^9}},ExpressionUUID->"28270b7d-94f8-4ffc-9056-\
45e0b6c6df14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"2", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"3", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"4", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"5", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"6", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"7", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"8", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"9", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"10", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"11", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"12", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"13", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"14", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"15", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"16", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"17", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"18", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"19", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"20", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"21", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"22", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"23", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"24", "\[Rule]", "\<\"AML\"\>"}], ",", 
   RowBox[{"25", "\[Rule]", "\<\"AML\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.719949317836801*^9, 3.719949388812193*^9, 
  3.720291262099395*^9, 3.72090605738375*^9, 3.720912255855089*^9, 
  3.721743766906806*^9, 3.721744055329088*^9, 3.721744408887293*^9, 
  3.721745193531967*^9, 3.7217500446220007`*^9, 3.7217501479221077`*^9, 
  3.721750209874764*^9},ExpressionUUID->"a6a1dccb-f570-48f0-9325-\
56ea2b7bd0c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"labelsMYL6BALL", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[Rule]", " ", "\"\<ALL\>\""}], "&"}], "@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "47"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.719949392609466*^9, 3.719949399187126*^9}, 
   3.721746130169169*^9},ExpressionUUID->"eb3b2857-2ee9-47ad-8501-\
8cd42b96d802"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"2", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"3", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"4", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"5", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"6", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"7", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"8", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"9", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"10", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"11", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"12", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"13", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"14", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"15", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"16", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"17", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"18", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"19", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"20", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"21", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"22", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"23", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"24", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"25", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"26", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"27", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"28", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"29", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"30", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"31", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"32", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"33", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"34", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"35", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"36", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"37", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"38", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"39", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"40", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"41", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"42", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"43", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"44", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"45", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"46", "\[Rule]", "\<\"ALL\"\>"}], ",", 
   RowBox[{"47", "\[Rule]", "\<\"ALL\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.719949322534738*^9, 3.719949399758478*^9, 
  3.720291264316786*^9, 3.720906058434719*^9, 3.720912255928636*^9, 
  3.721743767837474*^9, 3.721744055695372*^9, 3.7217444089818707`*^9, 
  3.7217451936096773`*^9, 3.721750044853001*^9, 3.721750148039555*^9, 
  3.721750209992959*^9},ExpressionUUID->"31cc9759-e2d7-418d-a899-\
3449ff3e9369"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FindClusters"}]], "Input",
 CellChangeTimes->{{3.719949349426771*^9, 
  3.719949352751893*^9}},ExpressionUUID->"fe947f65-1070-4c2f-a29d-\
d5424a600a3c"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"FindClusters\\\", \\\"[\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) partitions the \
\\!\\(\\*StyleBox[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \\\"i\\\"], \
\\\"TI\\\"]\\) into clusters of similar elements. \
\\n\\!\\(\\*RowBox[{\\\"FindClusters\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\"]\\\"}]\\) returns the \\!\\(\\*StyleBox[SubscriptBox[\\\"v\\\", \
\\\"i\\\"], \\\"TI\\\"]\\) corresponding to the \
\\!\\(\\*StyleBox[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \\\"i\\\"], \
\\\"TI\\\"]\\) in each cluster. \\n\\!\\(\\*RowBox[{\\\"FindClusters\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives the same result. \
\\n\\!\\(\\*RowBox[{\\\"FindClusters\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"label\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"label\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\
\[RightAssociation]\\\"}], \\\"]\\\"}]\\) returns the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"label\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) corresponding to the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) in each cluster.\\n\\!\\(\\*RowBox[{\\\"FindClusters\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) partitions \\!\\(\\*StyleBox[\\\"data\\\", \
\\\"TI\\\"]\\) into at most \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
clusters. \"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindClusters"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.721750210166705*^9},
 CellTags->
  "Info73721732210-2781754",ExpressionUUID->"e2b078d6-8093-430b-9c50-\
74965f3adf93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"Values", "@", "myosinExample"}]}], "\[Rule]", " ", 
   RowBox[{"Values", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"labelsMYL6BAML", ",", "labelsMYL6BALL"}], "]"}]}]}], "//", 
  "Short"}]], "Input",
 CellChangeTimes->{{3.720906362574407*^9, 3.720906363399784*^9}, {
  3.720906411735346*^9, 3.720906412925961*^9}, {3.721743781498493*^9, 
  3.721743782656762*^9}},ExpressionUUID->"5ee5a5d3-a855-4f40-926b-\
fbf8e2b0e6c3"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9296977608501635`"}], ",", 
     RowBox[{"\[LeftSkeleton]", "70", "\[RightSkeleton]"}], ",", 
     "0.5458818217752643`"}], "}"}], "\[Rule]", 
   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}],
  Short]], "Output",
 CellChangeTimes->{
  3.720906350186502*^9, {3.7209064067868567`*^9, 3.72090641329495*^9}, 
   3.720912256277524*^9, 3.721743783133142*^9, 3.721744057219839*^9, 
   3.7217444104740953`*^9, 3.721745193876542*^9, 3.72175004551822*^9, 
   3.721750148305806*^9, 
   3.7217502102912197`*^9},ExpressionUUID->"14f48d52-7644-463e-945e-\
48d574f8f22f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindClusters", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"Values", "@", "myosinExample"}]}], "\[Rule]", 
   RowBox[{"Join", "[", 
    RowBox[{"labelsMYL6BAML", ",", "labelsMYL6BALL"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.719948400615478*^9, 3.719948473589197*^9}, {
   3.719948524283929*^9, 3.71994854829758*^9}, {3.719948604324085*^9, 
   3.719948652540882*^9}, {3.7199488072780046`*^9, 3.719948833003683*^9}, {
   3.719948868468054*^9, 3.7199489684435663`*^9}, {3.719949014875228*^9, 
   3.7199490592208776`*^9}, {3.719949408753607*^9, 3.719949421125079*^9}, 
   3.720906344823141*^9, 3.720906425631287*^9, 
   3.720906586393407*^9},ExpressionUUID->"c09aa857-247b-4e5d-8784-\
803ddc9674d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"2", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"3", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"4", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"5", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"8", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"9", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"11", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"13", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"14", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"15", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"17", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"18", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"19", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"20", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"23", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"24", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"25", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"22", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"27", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"46", "\[Rule]", "\<\"ALL\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"6", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"7", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"10", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"12", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"21", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"22", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"2", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"3", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"6", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"7", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"8", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"14", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"17", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"29", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"30", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"33", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"35", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"40", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"44", "\[Rule]", "\<\"ALL\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"16", "\[Rule]", "\<\"AML\"\>"}], ",", 
     RowBox[{"1", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"4", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"5", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"9", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"10", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"11", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"12", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"13", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"15", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"16", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"18", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"19", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"20", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"21", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"23", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"24", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"25", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"26", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"28", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"31", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"32", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"34", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"36", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"37", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"38", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"39", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"41", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"42", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"43", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"45", "\[Rule]", "\<\"ALL\"\>"}], ",", 
     RowBox[{"47", "\[Rule]", "\<\"ALL\"\>"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.719948881480345*^9, 3.719948925999628*^9, {3.719949025617646*^9, 
   3.7199490609693947`*^9}, 3.719949422900172*^9, 3.720291271111186*^9, 
   3.720906064789874*^9, 3.720906165516487*^9, 3.720906216874586*^9, {
   3.7209064270813913`*^9, 3.720906505089641*^9}, 3.7209065874520063`*^9, 
   3.720906619699946*^9, 3.7209122578798122`*^9, 3.721743794354972*^9, 
   3.721744060189702*^9, 3.721744412942628*^9, 3.721745197385722*^9, 
   3.721750047937182*^9, 3.721750151902001*^9, 
   3.7217502139120493`*^9},ExpressionUUID->"0eed9f2b-08f1-419e-85c3-\
f1b07f798011"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Counts", "[", 
    RowBox[{"Values", "@", "#"}], "]"}], "&"}], "/@", "%"}]], "Input",
 CellChangeTimes->{{3.7209064366179113`*^9, 3.720906441524323*^9}, {
  3.720906487329821*^9, 3.720906502658503*^9}, {3.7209065962674713`*^9, 
  3.7209066166495934`*^9}},ExpressionUUID->"6241b91f-ce7c-49c4-9ec8-\
1a9b7940756e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"AML\"\>", "\[Rule]", "18"}], ",", 
     RowBox[{"\<\"ALL\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"AML\"\>", "\[Rule]", "6"}], ",", 
     RowBox[{"\<\"ALL\"\>", "\[Rule]", "13"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"AML\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"ALL\"\>", "\[Rule]", "31"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7209064421576233`*^9, 3.720906454735982*^9}, {
   3.720906491420968*^9, 3.720906506359229*^9}, 3.7209065921073112`*^9, 
   3.720906623580151*^9, 3.720912258126038*^9, 3.7217440605901937`*^9, 
   3.721744413305032*^9, 3.72174519772292*^9, 3.721750048341585*^9, 
   3.721750152254887*^9, 
   3.721750214289936*^9},ExpressionUUID->"bda052b1-7ed6-4521-8d6c-\
452cd62f26fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dimensional Reduction", "Section",
 CellChangeTimes->{{3.720291298968231*^9, 3.7202913089121103`*^9}, {
  3.7202971230059853`*^9, 3.720297140856202*^9}, {3.720906663382515*^9, 
  3.720906677238063*^9}, {3.72091073385343*^9, 3.7209107482577763`*^9}, {
  3.7209125060913467`*^9, 3.720912521596134*^9}, {3.720912615050737*^9, 
  3.720912618635829*^9}},ExpressionUUID->"5f1de410-1edd-46bf-bd2b-\
9604d41f545a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"golubOmicsObject", "=", 
   RowBox[{"<<", "golubOmicsObject"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720908487001389*^9, 3.720908489417066*^9}, 
   3.720908910360442*^9, {3.7209093340318336`*^9, 3.720909334699264*^9}, {
   3.720909455817265*^9, 3.7209094691143713`*^9}, {3.720909640967506*^9, 
   3.7209096521356583`*^9}, {3.720909685985281*^9, 3.720909686663754*^9}, {
   3.72091138609146*^9, 
   3.7209113914508553`*^9}},ExpressionUUID->"ccd5d70e-aa8a-4c04-abff-\
346993ae793f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"golubPhenotypeData", "=", 
   RowBox[{"<<", "golubPhenotypeData"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7209096988828773`*^9, 3.720909700002708*^9}, {
  3.7209114042742558`*^9, 
  3.7209114206462812`*^9}},ExpressionUUID->"dca8e5f0-e27d-4338-8174-\
fe5d5a9c9e3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"golubPhenotypeData", "//", "Short"}]], "Input",
 CellChangeTimes->{{3.720909703544075*^9, 
  3.7209097083133907`*^9}},ExpressionUUID->"f8358b46-c6d6-4eb9-9ed6-\
7ea9de75bf67"],

Cell[BoxData[
 TagBox[
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Samples\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\<\"ALL/AML\"\>", ",", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], 
       ",", "\<\"Source\"\>"}], "}"}]}], ",", 
    RowBox[{"\[LeftSkeleton]", "71", "\[RightSkeleton]"}], ",", 
    RowBox[{"72", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}]}], 
   "\[RightAssociation]"}],
  Short]], "Output",
 CellChangeTimes->{
  3.7209097087675447`*^9, {3.720911327407995*^9, 3.720911333343759*^9}, 
   3.720911367077434*^9, {3.7209114113649693`*^9, 3.720911422464113*^9}, 
   3.7209125764105463`*^9, 3.720922872712612*^9, 3.721744062047825*^9, 
   3.721744414892277*^9, 3.7217451992005587`*^9, 3.7217500508431883`*^9, 
   3.721750153754765*^9, 
   3.721750215796067*^9},ExpressionUUID->"45cf4419-f2d5-472b-b10e-\
a4071c04904f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampleToCondition", "=", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", "1"}], "]"}], "@", "golubPhenotypeData"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sampleToCondition", "//", "Short"}]}], "Input",
 CellChangeTimes->{{3.720909732656064*^9, 3.720909772135419*^9}, {
  3.72091016196579*^9, 
  3.720910162359254*^9}},ExpressionUUID->"9c311f28-9300-4fde-8333-\
77d19ebd6398"],

Cell[BoxData[
 TagBox[
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "\<\"ALL\"\>"}], ",", 
    RowBox[{"2", "\[Rule]", "\<\"ALL\"\>"}], ",", 
    RowBox[{"\[LeftSkeleton]", "68", "\[RightSkeleton]"}], ",", 
    RowBox[{"71", "\[Rule]", "\<\"ALL\"\>"}], ",", 
    RowBox[{"72", "\[Rule]", "\<\"ALL\"\>"}]}], "\[RightAssociation]"}],
  Short]], "Output",
 CellChangeTimes->{3.7209097724338017`*^9, 3.720910162884555*^9, 
  3.720911425697701*^9, 3.720912578576477*^9, 3.720922874539283*^9, 
  3.7217440621104803`*^9, 3.7217444149583387`*^9, 3.721745199280108*^9, 
  3.721750050909149*^9, 3.7217501538443813`*^9, 
  3.721750215883157*^9},ExpressionUUID->"bb4e4165-d6ab-4ea2-b80f-\
0cfb85136392"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"genesAllGolub", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", " ", 
      RowBox[{"sampleToCondition", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&"}], "/@", 
    RowBox[{"Normal", "@", 
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{"All", ",", 
        RowBox[{"Values", "/*", "Flatten"}]}], "]"}], "@", 
      "golubOmicsObject"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720909336149933*^9, 3.720909338080997*^9}, {
   3.7209093686133623`*^9, 3.720909421797514*^9}, {3.7209095137224894`*^9, 
   3.720909523635729*^9}, 3.720909658037395*^9, {3.72091046454839*^9, 
   3.720910502169986*^9}, {3.720910555362893*^9, 3.720910559716893*^9}, {
   3.720913030001932*^9, 
   3.7209130487360773`*^9}},ExpressionUUID->"3678d35b-12c7-407e-81ec-\
d6d38d4b101e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"genesAllGolub", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "3"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.7209106071048927`*^9, 3.720910609625464*^9}, {
  3.72091303573833*^9, 3.720913055472844*^9}, {3.721744094309613*^9, 
  3.721744103610941*^9}},ExpressionUUID->"65f41110-8c9a-40ca-9b99-\
598b76245d4d"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7883499372274219`"}], ",", 
     RowBox[{"-", "0.7569129882611255`"}], ",", 
     RowBox[{"\[LeftSkeleton]", "3567", "\[RightSkeleton]"}], ",", 
     RowBox[{"-", "0.3311788752968684`"}], ",", 
     RowBox[{"-", "0.8256612410907971`"}]}], "}"}], "\[Rule]", "\<\"ALL\"\>"}],
  Short[#, 3]& ]], "Output",
 CellChangeTimes->{
  3.720910609982828*^9, 3.7209114314923*^9, 3.720912585395598*^9, 
   3.720913056593441*^9, 3.721744062217576*^9, {3.721744095025333*^9, 
   3.721744104272717*^9}, 3.7217444152595263`*^9, 3.72174519938415*^9, 
   3.7217500510097857`*^9, 3.721750153945764*^9, 
   3.721750215995591*^9},ExpressionUUID->"42eb9584-34d3-4a54-8e7c-\
bb17d5a08845"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"golub2Dimensions", "=", 
   RowBox[{"DimensionReduce", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "genesAllGolub"}], ",", "2", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<PrincipalComponentsAnalysis\>\""}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720912685090377*^9, 3.7209126899344*^9}, {
   3.720912771127935*^9, 3.720912826377695*^9}, {3.7209129213117228`*^9, 
   3.720912923751368*^9}, 3.720913001375201*^9, {3.7209130618100348`*^9, 
   3.720913079778411*^9}},
 CellID->1529498239,ExpressionUUID->"0ec78ae9-45b2-4233-90c5-3301f50e1deb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"golub2Dimensions", "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "5"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.720913135006481*^9, 3.72091313922933*^9}, {
  3.721744114266798*^9, 
  3.721744125235969*^9}},ExpressionUUID->"b823e353-9194-4f6d-8251-\
b16bcdedcc50"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4.251831628929846`", ",", "23.21838284094821`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "7.236566992866689`"}], ",", 
      RowBox[{"-", "8.710775194175682`"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "68", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"35.16943542270662`", ",", "14.821671799324578`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.988815777678324`", ",", 
      RowBox[{"-", "15.585867365346633`"}]}], "}"}]}], "}"}],
  Short[#, 5]& ]], "Output",
 CellChangeTimes->{
  3.7209130890189*^9, {3.720913132723633*^9, 3.7209131395209827`*^9}, 
   3.7217440629976387`*^9, {3.721744116867654*^9, 3.721744125472405*^9}, 
   3.721744416027769*^9, 3.7217452002250557`*^9, 3.721750156741789*^9, 
   3.721750216679749*^9},ExpressionUUID->"e5324c17-4e99-4323-871e-\
cdbd44627f6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"golubByDisease", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"golub2Dimensions", "\[Rule]", "\[IndentingNewLine]", 
       RowBox[{"Values", "@", "genesAllGolub"}]}], "]"}], ",", 
     RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Values", "[", "golubByDisease", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Keys", "[", "golubByDisease", "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", " ", "\[IndentingNewLine]", 
    "\"\<Dimensional Reduction of ALL/AML Data\nUsing Principal Component \
Analysis\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.720912833283065*^9, 3.7209128919973927`*^9}, {
   3.720912928416827*^9, 3.720912928637125*^9}, {3.720913009974002*^9, 
   3.720913025206306*^9}, {3.720913150486865*^9, 3.720913226922867*^9}, {
   3.721743915106069*^9, 3.721743921843315*^9}, {3.7217441316152*^9, 
   3.721744131928132*^9}, {3.721749422306711*^9, 3.721749433059011*^9}, 
   3.721749607282325*^9, 3.721750190949216*^9},
 CellID->201935119,ExpressionUUID->"91a801f7-737f-4d5a-a80c-fb9cc30d2090"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAAjGiJJuABEUBQ4Rfw5zc3QLWzJp4+
8hzA0JXrueprIcCBN0cgpZ0hQI7CFjFcdDhAHVUKKMp6A0AO0vjR5lc0QG3O
mluzTEPAQLojamgtiD8kXODwjkAcQPIsPj5EeSxAMbvEhe0QLkAw9wg1Qec1
QMDiHZE0STpACPAkySntO0C6qtQMP1wowOJEcJM4DSBAIwydkewI+7+UOKvi
McUJQCuqUCd+kCrAt+apcWp5A0CmH1tHpmIUQHPQACX65CbA/K4GF1RCQsD3
NWZNjGAiQDsbtJPkSSnAJtPDAIzZGUDOg/ipCQxFwI21HvxysBNARkaj1JHl
J8DsNhhswdMxQAPyBifsKyDAr7n01bbMJUD1G+wtMvvTv4tt5Fr5nRhASLHd
+XTXKcAavUiBjCQbQCCBXlgBdEbAye4rGW/jH0Dbh2n6RrBCwGKBWr4Lmts/
6cy6Uyb7L0CGaOmsPmQiQOtdJy/mriJAm3qiJkMBMkDYtRtsd7o2wKfKWN2Y
6DBAoBpoEaEdE0COl4/ZeiTpv/XvDnfgShjAzTwCCTBtJUDT+bVj6/0+QP0i
e+Wkwj9AOKNyYy12MEBVj/RjrFA0QCCLTWJXaDBAyCiRsK1xMkB/SnTYm1oi
wMVUDoxZgCTArVIuCpXJM8C+rA5oYy/bvz1sQnHUbkHAgyKI3sRfIUCpd7EJ
7ao8QJwE7QiNvj5AcDLhaXgQRMBfW/nGn3cHQFUasC1kijDAawGyyPNOHcCS
EeSmbVI5wN99xc70KxdA9cniIOoVOMCgMdkmoOoPwE1gpzYbZDPAL1BTbw3C
4786W4wUh2kdwCE+Q/gJ5PW/4NV983PWB8C62STqK6wKwMfuNJ8qMR/AlpIp
2W2cAkBMa7SqJtxFwKdOtQBptRfAN21j7SHIQMAc5qkmjiMVwHXFAHZ7vyXA
HgorSmSVMsDD7UhFgcQJQNibbqOA0B5A+k5gho90MEAifIFPT7Q5QPioFBxY
GR7AqV4jmUJqAUCJUlq4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.365248, 0.427802, 0.758297], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAA8D2O8RD7OECuAfLB7sD4v0LNKLgm
Nz1AO19NIAgHIUCib8+EHW41QJE1+HJp4zvA3XahrPLFNUDI5ZZgAYpAwNNF
tUbF2DZA63LLgquQJcD6nXAmnFkwQHaRh7HQcyfAfjY0I3jBKMCJp8Dk8fxC
wOSneS7wFiVAGCZpIxh2QcCNRNj270oyQLxfyG4JoSHAFDSguzLVNECDeRb5
AxIXwBac2laYrkRAaVi2cMQSLcCxDYjp3e8PQDk+/GiJJUDAwoEnDnXnNED2
/3KzCncpwH0RJdahjTlAdgSE2oTlM8DywfEkTck1QPCgEJ3WNjjAQmWt817H
GsCEFbaI8EAkwGEhwxe66ydA2In54Ot1IcAyu3NC6/FCQMP/6Lp2auO/tu+l
HFOD1z8LiJxbT98mwLPQ5kCiUzVA5B04ByZSuj/+hs/TKDosQIuBnZnEzirA
t6XUdsE+PMD/W13xRK43wL5hrL1TGy5APDkvhzzxKsCJp1cPsJVBQAFKhCqy
pC1AX8vFD0b6J0A66qvO9isvwKqBxmw=
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-44.90629105200264, 
      41.36402402567198}, {-37.976132005757854`, 31.760328619539894`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Dimensional Reduction of ALL/AML Data\\nUsing Principal \
Component Analysis\"", TraditionalForm], 
     PlotRange -> {{-44.90629105200264, 
      41.36402402567198}, {-37.976132005757854`, 31.760328619539894`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ALL\"", "\"AML\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.9, 0.36, 0.054]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.365248, 0.427802, 0.758297]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.720912893757753*^9, 3.7209129295098743`*^9, {3.720913172247713*^9, 
   3.720913182987508*^9}, 3.7209132278367443`*^9, 3.721744063518317*^9, 
   3.721744134072445*^9, 3.721744416278181*^9, 3.721745201839485*^9, 
   3.7217501569871187`*^9, 3.72175021694033*^9},
 ImageSize->{330, 150},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ExpressionUUID->"95684bb8-dc81-48d3-a08d-04e65eae97fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"golub2DimensionsTSNE", "=", 
   RowBox[{"DimensionReduce", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "genesAllGolub"}], ",", "2", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<TSNE\>\""}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.720913321693218*^9, 3.720913380210038*^9}, {
   3.720913422091778*^9, 3.720913532258566*^9}, {3.721743927626568*^9, 
   3.721743944771161*^9}, 3.721749927008617*^9, 
   3.721749976506836*^9},ExpressionUUID->"9f0b704d-1513-4118-b091-\
37c6f16dc55c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"golubByDiseaseTSNE", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"golub2DimensionsTSNE", "\[Rule]", 
       RowBox[{"Values", "@", "genesAllGolub"}]}], "]"}], ",", 
     RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Values", "[", "golubByDiseaseTSNE", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Keys", "[", "golubByDiseaseTSNE", "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", " ", "\[IndentingNewLine]", 
    "\"\<Dimensional Reduction of ALL/AML Data\nUsing t-distributed \
Stochastic Neighbor Embedding Algorithm\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.720913321693218*^9, 3.720913380210038*^9}, {
   3.720913422091778*^9, 3.720913532258566*^9}, {3.721743927626568*^9, 
   3.721743944771161*^9}, 3.721749927008617*^9, 3.721749976506836*^9, {
   3.721750064976667*^9, 
   3.7217500854744473`*^9}},ExpressionUUID->"9f4f8c18-18fa-46cd-a7cc-\
743a2ee60557"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwlUl9IU3EU/jl0U7cWOiV8cTcjIkmGiL6ptwcnIkoFEoXQclaQxMIEU1j8
CAIRIwh9ivA+GHvRUmGTMOy3HJYFWqZphd6hpuW/trJVpq57vju4fJzzO+c7
5/vODtd5zlwyMMYc2keo/eSuma/PNQxH87cJXXmvI6UaKqc/fSaUQz0mWUN+
z5ci6H0kPqbXn2AUC+fZdELFY5+nvOT9jXpp/2Uq5XnvymXwfo+gntsDC8TL
mrr/oH4yL4XqxS9fIvgXvlgolm9MGCmWM9PN4Dt5FO886fY49XNTwi7wZ+wA
5dmLnBmKpfrSRNQ3q/p+tuE0YGXnHM3jXX0JqL96Zxw63h4/iLlzUb1POrdD
eeHeXCeUO/oN6O9/BT9ERoWuN8B0nx5mHUI8HPsBXQ8MQewxWhsBf7U1mXjZ
u1YL1UlV923QYfQ+o3fFeXEa/jQGdqBnsHAf+fLiWexxvWwRd3AWJ8MP/1AM
vItb/wiZqSRO766Bj7ijKCjX+5eK9tA3a0Efb7u2if3EIyv0um+GoWf7rgq8
NW2CL49boI/tntoAf0MQ+pXcD5ijFD6FDrm6Az6KsjX47yoYwlzmcOB/wtU4
9pMuhHA3psp/sd+VkVXsdyQ+RXzhtHbdp8oiAf1jbzIwryob88P+oO7b1Pn3
iJ9srGDfZd8qfK417+FOqteMumNW3I9/a4duqcaeBBz1p4r/DyTypg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.365248, 0.427802, 0.758297], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQQK13awO4BoHauP9kA64QUbG4jfcGn2XRB/QcI9
HrC8rheYPtDx/T9InOHhKgEQP8FW+RtYnSqbIIj/YGLzTxD/QaYfC9gcHpZz
YP6pdl4wn1ceTCuYdnKDzVv1khUsPs3iL0idw6XrYPMXBKaD+Qybo5nA6o3/
gO07EPVSBKzeiwPirpt1YPmGvwWcINpBy4QZLP7+OdgfCq6nwPSCwmlg+kDd
/Hf7QfSjdpEDIPnuNc9AfIXPW4VBfAeDcLD5Cn/WgP2V8NLgPVi+ugas/sHj
ZD6wfe6530HyByZfArvD4ec2iHu9lrwGqU8Q2Qj2H0M9G9g8h5Z6cDgnMGSA
/Z9Q/uM42L8nbkLsMzjH7gAAUspqKQ==
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-5.775015354156494, 
      5.2278852462768555`}, {-5.1327009201049805`, 4.256002902984619}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Dimensional Reduction of ALL/AML Data\\nUsing t-distributed \
Stochastic Neighbor Embedding Algorithm\"", TraditionalForm], 
     PlotRange -> {{-5.775015354156494, 
      5.2278852462768555`}, {-5.1327009201049805`, 4.256002902984619}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ALL\"", "\"AML\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.9, 0.36, 0.054]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.365248, 0.427802, 0.758297]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.720913377558753*^9, 3.720913381234201*^9}, 
   3.720913466744475*^9, 3.72091349944119*^9, 3.720913536369038*^9, 
   3.721744063817848*^9, 3.721744144581193*^9, 3.721744416593482*^9, 
   3.721745202331534*^9, 3.72175015731658*^9, 
   3.7217502174056187`*^9},ExpressionUUID->"298852c7-f2a9-471a-9b20-\
8061d008b582"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification", "Section",
 CellChangeTimes->{{3.720912608424761*^9, 
  3.720912610753604*^9}},ExpressionUUID->"babb5ab9-f3ba-4d7e-8a88-\
882238d5bf1f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "3333", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randomGolub", "=", 
   RowBox[{"RandomSample", "[", "genesAllGolub", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.720295152797858*^9, 3.720295164395281*^9}, {
   3.720295314497216*^9, 3.720295358135592*^9}, {3.720907055817181*^9, 
   3.7209070709022923`*^9}, {3.720909527932309*^9, 3.720909533923662*^9}, {
   3.720912588063452*^9, 3.720912589619031*^9}, {3.7209145755564957`*^9, 
   3.72091457659377*^9}, {3.720914609647909*^9, 3.7209146104860783`*^9}, 
   3.7217442011759233`*^9},ExpressionUUID->"f9c6ac91-8848-477d-a459-\
ec712eaeff9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainGolub", "=", 
   RowBox[{"randomGolub", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "51"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testGolub", "=", 
   RowBox[{"randomGolub", "[", 
    RowBox[{"[", 
     RowBox[{"52", ";;"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7202952317665358`*^9, 3.720295236699635*^9}, {
  3.72029536912582*^9, 3.720295402650655*^9}, {3.720907148024599*^9, 
  3.720907183769063*^9}},ExpressionUUID->"b72fc511-007a-4fc4-851d-\
e78315f5214a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"golubClassifier", "=", " ", 
   RowBox[{"Classify", "[", 
    RowBox[{"trainGolub", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.720295863976836*^9, 3.720295924358357*^9}, {
   3.720295980300219*^9, 3.72029598948816*^9}, {3.720910660906094*^9, 
   3.72091066856833*^9}, 3.720911580531336*^9, {3.720913724204266*^9, 
   3.720913741972673*^9}, {3.720913784646017*^9, 3.720913788893153*^9}, 
   3.72091383545195*^9, {3.72091445022689*^9, 
   3.720914456497699*^9}},ExpressionUUID->"fc0a81d6-f16f-4a10-a9e2-\
195b8ed9aef1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "@", "golubClassifier"}]], "Input",
 CellChangeTimes->{{3.720913825902323*^9, 3.720913832584638*^9}, 
   3.720914344489389*^9},ExpressionUUID->"d7132f79-2685-4415-aa4e-\
63d3a9105797"],

Cell[BoxData["ClassifierFunction"], "Output",
 CellChangeTimes->{3.7209138331579514`*^9, 3.720914344878961*^9, 
  3.7209144606075583`*^9, 3.720914585468096*^9, 3.720914618735586*^9, 
  3.7217440648337*^9, 3.7217442079013233`*^9, 3.721744421375654*^9, 
  3.721745207781795*^9, 3.721750162384486*^9, 
  3.721750222145035*^9},ExpressionUUID->"69f739de-811c-4e31-a83f-\
ca0530a3d431"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testGolub", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "5"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{
  3.720296808598095*^9, {3.720914026331595*^9, 3.720914036955926*^9}, 
   3.720914111648376*^9, 3.720914346424734*^9, {3.721744216889229*^9, 
   3.721744219408326*^9}},ExpressionUUID->"735ce9d8-c6dc-4da3-aa44-\
6e21eeaa85f6"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3142578252805668`"}], ",", 
     RowBox[{"-", "1.3142578252805668`"}], ",", 
     RowBox[{"-", "1.3142578252805668`"}], ",", 
     RowBox[{"-", "0.7727434232463032`"}], ",", 
     RowBox[{"\[LeftSkeleton]", "3563", "\[RightSkeleton]"}], ",", 
     RowBox[{"-", "1.0164758407198877`"}], ",", "0.6037720162565817`", ",", 
     "0.23874396068225434`", ",", 
     RowBox[{"-", "0.2210221297796484`"}]}], "}"}], "\[Rule]", "\<\"AML\"\>"}],
  Short[#, 5]& ]], "Output",
 CellChangeTimes->{
  3.720296580556226*^9, 3.720296809152946*^9, {3.72091402961279*^9, 
   3.720914037292213*^9}, 3.720914351345845*^9, 3.720914462129527*^9, 
   3.7209145868877487`*^9, 3.720914620450224*^9, 3.7217440649006147`*^9, {
   3.7217442079721403`*^9, 3.721744220125037*^9}, 3.7217444214333982`*^9, 
   3.721745207855485*^9, 3.721750162467298*^9, 
   3.721750222234617*^9},ExpressionUUID->"64708fe9-b956-4f34-8aa6-\
167efa7b81e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"golubClassifier", "[", 
  RowBox[{"testGolub", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.720914086738277*^9, 3.720914116721356*^9}, 
   3.720914354708359*^9},ExpressionUUID->"3feb4dcd-9b15-42ec-82a2-\
f0395f251575"],

Cell[BoxData["\<\"AML\"\>"], "Output",
 CellChangeTimes->{{3.720914088244458*^9, 3.720914117273321*^9}, 
   3.720914355420463*^9, 3.720914463831067*^9, 3.720914590311275*^9, 
   3.720914622342359*^9, 3.721744064967155*^9, 3.721744208058173*^9, 
   3.72174442150139*^9, 3.721745207937954*^9, 3.721750162552322*^9, 
   3.721750222334485*^9},ExpressionUUID->"24ac4a67-a402-432c-a63f-\
8dbab4aa5ec3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"golubClassifier", "[", 
  RowBox[{
   RowBox[{"testGolub", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<Properties\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720913907812648*^9, 3.720913949748217*^9}, 
   3.720914066615196*^9, {3.720914181057077*^9, 3.72091418118454*^9}, 
   3.720914357522128*^9},
 NumberMarks->False,ExpressionUUID->"01f2ed6a-f712-4da5-b482-96b5189112d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Decision\"\>", ",", "\<\"ExpectedUtilities\"\>", 
   ",", "\<\"LogProbabilities\"\>", ",", "\<\"Probabilities\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"TopProbabilities\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.720913921240686*^9, 3.720913950379435*^9}, 
   3.7209140687381372`*^9, 3.720914145125695*^9, 3.720914181571259*^9, 
   3.7209143579401073`*^9, 3.720914466162796*^9, 3.720914592165901*^9, 
   3.7209146239302473`*^9, 3.721744065019643*^9, 3.721744208137442*^9, 
   3.721744421568864*^9, 3.7217452080218773`*^9, 3.721750162652413*^9, 
   3.721750222435976*^9},ExpressionUUID->"0129d4c8-ce80-4eaf-8d9d-\
b20737557c53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"golubClassifier", "[", 
  RowBox[{
   RowBox[{"testGolub", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.72091396366667*^9, 3.720913973551201*^9}, {
   3.7209141633693027`*^9, 3.7209142102458897`*^9}, 
   3.7209143598433943`*^9},ExpressionUUID->"466f1684-5252-4af4-af69-\
2891c1ed5531"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ALL\"\>", "\[Rule]", "0.05382746768714633`"}], ",", 
   RowBox[{"\<\"AML\"\>", "\[Rule]", "0.9461725323128536`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.720913967229444*^9, 3.720913975038061*^9}, {
   3.7209141675667887`*^9, 3.720914210896592*^9}, 3.7209143603446207`*^9, 
   3.720914468044437*^9, 3.720914593796212*^9, 3.720914626050873*^9, 
   3.721744065083961*^9, 3.721744208237653*^9, 3.72174442164826*^9, 
   3.721745208105402*^9, 3.721750162796979*^9, 
   3.721750222536084*^9},ExpressionUUID->"873b7749-844b-4d5d-84fb-\
d67d026b779b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"golubClassifier", ",", "testGolub", ",", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720296934234393*^9, 3.720296985515051*^9}, {
  3.7209142978180523`*^9, 3.720914337930179*^9}, {3.720914369874875*^9, 
  3.7209143848061132`*^9}},ExpressionUUID->"40fec9c0-5b24-433b-892e-\
766be1a17346"],

Cell[BoxData["0.9523809523809523`"], "Output",
 CellChangeTimes->{{3.7202969754415607`*^9, 3.7202969862200003`*^9}, 
   3.720914385535595*^9, 3.720914471983498*^9, 3.720914597857375*^9, 
   3.720914628676146*^9, 3.7217440652056417`*^9, 3.721744208452944*^9, 
   3.721744421861883*^9, 3.7217452083254223`*^9, 3.721750163012971*^9, 
   3.7217502227528267`*^9},ExpressionUUID->"463dec6a-14a4-4aef-8464-\
e2a69b63e3e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
  "golubClassifier", ",", "testGolub", ",", "\"\<ConfusionMatrix\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720296934234393*^9, 3.720296985515051*^9}, {
  3.7202970507337*^9, 3.7202970536291*^9}, {3.720297374818345*^9, 
  3.72029738954698*^9}, {3.720914502847309*^9, 
  3.720914533999004*^9}},ExpressionUUID->"738e0ec5-190d-4aab-b1c8-\
510087ac1d21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.720297054234769*^9, {3.720297377492043*^9, 3.72029739021903*^9}, 
   3.720914534937661*^9, {3.720914601693199*^9, 3.720914630555735*^9}, 
   3.7217440652889843`*^9, 3.721744208678192*^9, 3.721744422081421*^9, 
   3.7217452085497932`*^9, 3.72175016323141*^9, 
   3.7217502229742117`*^9},ExpressionUUID->"32f68f97-a35d-41a1-b963-\
2d28a5fb1c8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
  "golubClassifier", ",", "testGolub", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720296934234393*^9, 3.720296985515051*^9}, {
  3.7202970507337*^9, 3.720297065367021*^9}, {3.720297183273781*^9, 
  3.72029730595408*^9}, {3.720297397194706*^9, 3.720297398135745*^9}, {
  3.7209145505216846`*^9, 
  3.720914566341072*^9}},ExpressionUUID->"0e2cbd80-14f3-4e97-9a54-\
ae7cd05d6bf7"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 1., 1.}, {0.8791747554233074, 0.6416219389623273, 
   0.16977173878244967`}}, {{1., 0.42, 0.}, {0.9305763717792014, 
   0.8561103451273806, 0.6331154051204777}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["14", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "14", "\" examples of \"", "\"ALL\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9655172413793104`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{14, " examples of ", "ALL", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.9333333333333333}], 
         Row[{"FScore = ", 0.9655172413793104}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AML\"", "\" misclassified as \"", 
             "\"ALL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AML", " misclassified as ", "ALL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"ALL\"", "\" misclassified as \"", 
             "\"AML\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.14285714285714285`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.06666666666666667`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "ALL", " misclassified as ", "AML"}], 
         Row[{"Column fraction = ", 0.14285714285714285`}], 
         Row[{"Row fraction = ", 0.06666666666666667}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "\"AML\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.923076923076923`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", "AML", " correctly classified"}], 
         Row[{"Precision = ", 0.8571428571428571}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.923076923076923}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" of class \"", "\"ALL\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " of class ", "ALL"}], 
        Row[{"Recall = ", 0.9333333333333333}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" of class \"", "\"AML\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " of class ", "AML"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "14", "\" example\"", "\"s\"", "\" classified as \"", "\"ALL\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{14, " example", "s", " classified as ", "ALL"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "7", "\" example\"", "\"s\"", "\" classified as \"", "\"AML\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{7, " example", "s", " classified as ", "AML"}], 
        Row[{"Precision = ", 0.8571428571428571}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"ALL\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"AML\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      1.5, 
       FormBox["15", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["14", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"ALL\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"AML\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.720297218256145*^9, 3.720297307222332*^9}, 
   3.720297398694873*^9, {3.7209145624390707`*^9, 3.720914567003635*^9}, {
   3.720914604337064*^9, 3.72091463280401*^9}, 3.721744065371636*^9, 
   3.721744209152029*^9, 3.721744422338558*^9, 3.7217452088102016`*^9, 
   3.721750163574108*^9, 
   3.721750223233735*^9},ExpressionUUID->"540c93d4-c8da-4a60-96d4-\
caf60e2a8dc7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Iris Data Classified Across Methods", "Section",
 CellChangeTimes->{{3.720291298968231*^9, 3.7202913089121103`*^9}, {
  3.7202971230059853`*^9, 
  3.720297140856202*^9}},ExpressionUUID->"c3e63878-b2fc-42b6-9425-\
eb411103f028"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", "\"\<MachineLearning\>\"", "]"}]], "Input",Expres\
sionUUID->"37f7f79b-6197-45ee-95d5-f132effdb422"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"BostonHomes\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"FisherIris\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"MNIST\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"MovieReview\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"Mushroom\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"Satellite\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"Titanic\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"UCILetter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MachineLearning\"\>", ",", "\<\"WineQuality\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7202920627344723`*^9, 3.720292094525632*^9, 
  3.721744066086369*^9, 3.721744422987671*^9, 3.7217452094361477`*^9, 
  3.7217501642696943`*^9, 
  3.72175022396404*^9},ExpressionUUID->"c33ac3a5-e655-4dbd-8906-b646988bca73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
   ",", "\"\<Properties\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.720291320354249*^9, 3.720291416177327*^9}, {
  3.7202920751927137`*^9, 
  3.7202921210457697`*^9}},ExpressionUUID->"208298d0-a7ed-4c21-bb85-\
3f926bd60b01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Data\"\>", ",", "\<\"Description\"\>", ",", "\<\"Data\"\>", 
   ",", "\<\"Dimensions\"\>", ",", "\<\"LearningTask\"\>", 
   ",", "\<\"LongDescription\"\>", ",", "\<\"MissingData\"\>", 
   ",", "\<\"Name\"\>", ",", "\<\"Source\"\>", ",", "\<\"TestData\"\>", 
   ",", "\<\"TrainingData\"\>", ",", "\<\"VariableDescriptions\"\>", 
   ",", "\<\"VariableTypes\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7202921216236067`*^9, 3.72174406615184*^9, 
  3.721744423044063*^9, 3.7217452095061007`*^9, 3.721750164368746*^9, 
  3.7217502240520163`*^9},ExpressionUUID->"2670a3b3-97c2-4f19-987f-\
8f5b8928f895"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
   ",", "\"\<Source\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7202915461333647`*^9, 3.72029155469352*^9}, 
   3.72029213876649*^9},ExpressionUUID->"9ac6749b-a5a0-488f-93b5-\
ad4c680b7dd0"],

Cell[BoxData["\<\"Fisher,R.A. \\\"The use of multiple measurements in \
taxonomic problems\\\" Annual Eugenics, 7, Part II, 179-188 (1936); \\nalso \
in \\\"Contributions to Mathematical Statistics\\\" (John Wiley, NY, 1950). \
\"\>"], "Output",
 CellChangeTimes->{{3.720291547550109*^9, 3.720291554984832*^9}, 
   3.720292140103148*^9, 3.721744066285076*^9, 3.721744423116521*^9, 
   3.7217452095729227`*^9, 3.721750164436318*^9, 
   3.721750224136999*^9},ExpressionUUID->"ebad672d-7399-45f3-9b4e-\
78d58d28f479"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
   ",", "\"\<LongDescription\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.720292162008459*^9, 
  3.7202921698141623`*^9}},ExpressionUUID->"e2da36e1-f709-48ef-941f-\
fee7aa2c3725"],

Cell[BoxData["\<\"\\tThe data set consists of 50 samples from each of three \
species of iris flowers (setosa, versicolor and virginica). Four features \
were measured from each flower, \\n\\tthe length and the width of the sepal \
and petal.\\n\\n\\tThe test and training sets were constructed by stratified \
random sampling, using 30% of the data for the test set and the rest for the \
training set.\"\>"], "Output",
 CellChangeTimes->{{3.720292163264064*^9, 3.720292170220056*^9}, 
   3.721744066352091*^9, 3.721744423182344*^9, 3.721745209636447*^9, 
   3.721750164503029*^9, 
   3.721750224220298*^9},ExpressionUUID->"4de2dc35-1a96-48fd-8a60-\
489478ebc593"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
   ",", "\"\<Dimensions\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7202915461333647`*^9, 3.72029155469352*^9}, {
   3.720291597330969*^9, 3.720291599698011*^9}, 
   3.7202922028928003`*^9},ExpressionUUID->"ea260498-47f1-4bba-b708-\
3745f1a129d9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"NumberClasses\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"NumberFeatures\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"NumberExamples\"\>", "\[Rule]", "150"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7202916001285477`*^9, 3.720292153927156*^9, {3.720292193900436*^9, 
   3.720292203955687*^9}, 3.721744066418336*^9, 3.721744423249433*^9, 
   3.721745209707808*^9, 3.721750164570055*^9, 
   3.721750224303705*^9},ExpressionUUID->"f2b4aecc-8dde-49b2-9be3-\
67de0b200f06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Iris", "WolframAlphaLong",
 CellChangeTimes->{{3.720291785719426*^9, 
  3.720291813321268*^9}},ExpressionUUID->"f42f8e14-039c-406d-b1c2-\
6294d4ade54a"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Iris", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Plant\", \"Family:Iridaceae\"]"}], 
       
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"iris family\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Iridaceae"}]], Identity], 
                 "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"plant\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
               0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Scientific name", "scanner" -> "Data", "id" -> 
     "ScientificName:PlantData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Plant\", \"Family:Iridaceae\"][EntityProperty[\"Plant\", \
\"ScientificName\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox["\"Iridaceae\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {PlantData, "Family:Iridaceae"}]], Identity], {
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}, 
             StripOnInput -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Image", "scanner" -> "Data", "id" -> "Image:PlantData",
      "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "imagesource", {}, {
        "http://en.wikipedia.org/wiki/File:Iris_versicolor_3.jpg"}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Plant\", \"Family:Iridaceae\"][EntityProperty[\"Plant\", \
\"Image\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1: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
/Ebll6dLP2zU/bjS92VyRnV6dU7lcF7rUkn9dHZBW2re8cKyiv6M2JHSmHPN
wfs9vkdD1r1x/d68/uGS9eW0/4sB/7vz9X87WfR8tObO0tidwdGFhoHmwu6M
jjMnxu82pPXZnScQf4O0aDq640xuWr1Z52cQJYAsxSAOsjNLklyjilQp5VFY
kR3H1sNUYpy/Xbu4V9F6LjBwM3lyu3jyzvGS0Wi+D9BMgKIH4iimOiwUeehs
M45pxkAQ2Q4CLIYVS9YCLvzVhGXqYREhcGwDjSYC0E/yDTS1X6gOCoVuBtuK
59hIbDOBrsUTUIBhQucGmBwqh8tgs2gMNoHNJXB4ZDYDjzDJFpk41mwM6TQa
OlHDwNql5CgLy2TCWbyE2r7QnbeTywfVJ5/WLz1uXTjoWng4uHAwMrs7OLPd
t/xwACaL0/tDixc6BCqMXMUWIsxQtDcx7LGZJW6XQqflMjhApWM6o8R6K1tu
IkkNBJEJK7eTlD6qLsiyJvJhxo8qlQarxPXr4ZbTgdZT3qFT5dW1I2ONh0u1
3y4UfLGc/els0sNL5V+eTHtzufKPy7k/1Af2GxN2BwsejRUeNMVdzFHPjaS/
LFRfqdDvdkZ91mR50qQ7aNPsdcj3htSH3ZL9SefLYdv+XPhwNf2LtZy/XSr6
ca7u1frs7bHFxqHTeeM3KoZvVRRNx9gq2ME2btPZYMtqWJ9I4ugJOARw9Rhj
DDOUL04/blb72UI7SRwF6hai5/ZT2i/Y+2+m917NG35QtnLYFV9jFDoIGi9f
6xTqXCJES0JtJLoB0K3Q2GAhdhQNoKmJTJhH7DQoiHwPFRYkVfgapidABVge
DJtMqQdV+sXKIHpU0XyxgykwUSQmFjQqCg1XImdAS0+EboEBGCwMnQE4LJxS
xDLK+XohS0oHYjKQsYFBhlcpMToTPpJv6JjJuf1+dv5Bw8Zh3+qj3pmdjpOP
h2A2XHkyvLjft/5w5OzDsasP5+t7c4Qwy/CAUstwx4q1TropmiOzEugyIHcQ
nEkILHuE405HvLnCYJE8XKlMqtGlNZozWmzxDWooQxk96sGr6b1b8X0LFYU5
3YPlT6YKvpiOfJyIfTYRfbCe8XY24eWpvF9Np309nPaqI27vYtuPEzkvinWb
zVH3ZrM/FCsv15p3eqJeNpv2m3U7XbqHvZrHQ9qnnZKdUdPTIdPhnO+rpdBX
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
K1MGZYpoidQnRJ08vo0NIaAjWK6EyJeRaSgGxwIEDmCIcCIdS2kVGJwynV0i
VnFoXCyWfLR/BoMBZAIgETEcNk0qQ/k8JpdLNhuldDIg4mDkB3IV3hcSphQY
j9X6KruiawY9XQuh+jH/wo0TN9/NLu10zG53rDwdXDrsX3jUPXfQubDXvXk4
cvJB3423q5sHAy3LsXVz9uZlT8OC88SkpXRYl9+nrpywFg0aSkfM5eMOWKWj
9qIhS36/8VgfpFlzfL04WCsVhYE5F+tKR9bPXfzmzX+7Nff9TMGLRuvdE+I7
VeKddv3rBtXTdsvbGs2LFteLfP1SdXj1m4N/313/u2zDVgr/So32bYvqQ5/h
LZzBdsVBu/JFLfqqWfVllfLlSPyX52u+Xat8PJi11ZNzpqfgynDD1bq6LktA
SdcBeRjYckTaVFZsraj3UkbLmRTfcUHZTLBlM9uUzxYn4lzlAn4YBBuQ2lP+
0gVj1oj4xJqp+bynYctaPmfgugDqAamNtqwuv7tUwYvGC/zkoyAvBng+oAoB
R0FkyvEwmxDlR9vzSBIsXU7mKGlsBZUuIZJRLEfAYnBpDITKETEZCBFPP1oJ
JXMAIqfAkhlYOgeqsfCESjIiI0hVDIggEQsIeCyfxzFqdUqxVCLguUx6hYAh
YEF3CgxGcnqhuXEw0jqX3jgTbpq0tkzb68fd7YuR5QedF17Prz+dnNnuWXjS
O7ndvPy0e3G/6+R+/6m9idUHU3c+25i9XdK65qudt52YNpVN6GFBLi0a1ucO
qDO7lamdipQOeXyLJFiHRNfwYmtRdzHdXczWZZDEiUCaAmTx4FhN4dvXP33/
yX+/Pvz9UNKTStnNUuROlehRCXfnuOxpufKwPfy6v/DGm/s//a//8z9WRvdS
zfOJwvNV2jcNiveQM1sl263yu+3qg+OCp3Xq19Pp3y4UfblY9r4j+e6JmAu1
6evFWfUZOfHOJIEtncVxA4YTmLIZ1mM0VxGtYMg2ce9E+WxsUpuu7Uxu8WSc
rQhVZZDhGGYN6Zq3YnLGpHmT0vozjiMzs2VL70bU8cCVJYo02tK7vP4qjSEH
EYZIOCUAgqOAQBEApvAonjOkBJIcC7gAOhYSF8MSU9gSKlNAonCw8DOQOSGX
QjJkCYhHSkfDEfAA5bPCMVFSERvhkaB1UajoOgPHYuGpZRQ5SpDyKTopEnQ6
DDI5HYuzqlUes0YjYUv4mGi3uKzQ396UPjZUODSQ2zec2zOc1TeW0dQV2zwQ
d/5e+87nM6vbjcsHrdCUzuy1n3w+OvWgd/XJ9PrTxdOP52+/Xm6bTk2pkkdO
yOLLlP48kTeb588RROco/KkaGJf0dlRvoyu1OI2OYbKz1VE4qQ8YQ3y1hyOz
UdQ2msbOPHVm/sXTb1/s/XTz3PvJrt3BqpcjtW/vbfx8f+vH5ZGnZxZfXTrz
7NuPf/nis9+tTu9W5Vydb//u/sl/aojfyVPfrzZ92mx7W4TcaNbd38z7ZiHv
zXHvmaLAXNhd7Q+lx+TECH0Urhfw3EAaAGIflqU/Woxw54qUSThtGjZ/xDx1
p6xuIf34eEL7ehqE1ZJH9deglWvRhUvG+GFK+Yam5oy/dj2mZs2jyTjayBSq
loeKJLEZouIKt8vFYvMAlQ2w7KNxw8nwsKgqEkWIOeJGFIb3v/pVBqAIcTQx
iYziRRIxjUHHHd1jwXM4JDYHx2YCDhuIRXivR+5wSQUoQSSnao2oVMNT6/hG
A89hRo1qrlLM9Np0LrNWwqWZlKhOyrBo2BYtNSlWWXLMlZGsTY6RpiaqU9OM
8SnqSKYuIU3ujefmnbAsXK69925+Ybt5/dnAytP+md3ujVfTs9sDK48nTh9O
X/5kemW7ObVJ6i1g+AuUUj+doQc4EeAascZomcQg4opZWNrRrVQ6B/I/0Ebj
9CGKyEqHbCM2UXVOps5FyytK+Pabn188/M37l//47vE/vNz50/tH//Tj5//3
271/eb/3/9xe/9PS4OuR1luP7/3QWbc+3nnj091/uLX+ze3lH6+O/rHAcqXY
fOVC009n677qTrl6zDuUHWotLqwJp8cYw2JdIlccS9VEeGQTwGkAyw4QH1Ak
Y8zHuNIkOj8G6ypmN68lj14uq5+PtG2kl09GOcsYJbPuExve3DlF9oK4YlNf
c9ZbtepO6kDRMIA+x1MskEUBXRQ2p8iSkqaRqbEsIeCpCVw9laoj4hUASABG
BFhKAFsUix5thkTMGF2Qo/azxQ6y2abl8GlHa/EwFJKOlh7IlKPVB5WG6fLI
OQhAJXiNkcPgAp4ErzPzZVKSQctRK5gSIcVtVUa79To5UyelIQxgUZEdWnJK
jOx4rjvJJzaIgFaMgZ3AF2IEQsBFAJEBUDUobYm98mT6xruFyVtNp1+Ow1ix
sN+38nho5dHI2uO+1WfNFz5vaT5jD9XTEuvMea2pOfXZSUVxKq/Q5JcLtUKh
QshGWQwegYUCvhIo3UBsA2QB4CqYRp9EbWMYvWyDVTA2Pn376qs7l7/98OIf
Pn365bVzt7/65DcPzn17cfKntY6fFlt/GKx8uTb89tnd3/z47R/uXNnevfH2
0e1f3j373fmZzz8/+Pe1wRc5/rZEX67RqYvNdTRNFzcvFvor5NCZ8GMBw3e0
OIjVAaAELCdGm46YCySqHIalmKNIxQSOo71bGaNXCmsXEprXUyNdkpJF44nT
1owptHTDULFhrj1jr1g0m/IAEgTyCNaYxSKqAGIA/mRhaq5R56AK1ICuBETF
UY4g6I92mDPMQOInaUJMkQePurCqaLouli1yEpk6UD3kyKiR+dKpxiBRZoUE
C3BwSElAKGVabEoeQrJYxdnZPoOBxuYAuQJodCwYCUUoGUXIZr3Ya1cbVByt
hKoU4iwKipIPrFJcxCfPiNaGzCKDiI7ySBweEfYGBguwRIBIQFSivLQl7ubr
lbXdwaXd7s0XY9P3W9YPByF8y3sw6U+cOpy+9Haqajwvq+LExNyDuelPpocP
Z8ce9LedP567khWazE+ZD3tbnKZMFFFCpZaYyGwpnsLHoUqaUEW3eOQ8MTU1
I+HShbvL0092r/34xdtf7dza//zFL7fPfRwq311p/K417UVf/qdLHV99/ez/
+M23P758+ujsqbunV/bv3fjwdP+XY8PnVAqv0epANFRh9BHRaTLxBaP+ydu1
RaN+QyZOkQQ0SVh9MlMYTUGiaPoMqT5bIEkHlhKqKYdizCKmdyqn7pb0Xsiv
Xk44vuIoWlaUbSjSZzllm+bKTWvNaUveuEybArTJBHuhyJTFF3iBMopkiKb5
k0XBFLkjjBgCLKEDJ4oiapO5+nQe/Iwxna0M09VhhG+n0bR4khIL/ro/uWCB
WrTAyp/h5A0jaZ1ofDXqy+Hb4rk6L8Ps4UfS7Wo11WHj56a7RHzAY4CoaI3N
oRKJ6SwGRiJk2Q0Ku0GmFNA9ZkmUSaQXEYUkIKaAWJOkIOT26+UGFSKXc+lU
QCYCtYrhcIm0FrrEgKsZzHzw4fTK3uDG09HTL0fndtqX99tXDvqW96eXt6fu
f9havDDf1rY+2HzYUfR8pPzDROXhme6vb0/+ea3lV482/v3O0p+3pr6ozBoR
CrQEEhaVUKVKlkTB4SJMhUqu1Eg1el5Dfe3c6IOFgWfXNj7/ZOd3n2z/+Nne
n15f//3jzT/O1XzWnn6w3PLV1uiHzx59991nP/zw5X9/svu7gZ6t+9sfQkm5
SovBGKOg6YA0Huc7jkojgOUF/hJm52pm11KJKU7Is+LVMRxTCtOUSjFkEmBp
U0mSEFAnk6y5DH0mKByxjN+qKJn2lixpT2xpj63y8laRklP66i039KKhBoYm
EVjTeZ4yJbQu8liqKoaGmoHchk0vdWSWOCxwxKwAsQFpNEEag5XE4sRhDM8L
6KajJzuACOCkAC8BBClwt4OYAZA0iouM4jOmaMWLgsolacWMvKBfklqLVPW7
zNE4Gh+EE9R+vwzhA62eabDwUSGRRAY8NsltM/jdVgGDqJPyoszysFtrV3EE
RGCR0LKC1qBNplEyJGIinwcMOnZSgjkhwQTth1SPN8cK+lZO3Pt4eu1g+PSz
0dWH/fP3Wzae9kKHc+Zpz9p22439U9cvPe6puNISubpU8Xoq/8FG1fNLrV8N
Z26faXu32vJ8b/0XV+fe+A3FQobNpLWoZGIWk8rlsMRiodUO2wzNzU6YHDgz
3/uwv2r/wam//PrT/+9PH//X7z/8z3/6+j+uT3/XmnHj2tRPZwe/urP65YOz
35yf+/R4zsLi1M7y8l1PMJmnQJRejj7EsqaLVGEmywKO1sQlUK3otf0Zg6u1
CaVmGMDJBmBKoxsiJE08sGfSZAGgjMdAS6NLx9iOkY6NWnPH9Pmz0uI1afYS
s+SMuGRDWXfelT+l1WUA+GFzMt+SLSabAcsBBG4MSwcQPYDwHav0ZhZYgxGZ
M8Q1BZlyL07kxahCVGMKV+Inoh6sNIqkDB7ttZBGUSJ9oki/MLGXFd9NTewn
pI4QMyaImePEshX+8ZPiygVZxaQ6XE2Pr+DntRndEYbKBox2slgBODwgFFGi
fdakcLSEz+RQsdCLBl3K5FiD18yxaykJUeL4gFShAFIZMFto6Wmm4gJvQrwq
yo+GIxpLkAcN5OTl1rXd4bVHI1svp5a2u9YfDy4/Gtx8Pjt/dfzGg53b57/p
zt/uSj5YLf5uOvLpSvZXF0/87YXqn651/na27JMzXb+4OvGHjb5vNkc+rAxv
5ydVGxTWSHxsRrovMVGfnm6LJHoqCitOTd6bbn5xY/ZPP774j4/b//bjJ//v
4eU/zTQeLLY+P937frP74+2Zn1c73/WUnfv6+b9cXfvk/tV3blecyW42+RRC
A9EYRkMFDp6OBu2fyMCmS6CnAgVd3s7TubHVSm4AyJNYulS+PJZoSMCrYoAp
nSoNY2y5PEMG2VwI8ibk5ev6jFle5iKzaFNYelZWuWGMaxUjXiD0AFuqGKZ4
xI9nOIAwCi9x4+UOQlSiGHq/7BxrVpY5JcOQmKb1JUiUTgrfghG5yTwzYBsA
1wQ4RkBRApIcWHPwtlyct4Ke3CbMHlXAwJIxIcic4iUMkbJm2enTlPyT3IYr
msoz4mNLrOpV9bEGeVqezOalqo1ElYYR5TdkpMVajQqEQ+AzgQzFhKPlaYnK
KCc91s/KyVQbLcDuIqamq2prY8tKXIEA4o8WZOXbYzI0SjdVHk1bvN1768PG
6v7QxuMROIlT+23TOz3nHp++cn93Yeygt2S7L31vNOXZcvbHjfzvl3O+PlX6
zWrVu5nyw5mq94sNv1hr+82Z3p/urfzx3ua3ndVDWZEYj4fhj6Yb9FSFiFaY
nbS1cHGt7+Xpvm/PDX5+e/GHm0t/2N74x/H6xxM1e1env1vveH9l8O+ujf68
d+b72uzBB+ferk3esup8Ho+PzaPCgIzjYxE9T+0WiowUlgIIzViJj8z34uIa
bb03TqSNusQZwFLIduWLjEkCfRwCGU+dTBYG8OJYoMoEWaNowaIiZZKTtQRZ
lFe6Jc5fFDtKmCwbELtw0fka1E9QR1hHCPoIch9JbMHAACiSAQEP6FW4aC+a
lWnLK/J7YmVs1REJMFW4o62hOipqYQvMHMTEpuiAJSJwZcoVPpI5nqULYgI5
lNIuWf2svHSUXjJNzp8ip48TM2e4WQvSvJPysjOymvPKqg1V3jCa3MhNq5JE
ihVxaTKTmeywMMMBaVy0JDlG7DBgQ15Kfo4KXsyMdFlzlbciR+szEqI8/NTC
YHxpfExZKKE6DJvKkcRdvdF+9XDq8ovFhd2hlRcjJ5+Mr92dvnL93sWZL9uT
9vqTHnfH3JvN21kvfzGd+2ap8LvxzHcLBV8tFHw+e+zdRtM35zq/P9f57bWx
r68tvDTIfDKtjKOkSWw8k1fjdfgebD29MvV6pfXF5bHv7y79fvfMn+8s/7TW
9XGz84sz7Z9d6f/6bNdXV4Z/rEu52VNx9+X+bysr6hQaLk+CE0iZAAdwhKOl
bb1dpHeLTWGZKVliz5NpMxiqLEKgDu24mNa4HvaW0XQRoAwDcQDAgCBLpPMs
JKkXm9rMKJxmJYySkueYmau8Y6vsyhVGdjdZFQIcK0aVxrLmilArAaY8DAtg
WQDHI5NQOgElAc7RPisiCkMfkBlBSpaxrj6Snx902hVUOulo6ycRQ+ZS8FwM
XUIOVXCkfgDdSzBHJrIQ4J8wJUCgxen9jPhCRX6H/viUqWpJWziLQGrNmqRF
RrlpY4LiFXntGXXTWWXPJUPHaUPJAFI3ai5p0meWq8KpwtiIWAMDiwV4Yuie
EDmYyMnN1CcHFXol1euV5laH89sjWV2R0PGotJoEW7wyKlN788XC2cPejWed
k3uN688m1m5Nb21dn2t/2hS+P535djz5cCTl3nzeUwjZqYpfj2e9mcp+N5P3
diLr5XrDN1vtf7Na/+FC/xf31j5W5neIFDKtR6nzKwQqjllnvTB/98Hax2sT
X92e+/W95Z8Pr/7zg/W/PdP75Vb319dGf3lr7JcX+r+6MfmLM8Mfzky9eHrw
RVFRkUjJFMhoQpkIR8aojCSFGThDHKhHmmgGzwZEPrwkQNKmspgu4CxS1C3k
184V+grNXCdVHseHqVCaSIK6posQ07pZWRPUyCwjaZ6ZOEst3hBXrQqjSoEs
CBAX0KRxlQnco9ssVIDjHN14oUgwVCmWLsfDIxkFRP7RPRmOGAjlWJ2RFpek
LimPUVvoVOToeSuFnaH0wa/EiavgaGJBXIkkUmJQOxnQjZMYGDbConNoOosC
JixPsjCpXFAxpOy/4GjbkjdfkpSs0o/N09LHqHHduJwpQeM5R+slT+NZc+Om
uW5NXzWrPTFtTa4WODMozjSmL4NjjaU5giyLi6EwYF0hUWp1dGpDXFZnZl5P
YV5LYXoVzPzSuHLDxZc9F950nnzSvPF46Or+mSsXtqfqDgbTno0kvxpPetUT
e3cwaXcm9/2Zmt9OZL8dSXs+l/92OvfVmZZfbzT+zcWeX57r/eLKzLsrG4c5
xWWuBC9q4smNsvqa9ntbLw7OfXtz7sv7Kz89v/yvz6/+/f7pn+8t/u7WxG/v
TP/26tDXF0c+uzz5ydXVl6szl3u7e1QagVjFkShFFJrQbs9w2PID/qqcrP7y
0qmysrFAsFhnjVXbXDyNUOERi70MYzL/+GSkdS3XXSxge4E4nsAPAmEIBOpY
acP8+EEixC5pjpa7hhatyPPHxepkoIwDyhBOn4miPhZVQibzCGQEQxMBsghQ
xEc7kOlSDE2IJ3JwJC4eJl8iExBpQKwEUXH81BKzOyK0J/Dt8QJVFEPiJOn8
DGhiNV5SdJrIFmKafTS+HCj1dL1JoFDxhFKayY5qbGRPHKN5ONg86WtYtDWt
WZvPGlsvmRrOq4qWudDBZs/wcuYkVaedzZdj2i/Fdl+PaT5jhUaoeklWOqFM
rOG4s4mqABBYgCVOk9NwrGKwDsKX0pZYNJZYNhGf0myFSadysOD849Wzz0fm
rnVcuXd56+TOSPn2YvHHdt/+cOyL3tj9jsD2eMYnp2t+PZnzZijlcLnk/WLR
u7OtP67Xf3el94etzo+XJj/uXvt+fvVcZsUxd8SdlJNycevezoW3b+7+9s3N
v3t64U8HZ//04urf7az96unZv+yt/PH+3E/XJ7+9NPGyp3KuuqjBYtBi8UCu
5mn0CocjMDZw4crpr1YnP55f+Ony0s8Ptv7Ls+v/4876Xy7M/mJr7uvpvp2K
wsmiwr78ktbskpq20anO6elQfroiIGfYgDYbJPfx4oYZUQO44DgmeZ6etyIu
WzaWTTtMGThRABoesj1Pzncz6XIyjn10lwzHA0QBoEGlkx091ciSkqkInsA+
egICVZDVFrbRwTzavRAUGEIitV/IUBGPFgSZICrFBEGHwdCdzPVGmDrYRdDn
yIArwDU5OQoN1R/U6Y1sDB5YnazjjTEnur25DVpLhOjIZFaORbeuJdatOQdu
+mq3RMc3GQVLoHCJXHtaMXg7YfRWfv/lY6O38rovJjZtegvG1DE19JgqUX53
7Inx4pKBsrTW3Nz+/MLRgoyu5OyOZHeWoW688NqrhRuPT928ub8+9qg/5x6k
zaHQ896op/2hZ82eB0ORZ6dOfD9X8AHO4FLxh5m8T5ervt5q/9V85XM4TQ9W
f3du6c3q6RudE4NVPTVdo4NPDr64f+6zzw9+/vrRP728/vePLv759e2/v7Hw
1cOzPz86/ceHm394dvmPl+Yf+c1hm1lns0tVei6WAMRC3fTI5Ud3frqx/u3N
5a/2T//22tTXl0e+uzX1u3vTf9mf/+eDhf+yt/zPeyv/9Ojsv7659z8f3/yv
q1NfTw28WVl6k1PUoI1ReSr40Z10dw8xeozsHQbpi6y4fmrZgrXnfF5Wl43t
AzD1W7PlCCQ9J52nJyI6msSMSE1CsV4o1PDYEiqJd7Tkh6rxEj1ZaeNAFVZY
EK6SQpYCmppAluIA5a+L8mTgSRU4k3kMFdAHCdHZiMoHUBNgygGqB9GJSp2d
ZbRyXFFCOgtwuCAp3dA5ml/eFiezYzA8YAoT4wpFnixa9DFGzYSned4/cCFp
7FpK+Yy2ZEp+Yllbf8rccSm6+1r8yHbWxN6xgbtpnZfiW9cD1bPRx6eSjs8W
p3bn5wxXZ/aVRppT0xp8nkxJ92zp7uO7VzZfbfS9G8t/Op728mzpDwOB50Oh
V82enYHkRysVH1fKvx5Newl1cDDydPnEF5d7fr1Y9fjF6T9fn/3VxZNfXLn1
pGd6rHmic/Pq5a8+/v3bh7///pN/ePvgdw8v/u7D/v/16NLvb6999+rmnz+5
9ZfD679/v/+XzbkbUkTmdGmsDqlGK9WpbUPtW4+v/3x64g3k26tj37068687
M7+/OfSbC23fXev5cXvsD7f6f317+JdPVv64v/zDrdkvb859vLX0xb31b68t
v7+y8ba5fTirPeSsZ1k78bEzdN8giEwyEroY8U382sX4nq08VznTeoyORlN4
DgpDD+gqAO0lTUzCMDBHDxzRMQQG4EhwiBIrMRFVDvrRo3BCDJRLCNnR3mw5
wPABFFA8DxD4gG0EgWOoLkwS2IE9gir9NJg7YOggSYErSeSIFxg8DE+cyGBn
0LmAIQTJlezSPnVCmURqJejd8vjUeF/QK1EhoVSrzAb7gdy5HO47FzdxK334
ZlrblhfOY81pzfEz0Y0Xjw3cbjq6BbrbMnu7ePByfP2mq/5KuHA1WLySldKV
lNueHSlJsAWN46MLi32H89XvF0s+TKW8vFD+64XUzwdjn7f6dnoTt2cLX65V
fjuW/noq+31/4pNzbb8+2/bFjZEvXm394czgx/1rP+88/FDV2dI1P7D38uXH
z/7+u7f/9udf/I+vn/9l/+JvXt//tzubP7y8909fHf63j0/+5e3Bn94/+Xli
cFkulUUHrdGx9mB00tz49ac3/3x37Xf/P0lvGdVWu3UNb1ySQCBuJCEhBIIm
AUKQ4O4uheLuxbUtFCta3N1KS4FSaEtxKO5OS6neft/nPOc5j3wyvvNtzjvG
Ghn7Rwb8mGPONefOutY13fy5JWOpK299qvq6O2e7LW2rImK2OWVz8P55Y9La
06Lzxbbfe/O2WtOWZ57cTFZ+6Mvf6X9wPNnwc3v16p17oewgskayNDdHhJch
bJIqaRYjx7QFBKG4hHr7oDIj0yhlmAboSKWkaIAYHhDB3qro7cgZ5Pa8LUYB
SmEi5PFikkgAghECXY0IiBdGSJYmLY4HhFC3B0PEUIA0HpBAAQgWQOAIqVnh
bk98mOEoBvJkPkxOHQALqQ6omkppmcnT2BBFVXkCFSFHECboATZRZK9EHU0z
lDIb6eQusHM0RGPE3L2NsWQAp3I7CW/oSzYLU/Z/aB5f55XWFpLVE5LS7xzW
yrtTrxzZqJbeZpzXYVcyFFg4GpbQ6x3T7x3R6R7e5OKVaRCS4SCw04+LzK9M
X33gt1but1Fg9SbLcALM8hlG0/G8Z0km/dkOL0AO5touPHR+n2s3151+VRY8
M/RwvT1rtqtwb7znY23T0J3YsOTijJX9/dXFbxuzv16s/77+6nqs9fTNwG/9
DWfrb/57bea35VdfNud+rLy+iI/OoJIpNGWcMpNW9KBxqGVnrOnHcPnn+pSF
sbLztoy9oYdf6hJ2OzIvahMPOnOv+x7cFIXODxXfgKLalrX/7NGn/ryzlqS9
4dzrgZyb2qij3orTO7Ep3EA1rRQZVhJgnCNukiyp4QYo2wCGgXLuWWqxDfY+
903xBlA4SxrPxiIYcBmaKBj3YCRAjgggyUIIgqiUrJColDAgJSQCEwNTgyga
AKkHp0sBsmCvhMspICEYmARCQkxWVFoeRWHhCdoAzxVQswXoAkDRQA6hKqOo
i5ehCkmSAAQNYAtoKKI0TYXAUCVSVOWc/NUDEglWPuLGViRjM46Lu4MyC2/r
pWDuiuRZEA1tFHkOcsbu8mZ+ChZeis5+mgHhhg+ehFf0pzzsicofCEtp94hr
to1rsUhot0jptskccMl56pczEpjaF5DYFhhS6pnyMKOneqUtaavEezbBoD/X
7XWey5tUwUSK/lgaf+yBzdwjt+0HTmv3Hd4Wu7/riDt/fHepr+DsYeiL1kfv
u2pX2xqf29t61z7p39m+3t/9cLz97WLjf2YHfkw0fxyrO5vqPl0a/7i98G13
7bfV+T/WVr/FxIeYmuvwOZblOYOjjYe9JTsv6i8bM5fr09ZaM/fbUg+bE/dB
gNrvHT4Om+vLPW1P362NXZ6q+jb04Kz/wWlz2mZ71u545ZfBh5fN6bsNuQeV
Ja94d3jasRitVFnteJhlDEngjmbqAER1gCwAbO6pORXqBFZam0XoQpQAOZao
rJKQNAkgqsLBwjNkKBpIKdztGRZpyu1aDHHy7QOcBgb5WxxB8RRGCYugRcQQ
wiCy4ghheSJSQRUpzwC8E1Q9kxlk/u3bHqy2BIkDVRVgidridB0I14IkgwMg
KEBdl0Bny5l7UKLzmJ7RSD1zhLGVhoOblba+oqkT1itMmcG+fWutbQE1ckUa
u5EsPZka+rKKqiJaArTVHY3AbNuczojC0bjiibjc4YD0Xs/EVrvoesvoBpvE
VrfUPv/swcj7g2mVHXU1+ZPF/q8aI3buO7xOsnqW4zRT6r6WZfIqVf95utFk
iuB1vv1yiftSvv1UU8RhRdByacib9rzNhoLF8d7T+KgCJZp2b9+r05Ofzk+/
nex8v1z/n9ddtyFiqOLwRfPO/vwvG+++Xh7+7/b7v62vf/O948lSo8eH53VV
zz+tP2m7vz7X+2ttynxXwVFDyk5tzHp3xjmIYGvyfmXE0tPCTyCCPTlHww/P
e3IOuvMOe/KPXlb/9Lr+dzCetGbu9Jaf5WW1833VudGyWoniuvGSNlEkbRMJ
Ag3AKQFITYDrR7JKU79bbnmvPkDTlojTlJRWuA3vskRhDF0aT4filWEMHSyV
i1TkIUl6cIy2NFJNUl5ZHGQTKJ7iWECKIAbB3waQ27kmeYCmiUFSJUBTKkUA
dB1RPklsnieCbiICVQZQmgBWU0TbGqfvQtSxRSvpSWCYAFFD1D6Iee+xnl8K
kWcH55opqHKJBpaq5m64uwkcPAOQVwC0TGEmrnjHAA1HP01dQ7SyupQKT45r
RTHx43im2gU/8ox9EpA3EJ0/GFkwGJrbH5jW7ZvU5hHT5Bbb4JXcFHW/urQm
b6os8G1lwMpgyqeOe5dpNhPFris5ZjN5ZtMggmHaTzMt31X4vM+zfdUYflDg
NpPnPdaS/X74yfFk/6mPR6y8vMLUq/UPV398uvr1dPv75dr/jjdcDJYedT/c
mOo4Pl39a2/5l6vj/9rd/O39+kcLK0tNDU5d2ehA/fZw1Wld6vJK/9+Lw6f7
H17WJ+5UhK02Jew9L/paenfu2aPP7WkHoGb2ZB8PP7wcK73pzT8Fa7bpr2el
NxVRi225OxV5r7PzKiLLXRwfkLhxgCARYh2KBQM4mnQ7UQagAKIhzP4e1zSa
5p/DiyqyA40HlAJgVaQITBmwlDQxIA1JLDkFbTmKrryCPpzEkyXz5agGSIXb
33NlQCbCKWKyJBFJNADGELCUdZBYJQhaESmBFJGlgSDiDLzkbMNIqlZQWRUA
dEpKAnmaoYiqhQTPBW3gRtSxJyoZinqn0HKazC3voGl6wnhVMW1T4p0Ebly+
hbYJTpWH1BTI6FojnAM5PAsFfQFBYEmzctW28NATeOtZBJvZx9u5pbt4ZDkG
FLol1AXk9kY+GIktGIpK7wtJ6wyLqw2v7mypzZ8u9J7OthtPNxvLcZ3pz/hc
5rlaZD9fYPEa1FIQwVTT1yXuy49c3lUHbuc6vqyImGvP3Vga/eP18KWXWzSJ
pDK/cHh1+fvnj3+ebf44Wfyv0crj7rzdzvz1paeftma/Xu7/43Dnt6ODH2/f
bTo7e4eHpA23bbaXbPUUnZRHzc+1/a00bLYj/bgqYh00um0pRz2ZZw1xW/15
F2CBQjr84Gqu8W8d6fsjj67HK77XxL0HqyvntCp1Liury8jd2iKB7l1BCWhg
+JUz/DI1jF2IMnhAVA6QponLakrzQxjmcQzjMFzsYxv3eCM6D0FlwxkcDEEJ
SlWRp2ugiSqyZC04iQPD60CxOlJEfdjtXiZTLEOAJeshQGSJbBkUSwLOEAZL
i4+hqyHFoKLyWKQsSRyjDFjfpXIdIfZhqgbuNAJXGsABaG1A015Oy0GWbiJO
YIsqGUF0XaUDslUDs9Ssg4jKRlB1c6SlHzU0U2DppaYpwIIc1LGSt/FWA0VV
Ww9hZE7l2ygbOmia3xG4xLt6pPk4p7hZRluaRwmsYgzdMizulrjFNQSk90Tf
H07P682q6+mpyn5VHrjwJHirzHMJVNFsx6mW8JPGgAMQwXjOaIzeeILBVI71
dI3fZq7NdJnPUkP82tvWHytP/9h884uNpR+Xa/J+7fTy7NcvV39cbv26N/Nn
f9FuW+p6T+7m6sTN6psP18f/dXr4y8frr/XNbRnpRa3101MDnxryNnsKL0tC
58bLvjYnbtfHbleGrj8r/NYYv9sQt9ORegL2xOEHn0AmTlX+8rTw40D+eWf2
SWv6AUhVsDqzzpofrbsEJaq4aqiHQjSiAIschF+pxr1654zqAHVz4u18C0mI
aEygOMgZRtN5kThBJCW+ytvsjiaJDVHWRano4vF0CFkFTtNCKmjKErRhOLY0
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
GkX3vkfW9xNRtga4rrI6DmgQRKKeqI472TJOxyRWxyyRdyuhMfomscbGkQaC
KGPrJCuwLBLNLEF6ZhjZ5lqAVsch0ispu7i6fLKlbKvz0dnb1r+9afytK3Md
JNRY7mnDnZV0necPTObDtXr9VJ5E6NRk2Lc2Jk8N1bxTJNHtHZy2Nz4crf96
8vbn0UfLZX6j2TY9tSHj811XW4tfj8+/Tc7NmNpZPmnqqHk8mh7cu9zzf3cm
n6VZvOhNuGqPOu9O/FoXcl7ss/rQfSXbab3U76Q16rIj5hjEqyFyqyP1avjh
z4MFV33ZZ80JR2WhGw+jViKCajhO6krOIsYxKEVbAKkNKPGE+OZIe1dqQJhG
fKahR6SyjjOcbiUtDDYvAxHbFL5uIEWMBXB8KThDcTEmIKMJWISxPZJMyDoy
MmRA+nZvmLAcThSlACEy5cmaKAoHQ9ZH4gykCGYQsFCGYgi+CMZYwstGKcpP
Jy6A62amoEoAOEqSdlY4Hh9iak0zcaCrmEoYeWNppmLKllKmgUQlM0DPG23o
r0g0kKUIUCwntHEwWRCMNAlEa1mhiOpSOpZUnIqwuQ/FwANMLgDTTIipD1Pl
o1lmWL63slmktnki1yKZZxjLNY7RM40zBuEziTYFCWidYm2WZGqWYmacZGSa
amiRrOuUZuyd7hiQGJyeV9PbttdUvt+Qf9CSv99XcNaZvt8QvtkSetQXf51k
MeinWRao8TBSvyjFoWygdIqvbuxo6bK9dHUw/33v+dfWpMlC555ko5q68LHZ
9tPlueu9k6+9fcNuzn7dDa/q7r9O9x1Z7/tXgcfcfeflJ/7HlW4HraFfE/jT
RZ6bmQ5zj4MPK0N268KWOxNWx4uO39V+e178pfne0UT5D9DPdN772J75sb30
2tUrXdkBqxMuq2gvhueJKnCk1fQwmhwshSpMUQI09SWs/SleKTqGAXS4LgDQ
AJYH1vu+Md0eqmgjq2yLvj3twgCY9iifdAuuE1UEc3sYUBZzu8pPEgpIygII
ohQop1gmDM+WoRjIg4XWlpRVFYKzhGkEwMVaIT5Yz8eeaqkn72KhEOSjYmeD
0WSL2bpTbe5Q+W5ILTuYAh8w8sPreEJ1A4QFkXIkCzGskRTZEmoaQbWIkrMK
waobKXL1DYODUtycw7Izi3Oy79u72GrqsKgMMpaCYvIVbUNNHBONDMNZBpGq
FilcQZyOeaKhaZzAJNYE7IOgmTFJMTVNMjOMNTKM1RMkqFqlsqzT1KwT9DxT
vOILHhRWjDbUrU09/Wmm75eWhxst2e9HSi+HisAgtpnu1OSvleHJjHZn3S2L
rnETuN91Ddl5c7o7+WG187IiYOC+fUsiv7QtYWKu63hx9vLTzX/kpt/PiX4w
VLFQFDJWE78ONrIU24kyn+1M06U0/YV47qt8u/f3PdYrIw7rE/f6885mHn+d
rfrysuRoOG+nI+ugPescBLEs9H1N5H5RyFJFwZqlS5iaF0Y9EEo2R6DUZAlq
0lr6eBNzBl0RIikNCEvcIqLrSLOJVOMF4Gn2onR7SaNgulOyAdlChuNDxwok
IVoAxkjUMIDpEmdI1ZUFIIC4DABHisBkhUQlAQkIcHsOFyEMxYoiyFIYGgy0
OjCcCAQjpK0lrMIAdLUlLI1kA7wUXa3lfd2p8TF6Vg4yAluoe4iymSfJ3Jeg
ZiGpyAcEfhijYAmzaBllBwm6NUzJGmIWRNFzlxI4U2JjsptKF8bbPo5Unjfn
rQ6WHvQVb3aVLCVFlxsJnDT0dcw8Te2iTSxiuabxGlapHOMEtnmKIWhpTOLN
LNJsrNIdjFPNTZLNQG9jEKqpG0bTjSDqJyhYZqpbpPIMQ/RdknyjcrOzQFmt
HhgYWJp//XF98de9+T9nuo47sqdy3at9WCF2NOdAwwAPQzd/mzsrzzaWerdf
lm3k2tRlW9Um8It6MqYX+0821z6urR0Gut2pzXhSH/8s0by5NmYt2WE00Xo4
1Wqy2HkvVvNlEu/lfael0uCd/offJmt/GS76AOb6/vTL5w+uxh99GnjwoT3z
qj3tpjPja0vKx5LopcLsCRvvO7xwumogBM0Tk1USQikJsdhyZpaqKgwEUl5M
Vk5UBArIKQozzGSZ1hBBiKJlGJNuLs3zouv5MngBqqAkQjmAlCZAFEg5x/Lt
g/SksIAoFIDBARRKCgYTkZISgsiIgSUmcbuEGQITloGLgQU+CKwQJuZIWxsi
X1ciOEAhwBvn56kQHKicnsv1D1cQOMpb+yha+uJNvXE0PWE5JmAahOd6yhAN
ABVLeS0HnEOoppEzwdPXJi+ut7/4c3Py3sviH7Uhi90Jh22Rx2VB808bD1vq
px5VNN6JCzb21TWP4lqD8MWrGCdqWKTyTZMFJonm5hm2lpmORmlWIIK8ELam
p6Kmv4JupBI3hqyXRDPN0jDPZNtm6FvE6PO82NrWbD0rgZmjq6tvWERYdl3+
wHj1/Fjx23vWmXe43pY0Yy++q5+Zz0zH64natwMZM3G6D1MMS2L0cgeyphcH
Dk4OvxcUlIS6+VTEFqdYFqdatCZZdqU6Dme4P0+0HAlS7S9x2KkL2G+MPGy6
d1qRuF2VvNaacdqV9qMl+uZJ+F5NxEZFxGZx8Fa+18Z9n+0HfqsNmTtFeSMG
9jaad3DcaFm2lwyJC8hTAQodYm6mpc0iKRAl0Ljbg2NMHhKhJgYmdwV9uJYd
QccVQzeVcEzic3wZJAuYpCYA0AFpdUDDDucZY8oxJ8vhbjf5QCAAVOr2IgC4
HASFhsPhktLSwpKSABQqCoOJgc9GdqKxmezwFFXvUEJQHD06STUuUfVuIMnB
HhIeyrSyhHL1hSycMSCOHAcUXgfQdyXruuLJJrfnCMBMYebHNDW/kxY8WBY2
2RT+rj/y/UTC6WjcaVvARlPQ+46I7XKP6ZbYtWd1px2NC2H30k39TWxiOeax
SiaxDLtsQ0GahU6CpSDTWZBqZZdrapPGt0gx1Qnl6oRrG8RxdSJVdSKZgiQN
syQtiyRt+xQDqxi+jrs605SuYsjUMGHrmhooszSYVI6tjk+Mc7anfog2WseY
yY1y9X7bOjJTPlrtVnVPMzdEKSVGP6ereGxmbGV35yQmNsnRysfDMszLMDbB
riTLpfGeWW2WZWuSfn2F7+u6oLUij6WKoOP6qC+tcb80h38scn9fE3Nem3JV
EXvcnvKpPeKi3nOrO2T/sffa49irotxNh6BgVWeiuq+0ogPAdUPqulAIBlAw
szM4KB1jGlEVLix/O/nJ4CLoLGkIBpBnCanZkvRdGDwPOucOxSbBQN+RiyDI
SMsCsniAxBPi+SlYx+nLssQkEAAUBkBEAIQ4ICsuhJCSVMDIYeDSKJg0RhYm
JyUhAQA2nrKeIUSBs6Sxk4TzHaSDD9wzGBedpOYfRIqMVrV1hPOMREzs5fSs
ZHn2CAM3Is0AQhdA2W4ILWco2xVm4qqdGPMkJ+Rl0Z1XffH74wkXbZ7r7d57
3XdOS+0XK51W6l02S21nB/LOqnNev3y5n1lc7BvvZnqHYxLONovjm2dYW+S4
8u/ZOT30N0uxMY0xsYu35Hlp6Xpo2UZa+mX5xpUnpNXlpFRmZ9YVlXc1No2O
tD193j70vHv4Zd/Iq96Rl619vSXl1Q+zqvLiKiLd7jnouPJVODyaalN6SV96
UxovNUQhOlQpKUY3szapbXHk/Vjry0D7YA9jzzi3xAibuFDj5FizomzH7qaw
7cdeW/XBF41h132p3ytDtiuj1ooDZruST1piTlqTL2vjjgsD5/LcXz1yeddw
Z7/AcbE29qihdM8nIEfPWYftQkSyATVrJNcZS+aLkQUyatZEFT20ChvD0MGi
lCQxTEmaNpyiKoFWvP35lWooR+cj6AZyaq4kk2CuU6C5khoebHwggkgNQNlS
1iKCo25DRiiKycoLIWRFENJC8jJiaHkpDEpKHi4KhQqD7APxExYC7sYwXe7g
ueaAvp2ouS+cayekYytk7SPnGICOSFa/E6lkYC5h5gQ3spGx9SHZBTAMPRQV
jWEa9nI2oRo8R0UTK7P06K4094mHbq8bvTcbnTfbnA4qjN8/1FmoMN/MUp8q
11vvcr0cSPpYm7A83Lr/6cP/PfJiNiY9xdTL3DXBxSLBxiHbkx9rb5cWHPgw
0yMuziMgxMc/LCYh61FpU2PHi+Gx1Vfvzt4sflxY/bq99+fx+T/Pz//z7Ozv
l+d/uzz7/eT4y/Gni5Prq8vz72c7P7Znz8bbZ+4FJ/IoGknOIfc90nwpns5y
bi4oz2SDtPb0js2RpWy/SH8DGz++a4hJeKhpappLXUXkTGfGUR6ouxlXI4U/
vSj7477/27qE3YnKn/tyz0sD3tRHbJQHva8O2WxP2m9L2G2J3auPPa2Iu6zI
3w6KT9d1UddyRFF44mAA1zNW49krKBoII7iAkqkcz0pRQ+92XB/LhFDZcKqm
DFlFnMgUJbIhZJ4chiUOId4qqrYdzd5P38KJo6gqj1KUpPMQ6lZEnpeiXZiO
Ch+NIktg8LLSEBEp2O0uJtCaikvfLkkTFgP+z7Y0R2+CpQvS1FVe4IHgOElo
Oopx3SW0HIS0bQGXMGJAAtPMCeoaQLD3xLoFUqw8iRxnlLE/je2MYtvg2QJW
dERWTvhggtXQY7eVWseNBputYu5cjcFOOXczFjdSwl0t5bwPRbUPxF9NPP7c
+HBpc/FvoAlZW7vuHnqeV/EoLDfCIsjOOTqwqKkzJac9Jqo1N2G0Jm9hsPFk
auDz5NDN1NNPczM/1pd/3976Yx9E8PDn06MfZydfr86+X59/+XB6c3R4fnp4
c7rxfev1p43Jy42x09GqZwWBWbYMYyclc4G8vi3eSg+qF2EcWhicnRcYz6dQ
rTQ0XPWt/MwD0oJKmotf9z/Z6arebS3ffNp02fhg9UXDTff945bUw9Kglca4
o8rwtYqQ1SKv5abI89boMzDsN6QcdJV9LCvc9Il4oOZIUXeDMs2hBBVJLTWa
Lpuha45RMRWDawIIdUDbBKfNJ2CY4nJ0UZKGDEkViqcLI8kARl2KZoDBsyC3
y04VhCjqsix9lFsg39yFS2LJawmY+g4adGMZ22BNIzcVqjYSQZGVQIgJw/+9
MUYcEBK9xU4SIgyFSUCg4lp8cU1DCRs/CuhVCDyAYSlkdBfFdpPStBfi2otY
+SHMXKH+McqOvhhHX5ytL17bCWoVRhf44nk2VAND49z4xkTXtgfu0+mGz/L0
XmapjT0x3mg0Pao3OGwwOYzHD8dT+nuDz/NcXlSlzL3sv95Z/c+1uZ/GR7Yn
ni3v7Vw2tHa2dQ3ff9D4tGenNnepLH6pKHa+NnOzs/xotPliZvR69c23nfUf
Jwc/72xdHOx9ODv6/OH8p8+Xv365+PPD4a+XG7+cvvt2OPV9a+TrbNPpyMOV
tpSxR/6VcWYxzsq2hlguXVxBG6VGlVaw0TTzNXV2N7ILcg5ODEtJjU+Nj4sJ
jgzwC/NPysmobe17Or7R27O9NPOf/U8+theetGUfjjy8ropcrYrbbb531ZH6
aTDj57bEr61pn1rLT9MzBqz9w8gmNLY/StVJkqItp6Onqq2KV1OWVuOJU3UB
sqEokSMGJwNEJXGGHoakJU/QkEHRxWSxAFholrQSH0dkyYhAAJg8II8BsHRA
34Zq7cNT0ScTWVhNgZKClqSODd7mrraGhQKMLg2hQqVIwmJIQEJaSFxMRFpK
TF4OBhb4QFcXRlMBtpmckSuRIRBXt4XqeyG17CWNfeR07cX5ThJsc8D+Dtot
lOQaTnEMUzALwqrbi/Fc4W7+hn5u0bkhPWGC6kr/+SLbmQbnzU73owr+cgl3
uYS9VqGzOhf7zz7/y3yLqaXmf77t/i01puvdq5vltzcvh7emRzfHupdWZ6/a
a17P9H+Y7f7Rk7VfH7fcVbw10nAw0XP05unp+7mPBxuf97Yu97YuPp59vzr+
cb77y+n67wfzf61P/j7X/+N1y83LoqP+xKUnQa/KPZ/nWLcmG5TFcTIjNKNc
qPZmBD4OQBHEMQowsh5V946Jb1Ne69KrXdCOnp9/e7+91zLYEZQS5hrhHpQR
eb/+cXFdy/CL5acDu7MTP/VVn7Tk775s+qMydb85/3Kg5Ka74OJx8kZpzlJ0
Yq2CnjbZEklzEOd6o7SssFp6mvo8XVWmHJUGKHOElPjCikbSOC1RaSwgJQ+g
GVJKPCLTgIwGgUACKJB0HJSiDgavDEPiRFAIURlZAKQwVk2CbcfkO7HlKBBl
Domli1XiyJr6qLIdKTAVAKosKqUoJoEVg8pLQqAS0hAxmIwkTEZcUkoITQFA
w4NXAbiWOCMPioEbXtNCSsdW2tQLZeQiY+QkzTIEeE7ibtFUtziaQwxF1wtC
NwPYNpLG5mpJwRVlUW8yHAYLbMZKHeYfGL7J03lVb7VXZ7afq/w2nToei+l7
Gvg9gtHzpvyfL6p+Lkp92V2/uvHu80jbu5GWueGW1d66ncmeH3nRE7Xpaw1J
87cDtGUrr/pOlyY+bbz5fvT+r7Otvx+v/n6y9tfm6+8rL77O9l2/av7wvPJi
6MFZR/p+e+LecNJhU+BCucfUI+fnueY9abrVCazsCFqUvby1iZwBVYRMFqfp
4A1s6C4x/NTBrPGFgZ2Dpc/7q1/P9v+6ufmfq5t/7H/8Or+3XTvQkvU4zyPC
zycsLCqxYGBw7fnTy+HOq57Gi7qitYbiubL8kbt3cnRNbImGdKK1rJInwA2E
qgqQHD7T0EBXXZVGV5HH0UD/KaFpKkfRg8gzhXF0cRn07ZosogZazZiuoIa4
JSBZlKaLBaUBQRHH4CWwKFE0SgTLgMGZkopGeI6jqhIHr8Yl6/JVqCpyaqZo
XTcy3khMUgWQpImKYkSgOEkoUkxM5nadsrg8gKJCCAxxElOSzpZRN0QZOJBV
DaWRSoCOhZSxE5xtIqxrKaxrLcJ3kbS8izYJRDrG0wXBGHU7SXUTSTaXUZz8
LMl+NJTTmMTrS9Iavm/wrtBwPlfzzUPOcil3I191rkB1Lho1kqM1n2r4Zrzs
P9/0/DnZdzXasdTfONNQMhrtX9VTf/ms468nhSclKUutucv9xe+f1Z3MDvyY
Hfz5dd9Pi6N/LY7+/XXPr687fx6vvxmruhopPhu6f9ifuduZsNoQPlsX+LbK
a6bU5VWh62Sx+2S5+3i951ir2+ATu/oii/veVDd1KU2aiKoJwSmUnZqhW57N
qyn26ZuuOz569fvH9X+cb/20v/Xp4uPP559/Pv/+x9mPP7rGZ8LT8wwcnZl8
vpGjnYPXXT7/jo1prI1FgIqKNp6FpQgQcDMAZQ9QPQGaDWBgqa6hqsxUQmtr
EVEUWQRVks6BKulKMQUoiq48miKGpUKJLCSCAafrKtC08QiCCIgpQQMUVXkZ
LACTBbDywiQCVBwFYLTRWB4CzYbybFVYHCJXV4VMk8eqi+p7KWh5IGXZgKwK
VJIElVYQg5BEgH+PB0MUAE1ziqq1HMMUqsgXp3CFFNiAIhdgGoiCAIHtWMVM
SNcZpuckbeIl4xCAsfaW8YjE2sRABOFwDXeylsCwJHYwUb8tQ6fvvsH4I4u3
j4znG82POywvG8z22u3PmmzOc9QXSsyOnyX8TwBrMMpsoKd8b7L3cKhjsbpw
ZKRps6NwK8v37VDRLztj/9tfetSad9lf9PN4ybfnjz6MlJ0+rTl/3no11nk9
2XXzqvOnqYZvAwVnrQnrYLpsiV9til9oubfYl7P0/MG7scI3M082ZloPxpq2
p/oOpof2hptmuh73V6U8NkBq2xPM0/gp4YrRmVpFVRZDFTavqlzfDGVu7ox+
/7j56+XBl5OTTydnX89Of1yc/XFy8sfO3rfRl/MRqWkMvgZcGQZjAKqmCIYJ
Dq0FwevDqcZwBSNhVXMpTQuolpG8BhtDJcOpZISKEo5CksYTRfHKUniWBJMv
zTKSIqkDaBqAV5Ig0GSoDHm6CoKgKIImAWQVCQWGjCxKSgIqJo0QJtBl8QwZ
BEWUqiVH0YDhlMX1LRhsAwVlLRRRBaZtQtVzVCHxZKHqt8t+pRRAWYYAoKuR
BZhmJLNAXQJfCGy7SqYSqqZSGlbSRu4o6wCShR/OLACt7wHT9ZQy9IFZBcs7
hWNcI3B30xl6oHp4SWm7Kdl6eFUlv0zS70pS78zkPE3U6I9nDGYrz+Qz3qaQ
RzOVJ7PVZ2OoY6VWW83Bl82xJy9rfmspWksMri/K7YsNLkoNrxht3AuxaO3K
vxypOq3Letv+aLu/9HSk5MNM/S9vWn8ab7x+3vxhovPTcN1ZS8H7+vTFruyN
kYeH4yWnL6tPXzdfzvVeLgycbjy/OJy+OXz3bXfu+9b8183Fm+2VD0fvr47X
jp43DjqzLeJtw0fyR3uTRh+5tqQZPHloPgoiWBP4qjN97l3/2fHKb+d7f14d
/+Pm4n921n462v5jdeH62fPl+dWTus5+HJNK52JMPNWoPCjoLYl8UZwuQDcT
Z5pKK3LE8Uoi2rpkPR4ooGhFCoJMkcEQxSkaSNC04DXFqVwJJR5EQUMKTQMz
IJTEQFBZCDJTiqAkTFIWIypJoojScrcXk0FxirJYusz/GROlaMIxdHGOMcXM
QZttQMHQQVIjObZKNGMUXFsUpiYswxCVJNxeAIRXl9M0Y7CMFRmmMuqWcjpO
GD0HhI6drIUPzi6YZOQhYxogL/CH63iIG3hLC/xlTH1h1ndRYHFdhbScZNTt
VTwDYvICBoOVG0IVG5PUBuLVh9K0Jh7rb9Ya7hdqvStkz5UabD7QX0o3mPBh
Vm31/z9jT657qrcPVv+58Ob66/U/N+Z2V14eZAX15ge/BG1Mf8XWcN3es8az
ZzUfnld9Gq68Gqw47ak47C7b7Srb6ineHK87ne24Xh38+n7088bk5735b0cb
3053f2yuXn08/xOkz+nxL9++//eXz3+9X9t+M/W64XF5iIcHl6pcn1e5OLS2
PHQ01rg18mi7wu9lseNYTcCb9qS15nuLw+UH6y9+P138368H/zpb+4+r7X+e
b//HyrtPi++uJ8YPyio6lNQVLdy0TT0VdZ3gqjYAigPguSArYYpsGZo6is7C
3Y7rqxApiigURkpBCYFlyRI4cgRtaSJHiqoHR6tJwmkSJDUUVhlOVJUDQ72i
FoyoLIaliWApkgiCOAIHQeKhSLIMgixFYslRNMFIKIpVkjB3ZPMtVMAHtJKo
igCnZILC6EnCNUWQGhKSJACnIcu1UNXgM5Q0SP++fQ/0QmKK6mAJcwxh+lZy
LL6ImgnY/uR1nGB8F7i+s5zAFeUaqmLrT71l6B1VAw9BZNzDJOfuAFp9JKMz
TftZgeBNHu9NEXsZTIKP+WuVxtv32SthpKFkg+ezT/6+3Pvno6TRobbd5Xef
R4dnx8dejA7WTY8OLTw9LUt4NdX6vSFvu7P0sLfivKvspKlg90n2an3eWlPe
atvD1WdPDhcGP2+8+Gl94vPmzM3BypeTnW/HhzfHx9dHZzeffvztw7e/Lm5+
Pb38+m7hfXlZVUJUVFpsdGp4iBWXzaXSgl38Zp7O7ix/WJ27WX/1Y+bJ6Yv8
3dqwmerQtwPZxwN5p4NFh0vdP+9N/vnT3r8+b//3/vwvB0u/LUx+ejF4Ojd9
UVxc6h9kW1gdEJnNw7EBgi7ANBFm6EMVNVEkGkqJRSKSkRAYgEBJU+kkFodB
5d7eVYfVliDzZJSM0Qp6cHnV26s9EEwpBEOSpAVX4qIITGkMVRxDlpBF3679
hKOhckQoaEtgBGGaNgZFl7i9ZZWD0zdXBSkJpwIkDkzRSJ5gIC3PFYaoAmi2
NMtSUduCqcRWUNOhyyLEZOAiKKyEAgmCx4kR8SJ4PCArDzA1oBw+VtsIpWuK
Y+nKaHBlHNzU3Hy1+DYoCw91I1er1LT6JLueUEZHovpwquazOM3hQpOlesuT
Mp3NDMbLDOZMnuZKusZ8ktF0X97Xt52/5Mf2BnpndbU/n59/d3D0dm+3Y2Wu
baLr+cvm7We1J635RzXp5xWpJ5WZ6y2FO+3Fe80P1juKNsYazt4N3ay8+Lw7
//P24ted1Y/7OzfnZ98/ff7j648/vnz/8+zjb7Pz+08a+sNC71kKHL3tfcuz
H4019+eFJvgY2jjpmgfaedkZOm6vnu3vft15//Xj+l9bI59eNx4PFGyAzXSk
4PRt3fexsrM3LRcbz7+eLfx+tvTb3vyPvblflya+Pm1bHht8VVyYnXTPg2sE
BjpAWf/WtxOUpFEkGRUWg0wmKZAIRgaGWhocuAxOlaVJZxNQDFGksgReHYbW
uJ0VxOvcviOFqwhJkQG4kjiBJYdTkiUowsFC4yFwhLQ8Cookyt7uuyOJM3SJ
txd0St5uNVTnU0BdRSqJETSlaYbyZEMZmCYgogzQbfBazkoUPhgzkUw9iixc
EomEEggIZUWiOlNRTYlMI6MpCvJoUKIxojSmPJdHpimDXwB0uCgbGwZNTYhj
rKAl4CfG1sRZdIQyutLZz9O1xzINph4YLxTrvS/UXCnmrpYb7NzX3oihv76j
PFIbewFmq+mBD++mj8aev2xrq27vyBl7ntrbHjXWWbU+MTdU8+xZ3VZd1lFf
2W9dpRe9FScDVSdDNSfP609fdp7PjX5Ynv64PH95sPftw6e/3Xz9zy9f//np
4z92Nr68njiorXiamfwkMaqsMLP1acvs3vTV267lopCSeOu4MEHwXeOAe74p
Ia5hHg7+377+dnb2+Wj7+uvpf5wv/77Q/+FlzdFAwdZQ/tabuo/znTeTjQcr
zz+er/7HwdIvW7NfFyeuRlrmB5snX/ROuTu4S0mKkxUxGlwmlUEmkRVwWBIF
z3Cw9CxIq2yqHK59NJKd2HQvrjIpIcfZxU2drYOngV0MT+WQ8Gy4KAmQYQJi
BEAUTPQKUkiyHI6MAClMVcKQFNAggggcTI4IwSnDaRwcRhkqhbs9WU9iyYNd
lah2ez0NRV8eNDPSygBWX0bdgaZkikOwpIja8jRdPJmFUOUo0FSxoJIzmCQK
BSsHh8DhkkKigJAYQFaGc/kKLG1ZDS0pA2OEjT1FVVtMV6CoZci7F1+X6jAQ
otQOSmgm90UCZyRDd6qAvZjHmk9Vmo7CPwuUHfGCD4Zqvcz1Wkn1H6u9P1NX
OVJWXDk62jf/tmtprnJmLGNx8lFXZWTNw7vDTTV9lbNjTTdzg3+MPLnoKd0a
fXI82XE21XsyO3G2sXpzevXnm6W9ruGZrv7XI8MbE4OHE91nE+2ns08/j3cd
vx36tDPz99XRH0Nl6y2pM20pU0V+remOJQW+FVl+he2lPYWZxbnZBVefvtx8
/23v4OZw+8fV1n/sT/083/Zhoupo8OHW67ZPi0O/vB76NNl/ujT9eWP+y/To
dn/jm6cNiw0F4zHeVW7m2ZYGibGhT9oa3mTfe2Kq6xHqkdZUPN5XvVqRPl0Y
N1WcOPckd70yc7a3Zq/6/mygRzHfwE9JQ4+gRlTUQ8soA5B/rxOB4W/vOpSV
l5JHS1JpaCoNi8RA5bHSCDKEoHI7TYFQgiBoUpL/XmOIpsPoXDxREyGnIoHR
hsqrSWmYKrH4NCxTBvwOTYegaqhIYEuqCrAENWkIFsApwghUhAxSHI6WhmLE
ZQliLB5RRUeOogboGkMMLaT0jcW19aX55gwdE8OctJZ89+d+hJpQcnMYpSWN
P56p9wpE8KHWSjbrXTx5Ipk6n8/bz7HZzHRbyAqaSr7b1lb/cnl+Z33t/ZuX
AyuzTc+640pyDcd6fV4MueWm6NXcfzDWsrw4/H2y5bq/fLu3fGO8/XDl5eeN
lW+r768nZtfTi6oDYzKLynufDuyNtB4PPT4dr7152/fz6ou/j7dcN+evdRXu
DhQd1ycuFPmNZbt2lwSMPAhoK4trf5zesPpms7W55fX8u+Mv3y9+/HV59dfZ
9q8XK3+dzvy53Pttsvai8+HOdNfPc2N/ezn89Wnffk/bQnfr9Gj38nTX+WD5
SWfRh7bCb0/yr2vuX9Q8eF+W/bI8e6g4pW+wautx4ltXzuN77tMd+T+Kww9i
7V6VRR2n+S3F+04+KdsoLBwysrbBqyDhDGEkUwSuKCmnAJXFQIXFbl9votDi
ZDKCQIKjSTAZvChGCUrRQiEZUBBECF4EzAtwBQkVHhWtAhNCAyB8ND2Cuq4S
hYYH/Q9RCQk6GV0LdRhCAoYUVWTBVTlYMLaACBLpGCl5IaqaDEFZREMfo6GP
U9bGahsqcE3Rxg44I1ekjgVJVZOTHtFUfGfSBpYVwWpK0OiMY3XlcF5mMd7F
E+YyNA8ztA9CcWMhlP40p9mqjM3GR7MHG59Pjg9X1xa2Nw7bG7trSh91NGa9
m8l4NuhTUWRQU2wz2BZelhk13ryx8uwfjWXzlY8nC4r7GjqmIiPSvfwDneO8
rII8q2qnRtvPx9svXzSdjjddTDZdjVYdDj3aH3p01JqyUXLndWXAUm3w+n3H
6XSrpzWhy49DZ5+Vn3fcX5zuOJvo3NlcuFo9eL91tfv5p/++OPtrZ/PoYvfD
xpurxWfXU93X/dUHY11nM6OH7Q0dTdWtL7q3wX/0suN6pOZktPpjQ8ZufcZx
dcpOrEdvUdKLjpp31flTL1r+0kQmp3r2vG35PJx/UOg10ZNxmWo7GSsYKw/a
qYreaMreywx57uNQoceJQOJ0xZAwuJKorDIgQQLEMAAUDxNHAEhFCEEZgaXK
YKlwMgNNpMjBkWJS0FuIpWQAKgMOBkMSA4KjiyuqycnhhOBYETxNBoRS15zN
NWFD4QBEFhCTApAYYVUNFE1ZBk8VVueiwE9lDZgqVxZLA4hMQNNAStdCzsaL
auNHNLAms7Q4aeH1TyIX3dAlUWod4fTWJM2hePrIfa2VB9p74eQ5b9TzVLV3
XUHfAnUHy+7N/+/f/vW///Nfv//6TzeXKG/XjP6O+YU3swdbk631IZPPknpb
AhenKqruZ3iaeVXlDL8evhzsW0y4V6xj7sLimaqoaRtYCKwi7Zxi7rS0Lzxt
vQDzRWfhxmglmAq/D5ee9OTsDd2/HHv4rS/9Q2f8VU3gbpbFdIbl1AO3d5kO
Y4V3XhVHTLbkLPWWvx/r2picXljZ2zi4vDi9+HK092Nv/df1d9/fjF0uz3x9
2r3W2zrxpKyzu/HF++nruadfxprBprzbX3lck77Y8+hjXdplfvBcSeqzvPja
/LTyV8OrVrqh1ekzGyP/V5rjuB22Lslg7qHzWnXAQZH7+xyHdzmuL/P9poIt
W8Kc2xOCB+/njuEpWtJoKEwBUNCEEFlIIgsrQ5GWp4OkgyEUIQhFGFZJDs+Q
x9BkpVC3L83Ekbdbmkla8ko8vAJHHqciI40AMAQoQ4PMMVDjGGup81QNjJTk
5G+3Z4uLA1BZgEgRU9WC0lQkuPqKatp4DBVAkgENI1EtgTiJBTB1JAROCDNH
Gpen/yi1uzFmyZ9cE0JrDlPsTNYczWa/fsBeuV1VzVqMVZv1x3U4ox61ZK39
f3/86//9+796WxdC/B7npA5NT55vvb/eXN/KTI2dHu/vb6/tqCt7Ulw+0DSR
GFzU1/qqp3usorHBJdjbwMta05Knrs9SM2CahBi5Jtxpa1uY6Pz8tOoCVMvW
jO3q2JW6uPWyoMWaiK2upKu22A8NIRflHnvpJu8S9SfKvHaaIk8rQjbq4jaf
JKxNPPn8tv/764njl6+Wnk08Xd/eOj37x+LCr6srv6+sfns+ttLVNTI41NvV
0tdeMTfZ9mW6/dtY/aeOoovmB8dlKa/rchcf35trL15tLO1NDkt/1rmQElTT
W73+puMXD60n2mKZDcHX/bF/dIX9yDNZyjJ998hlNdF4KNKgI4jXHGbaleQ5
WRDzJj60ia1lQ6KRqeo4dQM6XhWuqEsgcjB4DRRWDYFSgcPpEFmaNPgpThIC
C8AC/z47BtewZSqZk+WYUBheikwnqXFVtPU1VHWU6JpkZ3cLjp6KFFQMEAak
5YTEZW7XHWgZkJTYWA0DqrohQZWPUDGUIWjeXgzNNIDpWclaOzM0tDQfJreV
B4wH0Rv8CY1RyiOxzGe5unPpzDfR5PFYjTfeCn1B1L6RlIt//fyv95M/7LkV
2grZ/a3n1eWTM9MbG2tnGfeqNhdv3o5v1BQ1t9QMlBW0Pu9739M2U9fclvIg
ITjbzzhQzzLG1MBfl22pzDQianoy3JP8OjoWJju+DpacDt4/H8j/0J/zoTvj
vDv9YiDzpif5U2P4xZO7Z6VuO2mC2WSDV6VuWxX+e/fdFqrCNkpvR+gPq5KX
OsreP+/b6Orur26oHRx/8279cunwy9PXa3WdvU0dHXX1jSANn7ecPKv9PF7/
ZaTiU2P+UUvh6eP0mcKk4ZSAhkiPh+FeGUNN7x4kDY01f072G/bWr40w6+++
dzVd/EcYq91F5kmIwkgk82mkWn8KfyTRYChYq+OexVSi+XS81UR5wlpWeD8F
x8MTyPIkKIomhVKGoZlwHAtB0sSQtXHgJ05dHguqJRMqy5CWpIqAhddBq9uo
0EzJcKYMSYXAUGeoaDOU1CkKKjiiMloKA5g4a+lYUv7P9T14lgSdh1DgSKPU
AQ1rGV1XvJIJBKMtRDOG6Lrj9N3ROlayPBMCFo/xsorNc+32IpS5o2oCib3p
3LcZWm/vMabyuEul9ichKmP+pN6+6K8lgfPGpMySqP0n2Udvxz49KmhbmD1J
iKisK1192n6VFdfs5xz/9uVa3ePu86N/PHu+VNlZEZTr7nff2inbyCKVpxPA
ZJjJq1lhFB0xdrFOVdVjo42XvQ+OejJP2lKOWhMO8j1f1kSutScdNkbvNUYc
t8d9rAncTzOfzrWbawg9q767Wxmw1ZZ8Oph3vdD8X1M1vzTn7QzUHQ71Lqbn
P0gqTCxoKijvbShtb63p7OzsH29teFX9YLL78Wp/2U5dxmpj1mbT/Y2Wos2e
8r3qrBlHflSQY3ZF9rOc6Lbu2nfJQf9/V28d3Ni5rvmuBrMMkixmZmZmRjOz
ZVuyZZAtW5aZsZnJzZCmdDpJp0Md2EmHO7g72cnmu/eZfc65NXOrZmrOn+d+
7szsmpqqp1YtrXa5qvXz877Pu6T1fQcWkre+ePAf2fq7EfZqiLDdwb4Wo9/r
5zzsZlytxhxuop+oJR0OlG+1si8PKF+Z9X6YtD3Y6Pmwp/ogl2nZU5hTjM/N
ge9+sxdFLti9B85F0EQYshAJIg1NhgGTI4ZXSpaiGRoiTYXHi5EoTilNQmbJ
GAwphcDFIChF4DcgBRBZA2kqi3Q1RVwHJPIUKqNojiNXU1vI90EkA0QxQhxH
gboSq61DUvSQ2o/SOlhyrbrW238h/aSFuRXjXIlz7jXhLibZD2Zl76Z4j2Kc
B92cV7voDwdF7+n2HbiU+q+nR79569y/3jnxh0dX/3566/3zh98/sfb45NqT
TOx6qn3n7Qc/P7r3+ePXP33r/feP392OjFldKYl3WmkZkyo7mTh9DlGfSw0h
LJ22iamTt45/f2f7pxuzz4/3fbLe/O6F9LMbc+DljxfGvruc/vFK+vcHWj8d
tt5bqHhyJfWnYz1fb7c9XWp4d6Xp3XNj3x4b/OLqyh9OL3710uXv5lePt45F
wwldcr33zP2L567f2N688uadPz88//vjM6+fX3xv9wOvyWfHpj4B+G4f/XJl
5HhvQ21T2FUfrB/pymrEtgPzO2/e+mO7+9BCO5hffho0PTxU9zylfNNfdDAE
P1CFOxLB7T7W0c6+nJTc7RffTGtfSRkeToffOjvzdUNwoRhO2l+Sm1cMlcL3
lSL3gkBSitmLfrHFAGCKZ5ehaEVg9mdK8bsbRjDKcHQ4RYAB9iQq0DQVDi+C
F5H27UVAAmchcJYiVCIPFjubyY4mitxfJvEU6yPlbMPuRsYMTa7UgaYpCvCC
F/t1UiEwQnJl0qCt4+TIG9WkxVrCkSbixX7eyyO8VxeUT7LSt3tYrzYTH9SU
3q8tud/JeHy287/MVb79ycX/PD/5p9PZn7MdD8+tfvKf/+0/rx/7eKjx4lb6
yevX/+W1G7+7e+PDz559e+L+4UjaHpwxBOb15gm5qpdLdRfTXcXYQIGh25jK
HHzp1Lc3tr65OvsMQHzz4L9dn3t+MfPtubGvLmd/vDn7xwujPx6KfbbZ/vRA
5xfXJv96OPbsUPdXxxPPQCE9m/p+seWd9cRHpxe/eOnyN8Pjy02D9UPrHSfu
ba2eWOzoiIedbcMtm6dmXz+SeeVY9p0jmS8nWl9eHrixPHT46OxGosm7OG0/
f7rpzLGR6+dPXTxxb3ronEc1cmzm05c2/zEceNhnvqbMGZJBQ56ytRrqUQd8
OUI6GcSerMAc7WTtgLFpUvfSjPX1+eDbw+F7S6nHPGEASWQgMGVwZC6sDBDc
W4zehyQWoGjFaHoJDLu/GJfz4r43HE9FYEilZBoaOJSghOHUuXhNEU5eVMbK
zcFCYls5VQ4Dgz+SkQ+mSDx/n9CAoIp3F6zG01H7C3e3MGCLcQQ6AlROAhW/
HwmByJQHR1jUNcsdV9t4G2HUej3u3Ljy8bLxoyXNkzT3tX7+W23EN5oQb8/I
fhnkvZ+UPD7S9GO/4aWY7dx4zf251qf3D/3Ppy/9Z4Nl/dWL32xnr21m73z5
1v949fpfHz/65fjd88FRZ3TR4chqjGmZIsaleUpwxv2EMEzVqo4l56+f/Or2
ke8uzX5+KvXh1anvr8z+9sTIZ6fHnt1d+9u9lb8f6v18ufm9U4PPAbg78/++
k95d4OVA95eT0cdH418vtby/lfz44ubXl84+GRyb789OLBxb2rq4rDCLOGxx
f8u4VejqCY5e3Xh6dOLp1tizRM3Jobb2hdHoxnRkeyGwNmerDGAyQ5ULE5mx
2PZo7PTK5OX5oavV2u0G9dkQdz1IX61jH1HvH3WWL7gxG070YUfZoQrcyery
7QT36JT28rz9lQxQ1Vtb6U/6Esc4UotEpWDwSFgqHEMpK6eUlOILSgh5SCoM
BvBRSoDgmAI4pohARtIZBAoXyXLA0XqoVA6Vy/btPhbKzsNzc0ArRFByEOR8
FLWMIaaSOWgMtZgnw2GoOVxJGZNfAoPvfkWqBJ6Lp5YT+Cg0s4gmQHAY9ETd
Srf1FPhjS0ofLpg/XNJ9OCV9Mi//TVrwKMV5Y1r2WZL+bkrwSYLx7gD33Zry
K63U66OGx7Pe9x8u/Efc8EaV4NxrJ/7e5TvcF925euD5g8s/P3nnu4M3N8IT
huCM0Tkps2WY1jE6zrEPpYWwur2KKDPcE904cf3lG/96cfkvO6NfXhr6/FjP
bw53P328/V/vzv3Lyfg3p/t/WG366Gjfs9OD3+2MPb+7+LfV5veBAU/2/7De
9slm11fbvd9cWPhpfuhGomdmYXt2+eS0tcqUi80vxpfZPJ5wsCE7dOT00pPj
k+8sx3eW+jMDrZT1OfSVc5yl2YI7N6w7pyKdTZb1+Znrl3cuXbgB/hKun/1u
tPNWreWIiTytR0278Rvagik7fLmKejKKO1yJPtpMONOIOd2MPx3nXRs13csE
HkzWv5xqvTHSe81gbRd5VYIwk+OnU0w4lLS0hFUAI+8vIeYUovdiyDAw6SMx
+Wh8EZZYjMLtfs0eKStCG0oLxXshKpTHgRDyArK4sBC3u7gTmCvZcjKeVV6A
2sOQ4Hb3HOSVCVS7z+bvKYD25EMwRC6ZjSPxsaA4q0wsGokY0vTMN78aJR/q
E9yd0r+zbn26bvly3fTFjOLJtOy9Rf2zIfaTFOfDfurbWeXncdajBP9h1vLe
sO6V+1P/YyH8VYPw8nr3k5B4dqz+5SPZL28c/+bZ13+bP5fxT6hBCbVNSk3j
LMsol+IrIJj3U2w5Ah8q0O2MjY5fufD9+eWfzqWeXRj88mjPxxfGfgD189bs
X0Fi2Wj7eHedrvhXO+M/3pr/80sLfzk3+sNc3ePj/d8CD841PDkx8v3J7LMz
6+/NZk+0JTqVXkm5qAwnw1CVBLacPTCSvnDq1ZWJ22up2+tjp2odluOrrpVJ
1Jmj5NfvG9PDha/fb//i42NdLZ5sevLSuYfHth5cOvbZ+a1vJ9peTUZeSoUf
RlhHLGWLVvhSAHvQh9ioQB3ppF3upl0b4t/p593sFV/u11/P1Lw81/v64ugj
jz/JtUrpHiLdRWI6KWBeYBjJJBkKyy3BsEvhlPxSQh6oqEQWAo7PA80Rzcqn
mREI5d49tN0t7dCKPLy6mKODk6WFIIKiOXk4HgzMjGhmIUOG2Qvf3bSCLivH
smHl1HwsswxBKkZREYWYHHAukhPJeEKDIzXT8MBUlO3m3cxoXt90PT3o/XrD
9sWc5t0F3W+WDF+kOO8NUB/3kx/PyD/voT3sYz1YdDzt5l891/7HmOhht/Tl
pdp3u43np5qenJz+8f65X56890P/dodrQuxdVFuzUv0Y1zom5FYiyfYcQbhQ
FCrxxlSRjoqtrXuXtr8/O/4NyKIHYx9cm/kJTBZXsr9cyvxure3D06PfH01+
dW3u9w+2/nF55sez6e9W2t8FV86kfzw6+OzQ0Eebw2+eXHu/vjot0GtAPi8V
5TEdGI4TzTESPNX+haXDWyt3ZlMn+1p7FyZaa7z7H1z1jCdyb19Uv37fnR5E
Htiw//UPbyxOTzdWDHY3rW9MPRrrupluvesTrmrKM0H6QYDPjlzzYw74EJsR
5KFmwrl2/E43+eqI4OUJ/avAhknH9eHIjdXBdzqb14V2FdNHZnooXC8DiOdk
MMwUqgaP4MGKaTmFpD1wZj5OWFbOKUKw8vBSWBl/d/V7ngMp8eHFLhxNW8K2
wWjGAn0lVRuhkZS5LCOCayrPI0K5eAgvLqLKSvH8YpYSw1YS8NxSPAeJJBfT
BXgGGyni8OJVi0n/jgez3M69uuB4suX7ZHN3u8aPFozvLpk+mDd+Mi58L816
a4z29ijnvT7qa13Ue6PKNzq5l8+0/RzjvpI2frAU/jDjfxSz3D009u1bt/9x
7fbjhrmgc4rvWVZapiW6tMiWVkgbCUTrXm4wV1oBM7ZTKwdc/ePZ88fev7j8
/ZmxHzZ7nlyZff7w4D/Ojf92Z/InQOrY8DOgawu/vHLwH1fmfzzY//H1xd+f
HP326PDX15b++NKBn64eeHZ66wMeL4DhsIk6AtFeSvHki6rhJEMOz8peP3p8
Y+taemS9ublybqpmoJM5ESefP+hIx1FvPYx8+mH7oW3Toa2mV+9eG+yea69a
z8bvJerOTLS9NNn8qNd520PasiFWHeXrPvQBD3wjUHawpvxkPeJUL+V6P/PW
oPD2iPruuOtBtvLhSvfb1Z5phpJPs+HZbhrPx2Q76VQzkWrA04wEsg5L1KCx
ijKUtLiMn5MLpj0WRNHC9VU8c41A5Wew9EiavISpggf6+TxfviBQqKnDsp27
D3sKPWV4OUTTFgqsGIIwH0bafZwfVFoYASIL4CwxicpEU6glUg7fyK4Zq7ja
b3qphbtzvOHro5WfHwx/tu3/9FDoU3BcsHw8p326oflsQfSbIfo7k9JPBkRv
dnJujupffmnwX+btn2SNv8k63sr6Hw8F3hiuv3/26AdzB7cqp2yuOa5rRWyd
FxozYuekStNBxxohnBliB3JkDchISh/pC8yvHbl26uvzC99tJ57cWfvjo6P/
dn7ih7MT359Of//i+C1gd2fjz7c3/3Qw+dHN1T9cmvt5LfabU+Nf3zzww51T
PxzbeoIjG0lyAdlKwjhyWVX5zKq9dP8+kY+6eHRt49DF0dTyeCY5mqq6dXEs
M6C9ebbryavptVndH3/afvZF9vjRhpF4z8Glq03RqZOrH60Mvy2AJ/zCbRN2
0U3cdpZv2uFr9tJVR/EaIFiPOdOKvQDUQ702JLqT0txL215OB+6tdL7TElwq
waOL2blYGZxuILCsFLqJSDbigWgWAtWMJxqRBAOiXJUPE0EEY7GpQepo0sld
PAy/ZC9qd421IjLUfyzkSnIwRgiuhqhOiO3eJw0jdBUkkRMttRNx/EIsq4Au
QeEYhSjyPgIDhsGXlsELykogJo4iwrgPJ9/rt90ctb12uu2b43Vfnqj/+lTd
t+eavz1R8/WS7eM16+eHzc82NJ8Ps94dEn2Y0r6fMr91sPHpoYZPpy1Ppi0f
HKj+LOt/4/jY79oipycmD7ePd4SzhuCyyLnEdSzybFNi96TS0sfGmXZ3yaF7
i6QteNugyJmQ1Q/XHj5x5+TGB8cmPnx09F9vLv1yaeqnU6mvT6W+vbXylwvZ
59eXfgYQb678cmTo6XLnmzeW/nRk6CsQRFcHHu1sf7o6fx9PV3FtYoYPj/JA
jLr95Cik60aBVtsy2HTx+uvp1IH5mdXDW2tnj69eOjPX3aq/eGp0Y6br5Hb8
b3/b+eXnK5uL843R/jMH78YbNrv816uVl1uMN3XIRR1swVyybitdd5RteBEH
o6hjtZgzTdhzfaxbXdTLHbTzfZIrE+5XFuvfOjz0NFa5SaQxYcS9+1AQCDAY
MZyixlH0OGBDnA5BMqGRmqJSRQ7bj7d0y+y9ClOzFCUqzsVCe9EQSKEEBZym
Q7Vu+ds3/ZpOEtWznxctllWhxaFymgGGYO8rI+fsflhctpfCwuCJpbDSF7dP
86DSkoKCPIiKItTbR86MP40ZLq5Ufbhe+cHR+k/Ptf9wsuGbU01fHan+Yt7+
wZb3yy3TJwvyDyZkn/Tx3x0xfzAX+fhk4stx9+3Nio/WQh+f6fpuMvjKsclv
BrrOji0vN0xWhqb0kVWFa4kOZJ/muDIiz7AQzIMIdS4rQBQ203X9bMcYy5OU
d2cGjhy8t7Py2e2l358d/fLazM+/riF5dfYPV2d/ubX8x0vTP+xkvzs29Nls
0+tnJ357buLH0+M/HJ749Oap52tr99gqo8DPZVeiSBV5+CjEa90vbirk+4p7
Mq3ndl5enb+xOH62vyN78fzVM6ePb6wuBJ22bz79+NDqzNbawP/7jy/+8ffv
1hYWjPLQZuY1C3s5KLgUZF+w447J98yZCjecZdtuxMEw9ngl/lQ15mQd+iTo
hnHujTHNgzHz/SHrjRH/ze2hD8a7zlpNTiYXU4CA9pdBMPw+JKsYIygFlsQp
4RQzimRGMpwofZvQN6hX1NMxujyqAVFIh2AciOckmFslgX5j23ZV/+mWlo2g
e1gmrEYLwmhJiFDK3UOSoLBMNLQfgvZAhYX5JYV5iNLCoty9uTlQKSwPlg9h
i5F90fmZ5jsjnjtx3c1J1yuH6j7aiT0/XPPZgYoPtyMfLTjePxz6dtv6yRDt
4ZLt+bT9hzHXJwnrg7X2d9ebHt8a++tS6L1DzR8f7P3o8ORnq0sPJg7O+oeM
gGDlmsa1QHEvku1ZmnuCGxqXC8LYPUyI6qZQIgR1P8s+SQ5nRZZm06ET168f
+OJw/MNTw19cnfrlSPyzu8t/P5r4/Obcn67N/3x17neA4Jn01yDPbMY+Ojb4
bGf6l8vrv79y7Pns7CW53cbykrGefdTaQnZLIbMBEtTvruHTMly9uHTq3rXv
V9N3fca+s2fuLC4fvrTzKOBuTA32v/nag9pQ+42LN/77//zsX//t84bQiIKc
jCiPaFBLvL0Lkj3rpqKDHsRxD/KIs+xgAHUEEKwjnm2h7HSxrvTyrg0pb4MS
Ohl6OVN9fzn+uCO8EvSEVWoumY5E4gtL8LmFuP0FhD0F1H0F9L3FvH1sDzE8
ZI2MWJhuZKEIQqn3MGzFAg9aU8/QN7H5URQvUt6xXd21XTlwsrZp0aZsQHM9
RUxLfjEdwnBzrUF1ETIX2gsVFeeXlBYWF+fAivKKC+GwHBiuJJ+Fzenp0HW0
2CPBttrQ6mDzg6MjP+/EfzlR9/Rw1YMTDW8fbvxu1v3FkvfTGfP7s9aPl5zf
rHqez1m/Olr7HWB9L/t8sfbOmfFvTs5+t7X48ebhh1PHF4Kjxsiy3LfMd84J
nDNC9zzPM8OxjlB03aQiKVQk2Mt0YQ3tQluC7UxxPFlJ52LT6SMPL0x/dXXy
D7en/n498/2rW387m/ndycxPIOecnvzk5uzPNzI/38r+4d7KHy8vfH5p/enN
01/fvvZNa88kRSem+omcpjJ25152KyRohDEcCKhkf29iZnH28tsP/9BUMT47
dqazZuGV61/090zPZtf1Wtet64+PHnw55Bu8uvPk//v3//z9T/+ytXisOZyK
RQ55BIdE+dPCvSlj8ZwDse5CbIF5sJFyqoN5Js67CjpgUvBy1vxRXP36SODx
RNsbU0Mv81heGo0iVVDZAgyKlI8k7S/C7W4cuR+3u7KotopflXLrGwWlMiiX
u/t4r7yGYmnncbxwgmkP013I8u3uztx5uLJtKwhqac+hUPOSVVGDLZdBaBGE
4+dbg0qulJZftH/ffmgfmCBJWKlEIBRxyRQ8g4LmshDNrepgtcDolQYqOnpa
by7Gv91o//xU16c3hj893fZks+aLQ/U/rQU+Hte+PmV+b9H52bLv8+3Kry4P
PN9qeOva+LPV1teOjH5xZu37G9e+3zx9tW2mIZxRh5ZE3iWea14ICIJIAwg6
xuimPhogmMuG6A60ppnrTPJsQ0zHKK96LLC1dfXG9m8vZf9yJfXnc4OfXct+
AyLNmcz31zd/ubj4w8mRZ5cnf763/l+uLv7hzPL3V0/9+Norv59dOa30OOg2
uqAaz64tZDVCrJo97FAJQpiXhyhsaBy4cuHdY1uvHV17ePPsp3Zl7OKhd6ya
2ocvfVQV6r124b3W2pUjG++ImbX3rnz5//z8Hz99/u8twUnSPn+tZkecN62B
zZtLls2wFdAHKwnHmmmn2mknY8yzndRzaeXDtOHRuPONieqH8/FXhrqOkPGy
srKSUvh+PLmYLSLwlUQwx6HZBfswkL/LGOmzyiOMfBaUz4WkUZqpRcj3YxEq
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
wJHJIun08v8fkxBtLQ==
                "], {{0, 113}, {150, 0}}, {0, 255}, 
                ColorFunction -> RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", ImageResolution -> {144, 144}, 
                Interleaving -> True, MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageDescription" -> "OLYMPUS DIGITAL CAMERA", "Make" -> 
                    "OLYMPUS OPTICAL CO.,LTD", "Model" -> "C720UZ", 
                    "Orientation" -> 
                    Association[
                    "CameraTopOrientation" -> Top, "Mirrored" -> False], 
                    "XResolution" -> 144, "YResolution" -> 144, 
                    "ResolutionUnit" -> "inch", "Software" -> "34-1034", 
                    "DateTime" -> 
                    DateObject[{2005, 7, 9, 17, 7, 44.}, "Instant", 
                    "Gregorian", -6.], "YCbCrPositioning" -> "Co-sited", 
                    "FNumber" -> "f/2.8", "ExposureProgram" -> "Auto", 
                    "ISOSpeedRatings" -> 100, "ExifVersion" -> "2.10", 
                    "DateTimeOriginal" -> 
                    DateObject[{2005, 7, 9, 17, 7, 44.}, "Instant", 
                    "Gregorian", -6.], "DateTimeDigitized" -> 
                    DateObject[{2005, 7, 9, 17, 7, 44.}, "Instant", 
                    "Gregorian", -6.], "ComponentsConfiguration" -> "YCbCr", 
                    "MaxApertureValue" -> 2.8, "MeteringMode" -> 
                    "Multi-segment", "FlashInfo" -> 
                    Association[
                    "FlashUsed" -> False, "FlashFiringStatus" -> 
                    "No strobe return detection function", 
                    "FlashFunctionPresent" -> True, "RedEyeCorrection" -> 
                    False], "FlashpixVersion" -> "1.00", "ColorSpace" -> 
                    "RGBColor", "PixelXDimension" -> 1984, "PixelYDimension" -> 
                    1488, "InteroperabilityIndex" -> "R98", 
                    "InteroperabilityVersion" -> "1.00", "FileSource" -> 
                    "Digital still camera"]]], Selectable -> False], 
              DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {150, 113},
               PlotRange -> {{0, 150}, {0, 113}}], 
             Annotation[#, {
              "URL" -> 
               "http://www.wolframcdn.com/waimage/hset053/2ee/\
2eebd55df7aeb06b9473097049f1de56_v001s.jpg", "Dimensions" -> {150, 113}, 
               "Source" -> 
               "http://en.wikipedia.org/wiki/File:Iris_versicolor_3.jpg", 
               "Popup" -> 
               "hset053/2ee/2eebd55df7aeb06b9473097049f1de56_v001ms.jpg", 
               "MaxWidth" -> "MaxWidth", "MaxHeight" -> "MaxHeight"}, 
              "Image"]& ], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Taxonomy", "scanner" -> "Data", "id" -> 
     "Taxonomy:PlantData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"kingdom\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"  ", "\"  \"", "\"Plantae\"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"plants\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowWithSeparators"]}, {
                 TagBox[
                  PaneBox[
                  "\"phylum\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"  ", "\"  \"", "\"Magnoliophyta\"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"flowering plants\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowWithSeparators"]}, {
                 TagBox[
                  PaneBox[
                  "\"class\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"Liliopsida\""}, {
                 TagBox[
                  PaneBox[
                  "\"order\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"  ", "\"  \"", "\"Liliales\"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"lilies, water hyacinths, irises, ...\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowWithSeparators"]}, {
                 TagBox[
                  PaneBox[
                  "\"family\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"  ", "\"  \"", "\"Iridaceae\"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"iris family\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowWithSeparators"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Taxonomic network", "scanner" -> "Data", "id" -> 
     "TaxonomyGraph:PlantData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[{{{
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528942`,
                     0.}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528925`,
                     0.17183139854528776`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528906`,
                     0.3436627970905755}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528887`,
                     0.5154941956358632}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452887, 
                    0.687325594181151}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452885, 
                    0.8591569927264388}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528834`,
                     1.0309883912717266`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528814`,
                     1.2028197898170143`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528795`,
                     1.3746511883623023`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528778`,
                     1.54648258690759}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452876, 
                    1.7183139854528777`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528742`,
                     1.8901453839981655`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528723`,
                     2.0619767825434536`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528703`,
                     2.233808181088741}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528687`,
                     2.405639579634029}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528667`,
                     2.5774709781793166`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452865, 
                    2.749302376724604}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452863, 
                    2.921133775269892}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528612`,
                     3.09296517381518}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0.17183139854528687`, 2.405639579634029}, {
                    0.34366279709057473`, 2.3197238803613853`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.17183139854528687`, 2.405639579634029}, {
                    0.3436627970905745, 2.491555278906673}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358641, 0.8591569927264392}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358638, 1.030988391271727}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358636, 1.2028197898170148`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358635, 1.3746511883623025`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358633, 1.5464825869075902`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358632, 1.718313985452878}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358629, 1.890145383998166}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358627, 2.0619767825434536`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358626, 2.2338081810887416`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358624, 2.4056395796340295`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358622, 2.577470978179317}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.515494195635862, 2.749302376724605}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358619, 2.9211337752698925`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358616, 3.0929651738151804`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358614, 3.2647965723604684`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358613, 3.436627970905756}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358611, 3.608459369451044}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.515494195635861, 3.7802907679963313`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811497, 2.8352180759972487`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811496, 3.0070494745425367`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811492, 3.178880873087824}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811491, 3.350712271633112}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.687325594181149, 3.5225436701783996`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811488, 3.6943750687236876`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811486, 3.8662064672689755`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811484, 4.038037865814263}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811482, 4.2098692643595506`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.687325594181148, 4.381700662904839}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811478, 4.5535320614501265`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811477, 4.725363459995414}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264379, 2.4915552789066737`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264376, 2.6633866774519612`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264374, 2.835218075997249}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264373, 3.007049474542537}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264372, 3.178880873087825}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264369, 3.3507122716331126`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264366, 3.5225436701784005`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264365, 3.694375068723688}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264364, 3.866206467268976}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264362, 4.038037865814264}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.859156992726436, 4.209869264359551}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264358, 4.381700662904839}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264356, 4.553532061450127}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264354, 4.725363459995415}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264353, 4.897194858540702}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.859156992726435, 5.069026257085991}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264349, 5.240857655631278}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264348, 5.412689054176566}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264345, 5.584520452721853}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264344, 5.756351851267142}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264341, 5.928183249812429}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.859156992726434, 6.100014648357717}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264338, 6.271846046903005}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264336, 6.443677445448293}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264335, 6.61550884399358}}]}}, {{}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528942`, 0.}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528925`, 0.17183139854528776`}]}, {
                   
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528906`, 0.3436627970905755}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528887`, 0.5154941956358632}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.1718313985452887, 0.687325594181151}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.1718313985452885, 0.8591569927264388}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528834`, 1.0309883912717266`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528814`, 1.2028197898170143`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528795`, 1.3746511883623023`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528778`, 1.54648258690759}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.1718313985452876, 1.7183139854528777`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528742`, 1.8901453839981655`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528723`, 2.0619767825434536`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528703`, 2.233808181088741}]}, {}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528667`, 2.5774709781793166`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.1718313985452865, 2.749302376724604}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.1718313985452863, 2.921133775269892}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.17183139854528612`, 3.09296517381518}]}, {}, {
                   
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.3436627970905745, 2.491555278906673}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358641, 0.8591569927264392}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358638, 1.030988391271727}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358636, 1.2028197898170148`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358635, 1.3746511883623025`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358633, 1.5464825869075902`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358632, 1.718313985452878}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358629, 1.890145383998166}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358627, 2.0619767825434536`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358626, 2.2338081810887416`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358624, 2.4056395796340295`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358622, 2.577470978179317}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.515494195635862, 2.749302376724605}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358619, 2.9211337752698925`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358616, 3.0929651738151804`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358614, 3.2647965723604684`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358613, 3.436627970905756}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.5154941956358611, 3.608459369451044}]}, {}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811497, 2.8352180759972487`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811496, 3.0070494745425367`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811492, 3.178880873087824}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811491, 3.350712271633112}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.687325594181149, 3.5225436701783996`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811488, 3.6943750687236876`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811486, 3.8662064672689755`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811484, 4.038037865814263}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811482, 4.2098692643595506`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.687325594181148, 4.381700662904839}]}, {}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.6873255941811477, 4.725363459995414}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264379, 2.4915552789066737`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264376, 2.6633866774519612`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264374, 2.835218075997249}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264373, 3.007049474542537}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264372, 3.178880873087825}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264369, 3.3507122716331126`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264366, 3.5225436701784005`}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264365, 3.694375068723688}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264364, 3.866206467268976}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264362, 4.038037865814264}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.859156992726436, 4.209869264359551}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264358, 4.381700662904839}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264356, 4.553532061450127}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264354, 4.725363459995415}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264353, 4.897194858540702}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.859156992726435, 5.069026257085991}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264349, 5.240857655631278}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264348, 5.412689054176566}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264345, 5.584520452721853}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264344, 5.756351851267142}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264341, 5.928183249812429}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.859156992726434, 6.100014648357717}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264338, 6.271846046903005}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264336, 6.443677445448293}]}, {
                    RGBColor[1, 
                    NCache[
                    Rational[58, 85], 0.6823529411764706], 
                    NCache[
                    Rational[22, 51], 0.43137254901960786`]], 
                    PointBox[{0.8591569927264335, 6.61550884399358}]}}}, 
                 Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxV0mtIk1Ecx/GlzjZdc+o2t5lFRZJJZgTWC9v5U8thY5JKpgZT52YXIntR
EZXiqFZRCBXYi2YXje4OijKRMqi2ksqpOV1r2AimiGjmnAaWXcZv4Abj8Nkz
nvP/nudZpq8uMEZwOBztv+//NfQR3thrNnT8ZMa3DcpLczYW+r0MTsNaHGYn
y4d1kh/WsVov04Rd9zEV7D+a3ZVVO8qUcFnw/xNsA6wafz39UulnmfDq4BrA
amNxmG8FPBW83yxLgT/nx0n5yjkmhcuD9+dQHNxrcvf2Dy4gPrw1uF8kRcDP
SlsU965F0S/7/Pm5FIAt6+v0x3ULadw+fx4eJeMcBBsdhvf1EZQE195qO/tk
PJKqcC4z6DfAFejXwznor4DT0V8Gi9AfOucA+nfBX9BfCof6S+BP6N8Ztl8k
7YDb0F8Ytj+XCuBG9G8Pm4dHefBJQeF97ZIY0obNF0saeI9v5eTSQQFtg93B
eYWUgvfEUHO+22yNpsXwwMihqWohj+RwbpFOVnKATzL4+St19uauGJy3j2Ws
XVeeniEgCXzzquKUuH4RJcJiXtTd32NCioe3tE8b/akiEsEnDo7ODPeLSAi3
pnrPeczxJIC/e/qSe7ISKBZedbmzxTaUQKN4rnV43iPwpKjpYWMel4ZhI/qG
YBf6fLAGfd/gF+jzwpno+wo3oW8QlqDPA6vQ54Zr0OeCQ30D8AT6nHAa+vpg
fW4Ha29IpB7Y8udxjzVHTN2w8+mdyuZpMTlg4X5L4MptCX2E1csvnrlQJKUP
sMl1Wm6KTqJOuL3+2IPDrUn0Dvarqjftq5KRHV4zW+nQSeVkg6seFVcU2uX0
Br6+W+tXH1HQXzf9aQY=
                   "]]& ], 
                TagBox[{{{
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528942`,
                     0.}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528925`,
                     0.17183139854528776`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528906`,
                     0.3436627970905755}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528887`,
                     0.5154941956358632}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452887, 
                    0.687325594181151}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452885, 
                    0.8591569927264388}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528834`,
                     1.0309883912717266`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528814`,
                     1.2028197898170143`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528795`,
                     1.3746511883623023`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528778`,
                     1.54648258690759}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452876, 
                    1.7183139854528777`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528742`,
                     1.8901453839981655`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528723`,
                     2.0619767825434536`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528703`,
                     2.233808181088741}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528687`,
                     2.405639579634029}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528667`,
                     2.5774709781793166`}}]}, {
                    GrayLevel[0.8], 
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452865, 
                    2.749302376724604}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.1718313985452863, 
                    2.921133775269892}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0., 1.5464825869075898`}, {0.17183139854528612`,
                     3.09296517381518}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0.17183139854528687`, 2.405639579634029}, {
                    0.34366279709057473`, 2.3197238803613853`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.17183139854528687`, 2.405639579634029}, {
                    0.3436627970905745, 2.491555278906673}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358641, 0.8591569927264392}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358638, 1.030988391271727}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358636, 1.2028197898170148`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358635, 1.3746511883623025`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358633, 1.5464825869075902`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358632, 1.718313985452878}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358629, 1.890145383998166}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358627, 2.0619767825434536`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358626, 2.2338081810887416`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358624, 2.4056395796340295`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358622, 2.577470978179317}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.515494195635862, 2.749302376724605}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358619, 2.9211337752698925`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358616, 3.0929651738151804`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358614, 3.2647965723604684`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358613, 3.436627970905756}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.5154941956358611, 3.608459369451044}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0.34366279709057473`, 2.3197238803613853`}, {
                    0.515494195635861, 3.7802907679963313`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811497, 2.8352180759972487`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811496, 3.0070494745425367`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811492, 3.178880873087824}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811491, 3.350712271633112}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.687325594181149, 3.5225436701783996`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811488, 3.6943750687236876`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811486, 3.8662064672689755`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811484, 4.038037865814263}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811482, 4.2098692643595506`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.687325594181148, 4.381700662904839}}]}, {
                    GrayLevel[0.4], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811478, 4.5535320614501265`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.515494195635861, 3.7802907679963313`}, {
                    0.6873255941811477, 4.725363459995414}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264379, 2.4915552789066737`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264376, 2.6633866774519612`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264374, 2.835218075997249}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264373, 3.007049474542537}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264372, 3.178880873087825}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264369, 3.3507122716331126`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264366, 3.5225436701784005`}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264365, 3.694375068723688}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264364, 3.866206467268976}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264362, 4.038037865814264}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.859156992726436, 4.209869264359551}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264358, 4.381700662904839}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264356, 4.553532061450127}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264354, 4.725363459995415}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264353, 4.897194858540702}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.859156992726435, 5.069026257085991}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264349, 5.240857655631278}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264348, 5.412689054176566}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264345, 5.584520452721853}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264344, 5.756351851267142}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264341, 5.928183249812429}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.859156992726434, 6.100014648357717}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264338, 6.271846046903005}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264336, 6.443677445448293}}]}, {
                    GrayLevel[0.8], 
                    
                    LineBox[{{0.6873255941811478, 4.5535320614501265`}, {
                    0.8591569927264335, 6.61550884399358}}]}}, {
                   InsetBox[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox["\"Plantae\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Kingdom:Plantae"}]], Identity]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{
                    Directive[
                    Opacity[1]]}}, "Rows" -> {{
                    RGBColor[1, 
                    Rational[83, 85], 
                    Rational[79, 85]]}}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
                    AbsoluteThickness[0.1], 
                    RGBColor[
                    Rational[43, 51], 
                    Rational[43, 51], 
                    Rational[43, 51]]]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Grid"], 
                    TraditionalForm], {0., 
                    1.5464825869075898`}], {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, 
                   InsetBox[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox["\"Magnoliophyta\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Phylum:Magnoliophyta"}]], 
                    Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{
                    Directive[
                    Opacity[1]]}}, "Rows" -> {{
                    RGBColor[1, 
                    Rational[83, 85], 
                    Rational[79, 85]]}}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
                    AbsoluteThickness[0.1], 
                    RGBColor[
                    Rational[43, 51], 
                    Rational[43, 51], 
                    Rational[43, 51]]]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Grid"], 
                    TraditionalForm], {0.17183139854528687`, 
                    2.405639579634029}], {}, {}, {}, {}, 
                   InsetBox[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox["\"Liliopsida\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Class:Liliopsida"}]], 
                    Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{
                    Directive[
                    Opacity[1]]}}, "Rows" -> {{
                    RGBColor[1, 
                    Rational[83, 85], 
                    Rational[79, 85]]}}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
                    AbsoluteThickness[0.1], 
                    RGBColor[
                    Rational[43, 51], 
                    Rational[43, 51], 
                    Rational[43, 51]]]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Grid"], 
                    TraditionalForm], {0.34366279709057473`, 
                    2.3197238803613853`}], {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
                   InsetBox[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox["\"Liliales\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Order:Liliales"}]], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{
                    Directive[
                    Opacity[1]]}}, "Rows" -> {{
                    RGBColor[1, 
                    Rational[83, 85], 
                    Rational[79, 85]]}}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
                    AbsoluteThickness[0.1], 
                    RGBColor[
                    Rational[43, 51], 
                    Rational[43, 51], 
                    Rational[43, 51]]]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Grid"], 
                    TraditionalForm], {0.515494195635861, 
                    3.7802907679963313`}], {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, 
                   InsetBox[
                    FormBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox["\"Iridaceae\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Family:Iridaceae"}]], 
                    Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{
                    Directive[
                    Opacity[1]]}}, "Rows" -> {{
                    RGBColor[1, 
                    Rational[83, 85], 
                    Rational[79, 85]]}}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
                    AbsoluteThickness[0.1], 
                    RGBColor[
                    Rational[43, 51], 
                    Rational[43, 51], 
                    Rational[43, 51]]]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Grid"], 
                    TraditionalForm], {0.6873255941811478, 
                    4.5535320614501265`}], {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
                 Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxV0mtIk1Ecx/GlzjZdc+o2t5lFRZJJZgTWC9v5U8thY5JKpgZT52YXIntR
EZXiqFZRCBXYi2YXje4OijKRMqi2ksqpOV1r2AimiGjmnAaWXcZv4Abj8Nkz
nvP/nudZpq8uMEZwOBztv+//NfQR3thrNnT8ZMa3DcpLczYW+r0MTsNaHGYn
y4d1kh/WsVov04Rd9zEV7D+a3ZVVO8qUcFnw/xNsA6wafz39UulnmfDq4BrA
amNxmG8FPBW83yxLgT/nx0n5yjkmhcuD9+dQHNxrcvf2Dy4gPrw1uF8kRcDP
SlsU965F0S/7/Pm5FIAt6+v0x3ULadw+fx4eJeMcBBsdhvf1EZQE195qO/tk
PJKqcC4z6DfAFejXwznor4DT0V8Gi9AfOucA+nfBX9BfCof6S+BP6N8Ztl8k
7YDb0F8Ytj+XCuBG9G8Pm4dHefBJQeF97ZIY0obNF0saeI9v5eTSQQFtg93B
eYWUgvfEUHO+22yNpsXwwMihqWohj+RwbpFOVnKATzL4+St19uauGJy3j2Ws
XVeeniEgCXzzquKUuH4RJcJiXtTd32NCioe3tE8b/akiEsEnDo7ODPeLSAi3
pnrPeczxJIC/e/qSe7ISKBZedbmzxTaUQKN4rnV43iPwpKjpYWMel4ZhI/qG
YBf6fLAGfd/gF+jzwpno+wo3oW8QlqDPA6vQ54Zr0OeCQ30D8AT6nHAa+vpg
fW4Ha29IpB7Y8udxjzVHTN2w8+mdyuZpMTlg4X5L4MptCX2E1csvnrlQJKUP
sMl1Wm6KTqJOuL3+2IPDrUn0Dvarqjftq5KRHV4zW+nQSeVkg6seFVcU2uX0
Br6+W+tXH1HQXzf9aQY=
                   "]]& ]}, {GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                Method -> {"GridLinesInFront" -> True}, FrameTicks -> None, 
                PlotRange -> All, PlotRangePadding -> None, AspectRatio -> 
                0.6, ImageSize -> 480}], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", 
                 "\"nodes sorted by taxonomic diversity\"", "\[NoBreak]", 
                 "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Right, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show graph", "input" -> 
         "TaxonomyGraph:PlantData__Show graph"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Other members of order Liliales", "scanner" -> "Data", 
     "id" -> "Siblings:PlantData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Plant\", \"Family:Iridaceae\"][EntityProperty[\"Plant\", \
\"Siblings\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Agavaceae\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Family:Agavaceae"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"agave family\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"Aloaceae\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Aloaceae"}]], Identity], {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Dioscoreaceae\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Family:Dioscoreaceae"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"yam family\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Haemodoraceae\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Family:Haemodoraceae"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"bloodwort family\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"Hanguanaceae\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Hanguanaceae"}]], 
                  Identity], {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"Liliaceae\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Liliaceae"}]], Identity], {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"Philydraceae\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Philydraceae"}]], 
                  Identity], {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"Pontederiaceae\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Pontederiaceae"}]], 
                  Identity], {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Smilacaceae\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Family:Smilacaceae"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"catbrier famly\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"Stemonaceae\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Stemonaceae"}]], 
                  Identity], {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"Taccaceae\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {PlantData, "Family:Taccaceae"}]], Identity], {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Siblings:PlantData__More"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Members of family Iridaceae", "scanner" -> "Data", 
     "id" -> "Children:PlantData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Plant\", \"Family:Iridaceae\"][EntityProperty[\"Plant\", \
\"SubEntities\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Acidanthera\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Acidanthera"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"acidanthera\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Alophia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Alophia"}]], Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"alophia\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Aristea\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Aristea"}]], Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"aristea\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Belamcanda\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Belamcanda"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"belamcanda\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Calydorea\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Calydorea"}]], Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"violet-lily\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Chasmanthe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Chasmanthe"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"African cornflag\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Crocosmia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Crocosmia"}]], Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"crocosmia\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Crocus\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Crocus"}]], Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"crocus\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Dietes\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Dietes"}]], Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"dietes\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  FormBox[
                   StyleBox[
                    TagBox[
                    TagBox["\"Eleutherine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {PlantData, "Genus:Eleutherine"}]], 
                    Identity], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], TraditionalForm], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"eleutherine\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               "\"\[Ellipsis]\""}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Children:PlantData__More"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Iris", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "13"}, {
        XMLElement[
        "value", {
         "name" -> "Plant", "desc" -> "a plant", "input" -> 
          "*C.Iris-_*Plant-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Mythology", "desc" -> "a mythological figure", "input" -> 
          "*C.Iris-_*Mythology-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MinorPlanet", "desc" -> " referring to minor planets", 
          "input" -> "*C.Iris-_*MinorPlanet-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Satellite", "desc" -> "a spacecraft", "input" -> 
          "*C.Iris-_*Satellite-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.Iris-_*Word-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MusicWork", "desc" -> "a music work", "input" -> 
          "*C.Iris-_*MusicWork-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Movie", "desc" -> "a movie", "input" -> 
          "*C.Iris-_*Movie-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "GivenName", "desc" -> "a given name", "input" -> 
          "*C.Iris-_*GivenName-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
          "*C.Iris-_*Financial-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Anatomy", "desc" -> "an anatomical structure", "input" -> 
          "*C.Iris-_*Anatomy-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Color", "desc" -> "a color", "input" -> 
          "*C.Iris-_*Color-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Species", "desc" -> "a species specification", "input" -> 
          "*C.Iris-_*Species-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "TranslationData", "desc" -> " referring to translations", 
          "input" -> "*C.Iris-_*TranslationData-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "Iris", "template" -> 
        "Assuming ${desc1}. Use ${desc2} instead", "count" -> "3"}, {
        XMLElement[
        "value", {
         "name" -> "Family:Iridaceae", "desc" -> "iris family", "input" -> 
          "*DPClash.PlantE.Iris-_*Family%3AIridaceae-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Genus:Iris", "desc" -> "iris", "input" -> 
          "*DPClash.PlantE.Iris-_*Genus%3AIris-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Genus:Iris:64106", "desc" -> "Iris", "input" -> 
          "*DPClash.PlantE.Iris-_*Genus%3AIris%3A64106-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/PlantDataSourceInformationNotes.\
html", "text" -> "Plant data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
    "Plant", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.836", 
    "parsetiming" -> "0.324", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa4011c1hgb09g1d87aic00002gci0ah4e172g6h7", "host" -> 
    "http://www5b.wolframalpha.com", "server" -> "39", "related" -> 
    "http://www5b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa4021c1hgb09g1d87aic000056541cb469h6b5gi&redisFailed=true&s=39", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2017, 12, 8, 14, 30, 29.163678`8.217417275737468}, "Line" -> 
    43, "SessionID" -> 15867008619080961679}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Iris"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{463., {584., 590.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.721750229233322*^9},ExpressionUUID->"cf00418e-4180-4069-b33a-\
a5dcb8ff6d83"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"irisData", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
     ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720291424969858*^9, 3.720291473032188*^9}, {
  3.7202922395120068`*^9, 
  3.720292261065255*^9}},ExpressionUUID->"44c4d1eb-cf7e-4829-9536-\
ef083e914bf8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"irisData", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.720292307809415*^9, 
  3.720292309011464*^9}},ExpressionUUID->"fccf31b7-92aa-4ff6-a726-\
dfa85ea34c93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`"}], "}"}], 
    "\[Rule]", "\<\"setosa\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`"}], "}"}], 
    "\[Rule]", "\<\"setosa\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4.7`", ",", "3.2`", ",", "1.3`", ",", "0.2`"}], "}"}], 
    "\[Rule]", "\<\"setosa\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.720292309508232*^9, 3.721744071523218*^9, 
  3.72174442804597*^9, 3.721745213510213*^9, 3.721750169411976*^9, 
  3.721750229641597*^9},ExpressionUUID->"00331ba4-06f5-4073-b49d-\
5c01a70631d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
   ",", "\"\<VariableDescriptions\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.720291424969858*^9, 3.7202914361414022`*^9}, {
  3.720292275118464*^9, 
  3.720292287819645*^9}},ExpressionUUID->"ae4f636a-8cd7-4ebe-8e74-\
86806d602923"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\<\"Sepal length in cm.\"\>", ",", "\<\"Sepal width in cm.\"\>", 
    ",", "\<\"Petal length in cm.\"\>", ",", "\<\"Petal width in cm.\"\>", 
    ",", "\<\"Species of iris\"\>"}], "}"}], 
  "\[Rule]", "\<\"species of iris\"\>"}]], "Output",
 CellChangeTimes->{{3.720291426182817*^9, 3.720291437479075*^9}, {
   3.72029226897534*^9, 3.720292288819929*^9}, 3.7217440715886307`*^9, 
   3.721744428120199*^9, 3.721745213728487*^9, 3.721750169473255*^9, 
   3.72175022972512*^9},ExpressionUUID->"2a93ff9c-6842-4c64-84dd-\
10c7f3e77619"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "7777", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randomIris", "=", 
   RowBox[{"RandomSample", "[", "irisData", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.720295152797858*^9, 3.720295164395281*^9}, {
   3.720295314497216*^9, 3.720295358135592*^9}, 
   3.721743973180048*^9},ExpressionUUID->"125c55c0-f107-4d31-b55d-\
0e365f42ea06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomIris", "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "5"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.721743976924765*^9, 
  3.721743987138936*^9}},ExpressionUUID->"199e3820-d793-44e9-b6e7-\
7bb5827973a9"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6.4`", ",", "2.8`", ",", "5.6`", ",", "2.1`"}], "}"}], 
     "\[Rule]", "\<\"virginica\"\>"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5.`", ",", "3.6`", ",", "1.4`", ",", "0.2`"}], "}"}], 
     "\[Rule]", "\<\"setosa\"\>"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7.2`", ",", "3.6`", ",", "6.1`", ",", "2.5`"}], "}"}], 
     "\[Rule]", "\<\"virginica\"\>"}], ",", 
    RowBox[{"\[LeftSkeleton]", "145", "\[RightSkeleton]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5.4`", ",", "3.`", ",", "4.5`", ",", "1.5`"}], "}"}], 
     "\[Rule]", "\<\"versicolor\"\>"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7.1`", ",", "3.`", ",", "5.9`", ",", "2.1`"}], "}"}], 
     "\[Rule]", "\<\"virginica\"\>"}]}], "}"}],
  Short[#, 5]& ]], "Output",
 CellChangeTimes->{
  3.720295164938931*^9, {3.720295262107585*^9, 3.720295274656169*^9}, {
   3.720295324370557*^9, 3.720295360494795*^9}, 3.721744071672853*^9, 
   3.721744428203361*^9, 3.721745213828333*^9, 3.7217501695407877`*^9, 
   3.721750229823999*^9},ExpressionUUID->"e7d085ba-5c38-4c25-b883-\
6a220d48662f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainIris", "=", 
   RowBox[{"randomIris", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "105"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testIris", "=", 
   RowBox[{"randomIris", "[", 
    RowBox[{"[", 
     RowBox[{"106", ";;"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7202952317665358`*^9, 3.720295236699635*^9}, {
  3.72029536912582*^9, 
  3.720295402650655*^9}},ExpressionUUID->"b767ce10-8ad7-46aa-ba62-\
95ab2ec3d0b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"classifyMethods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<DecisionTree\>\"", ",", "\"\<GradientBoostedTrees\>\"", ",", 
     "\"\<LogisticRegression\>\"", ",", "\"\<Markov\>\"", ",", 
     "\"\<NaiveBayes\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
     "\"\<NeuralNetwork\>\"", ",", "\"\<RandomForest\>\"", ",", 
     "\"\<SupportVectorMachine\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7202955648388233`*^9, 3.720295622004216*^9}, 
   3.720295858730053*^9},ExpressionUUID->"d9c468e6-8f8b-472a-9e87-\
671d2966a1a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainIrisClassifiers", "=", 
  RowBox[{"Association", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Rule]", " ", 
       RowBox[{"Classify", "[", 
        RowBox[{"trainIris", ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", "#", "}"}]}]}], "]"}]}], "&"}], "/@", 
     "classifyMethods"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.720295863976836*^9, 3.720295924358357*^9}, {
  3.720295980300219*^9, 
  3.72029598948816*^9}},ExpressionUUID->"8b263840-d205-4d02-8c21-\
810cd890449b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"DecisionTree\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"GradientBoostedTrees\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"LogisticRegression\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Markov\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"NaiveBayes\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"NearestNeighbors\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"NeuralNetwork\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"RandomForest\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"SupportVectorMachine\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ClassifierFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    PointSize[0.13], 
                    GrayLevel[0.45], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], 
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                    Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                   GrayLevel[0.94]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["105", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel", 
           DisplayFunction -> (
            ButtonBox[#, Active -> False, Alignment -> Left, 
             Appearance -> {
              "Default" -> 
               FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
             FrameMargins -> 7, BaseStyle -> {}, 
             DefaultBaseStyle -> {"Panel", Background -> None}, 
             BaselinePosition -> Baseline]& )], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.720295954402911*^9, 3.720296021846931*^9, 
  3.721744084619018*^9, 3.721744457361312*^9, 3.7217452537077417`*^9, 
  3.72175019736534*^9, 
  3.721750256661302*^9},ExpressionUUID->"6bffde72-c967-4697-90f9-\
6b27b4809235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testIris", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.720296808598095*^9},ExpressionUUID->"8a665d84-e099-4111-b846-\
166d316d9ab9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"6.1`", ",", "2.9`", ",", "4.7`", ",", "1.4`"}], "}"}], 
  "\[Rule]", "\<\"versicolor\"\>"}]], "Output",
 CellChangeTimes->{3.720296580556226*^9, 3.720296809152946*^9, 
  3.721744457513925*^9, 3.721745253926099*^9, 
  3.721750256828*^9},ExpressionUUID->"4d47ccb3-bb4c-41d6-8201-1ee68374360f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"{", 
       RowBox[{"6.1`", ",", "2.9`", ",", "4.7`", ",", "1.4`"}], "}"}], "]"}], 
     "&"}]}], "]"}], "@", "trainIrisClassifiers"}]], "Input",
 CellChangeTimes->{{3.720296313690132*^9, 3.720296375591423*^9}, {
  3.72029640866992*^9, 3.720296451601668*^9}, {3.720296561164914*^9, 
  3.720296594420487*^9}, {3.720296819357078*^9, 
  3.720296853024103*^9}},ExpressionUUID->"a30c1b53-3e3f-412e-b60a-\
2261d3b8b65f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"DecisionTree\"\>", "\[Rule]", "\<\"versicolor\"\>"}], ",", 
   RowBox[{"\<\"GradientBoostedTrees\"\>", "\[Rule]", "\<\"versicolor\"\>"}], 
   ",", 
   RowBox[{"\<\"LogisticRegression\"\>", "\[Rule]", "\<\"versicolor\"\>"}], 
   ",", 
   RowBox[{"\<\"Markov\"\>", "\[Rule]", "\<\"versicolor\"\>"}], ",", 
   RowBox[{"\<\"NaiveBayes\"\>", "\[Rule]", "\<\"versicolor\"\>"}], ",", 
   RowBox[{"\<\"NearestNeighbors\"\>", "\[Rule]", "\<\"versicolor\"\>"}], ",", 
   RowBox[{"\<\"NeuralNetwork\"\>", "\[Rule]", "\<\"virginica\"\>"}], ",", 
   RowBox[{"\<\"RandomForest\"\>", "\[Rule]", "\<\"versicolor\"\>"}], ",", 
   RowBox[{"\<\"SupportVectorMachine\"\>", 
    "\[Rule]", "\<\"versicolor\"\>"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7202963215820436`*^9, 3.72029637620389*^9}, {
   3.720296432525725*^9, 3.7202964531254787`*^9}, {3.720296564731228*^9, 
   3.720296590694228*^9}, {3.720296840318905*^9, 3.720296853480208*^9}, 
   3.721744457709455*^9, 3.7217452542643843`*^9, 
   3.721750257008647*^9},ExpressionUUID->"90b87c71-0d60-4831-a655-\
0daaf889d16e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"ClassifierMeasurements", "[", 
      RowBox[{"#", ",", "testIris", ",", "\"\<Accuracy\>\""}], "]"}], "&"}]}],
    "]"}], "@", "trainIrisClassifiers"}]], "Input",
 CellChangeTimes->{{3.720296934234393*^9, 
  3.720296985515051*^9}},ExpressionUUID->"a042759d-b435-4ae8-9f1a-\
02355397c926"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"DecisionTree\"\>", "\[Rule]", "0.9333333333333333`"}], ",", 
   RowBox[{"\<\"GradientBoostedTrees\"\>", "\[Rule]", "0.9777777777777777`"}],
    ",", 
   RowBox[{"\<\"LogisticRegression\"\>", "\[Rule]", "0.9777777777777777`"}], 
   ",", 
   RowBox[{"\<\"Markov\"\>", "\[Rule]", "0.8888888888888888`"}], ",", 
   RowBox[{"\<\"NaiveBayes\"\>", "\[Rule]", "0.9555555555555556`"}], ",", 
   RowBox[{"\<\"NearestNeighbors\"\>", "\[Rule]", "0.9555555555555556`"}], 
   ",", 
   RowBox[{"\<\"NeuralNetwork\"\>", "\[Rule]", "0.7333333333333333`"}], ",", 
   RowBox[{"\<\"RandomForest\"\>", "\[Rule]", "0.9555555555555556`"}], ",", 
   RowBox[{"\<\"SupportVectorMachine\"\>", "\[Rule]", 
    "0.9333333333333333`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7202969754415607`*^9, 3.7202969862200003`*^9}, 
   3.7217444580909777`*^9, 3.721745254695064*^9, 
   3.7217502574047823`*^9},ExpressionUUID->"4e66ce76-eb5d-4c8e-b4c6-\
e328b23263a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"ClassifierMeasurements", "[", 
      RowBox[{"#", ",", "testIris", ",", "\"\<ConfusionMatrix\>\""}], "]"}], 
     "&"}]}], "]"}], "@", "trainIrisClassifiers"}]], "Input",
 CellChangeTimes->{{3.720296934234393*^9, 3.720296985515051*^9}, {
  3.7202970507337*^9, 3.7202970536291*^9}, {3.720297374818345*^9, 
  3.72029738954698*^9}},ExpressionUUID->"b56f4ab8-f150-48a4-9be8-\
5745659dc7c9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"DecisionTree\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"14", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "15", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"GradientBoostedTrees\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "14", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "15", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"LogisticRegression\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "15", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "14", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Markov\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"14", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "12", ",", "3", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "14", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"NaiveBayes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "15", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"NearestNeighbors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "14", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "14", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"NeuralNetwork\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "10", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "15", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"RandomForest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "15", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"SupportVectorMachine\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "13", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "14", ",", "0"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.720297054234769*^9, {3.720297377492043*^9, 3.72029739021903*^9}, 
   3.721744458459549*^9, 3.72174525503332*^9, 3.721750257771934*^9, 
   3.721755912818157*^9},ExpressionUUID->"4210ebd5-76e2-4a89-a836-\
3346d99a5f05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
    RowBox[{"1", ";;", "2"}], ",", 
    RowBox[{
     RowBox[{"ClassifierMeasurements", "[", 
      RowBox[{"#", ",", "testIris", ",", "\"\<ConfusionMatrixPlot\>\""}], 
      "]"}], "&"}]}], "]"}], "@", "trainIrisClassifiers"}]], "Input",
 CellChangeTimes->{{3.720296934234393*^9, 3.720296985515051*^9}, {
  3.7202970507337*^9, 3.720297065367021*^9}, {3.720297183273781*^9, 
  3.72029730595408*^9}, {3.720297397194706*^9, 3.720297398135745*^9}, {
  3.721757007085153*^9, 
  3.721757007264152*^9}},ExpressionUUID->"837f017c-28a8-42c0-9b2d-\
ea5b4ff31054"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"DecisionTree\"\>", "\[Rule]", 
    GraphicsBox[
     RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {1., 0.42, 0.}}, {{1., 1., 1.}, {
      0.8881946236107527, 0.5310645778708442, 0.0055664768670462645`}, {
      0.9220717234748939, 0.8239734665798664, 0.5495246136144545}}, {{
      0.9440973118053764, 0.4755322889354221, 0.0027832384335231327`}, {
      0.9397109940319761, 0.8906277331969328, 0.7228981071084285}, {1., 1., 
      1.}}}, {{0, 0}, {3, 3}}, {0, 1}],
     Epilog->{{
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["14", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "14", "\" examples of \"", "\"setosa\"", 
                "\" correctly classified\""}, "RowDefault"]}, {
              TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
              
              TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
               "RowDefault"]}, {
              
              TemplateBox[{"\"FScore = \"", "0.9655172413793104`"}, 
               "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            Row[{14, " examples of ", "setosa", " correctly classified"}], 
            Row[{"Precision = ", 1.}], 
            Row[{"Recall = ", 0.9333333333333333}], 
            Row[{"FScore = ", 0.9655172413793104}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"versicolor\"", 
                "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "versicolor", " misclassified as ", 
              "setosa"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"virginica\"", 
                "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "virginica", " misclassified as ", 
              "setosa"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["1", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "1", "\" example of \"", "\"setosa\"", 
                "\" misclassified as \"", "\"versicolor\""}, "RowDefault"]}, {
             
              
              TemplateBox[{"\"Column fraction = \"", "0.07142857142857142`"}, 
               "RowDefault"]}, {
              
              TemplateBox[{"\"Row fraction = \"", "0.06666666666666667`"}, 
               "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{1, " example of ", "setosa", " misclassified as ", 
              "versicolor"}], 
            Row[{"Column fraction = ", 0.07142857142857142}], 
            Row[{"Row fraction = ", 0.06666666666666667}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["13", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "13", "\" examples of \"", "\"versicolor\"", 
                "\" correctly classified\""}, "RowDefault"]}, {
              
              TemplateBox[{"\"Precision = \"", "0.9285714285714286`"}, 
               "RowDefault"]}, {
              
              TemplateBox[{"\"Recall = \"", "0.8666666666666667`"}, 
               "RowDefault"]}, {
              
              TemplateBox[{"\"FScore = \"", "0.896551724137931`"}, 
               "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            Row[{13, " examples of ", "versicolor", " correctly classified"}], 
            Row[{"Precision = ", 0.9285714285714286}], 
            Row[{"Recall = ", 0.8666666666666667}], 
            Row[{"FScore = ", 0.896551724137931}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"virginica\"", 
                "\" misclassified as \"", "\"versicolor\""}, "RowDefault"]}, {
             
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "virginica", " misclassified as ", 
              "versicolor"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"setosa\"", 
                "\" misclassified as \"", "\"virginica\""}, "RowDefault"]}, {
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "setosa", " misclassified as ", 
              "virginica"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["2", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "2", "\" examples of \"", "\"versicolor\"", 
                "\" misclassified as \"", "\"virginica\""}, "RowDefault"]}, {
              
              TemplateBox[{"\"Column fraction = \"", "0.11764705882352941`"}, 
               "RowDefault"]}, {
              
              TemplateBox[{"\"Row fraction = \"", "0.13333333333333333`"}, 
               "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{2, " examples of ", "versicolor", " misclassified as ", 
              "virginica"}], 
            Row[{"Column fraction = ", 0.11764705882352941`}], 
            Row[{"Row fraction = ", 0.13333333333333333`}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["15", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "15", "\" examples of \"", "\"virginica\"", 
                "\" correctly classified\""}, "RowDefault"]}, {
              
              TemplateBox[{"\"Precision = \"", "0.8823529411764706`"}, 
               "RowDefault"]}, {
              TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
              TemplateBox[{"\"FScore = \"", "0.9375`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            Row[{15, " examples of ", "virginica", " correctly classified"}], 
            
            Row[{"Precision = ", 0.8823529411764706}], 
            Row[{"Recall = ", 1.}], 
            Row[{"FScore = ", 0.9375}]}], "Tooltip"]& ]}, 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {10., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "15", "\" example\"", "\"s\"", "\" of class \"", "\"setosa\""}, 
              "RowDefault"]}, {
             
             TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{15, " example", "s", " of class ", "setosa"}], 
           Row[{"Recall = ", 0.9333333333333333}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {10., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "15", "\" example\"", "\"s\"", "\" of class \"", 
               "\"versicolor\""}, "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "0.8666666666666667`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{15, " example", "s", " of class ", "versicolor"}], 
           Row[{"Recall = ", 0.8666666666666667}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {10., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "15", "\" example\"", "\"s\"", "\" of class \"", 
               "\"virginica\""}, "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{15, " example", "s", " of class ", "virginica"}], 
           Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 
          10.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "14", "\" example\"", "\"s\"", "\" classified as \"", 
               "\"setosa\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{14, " example", "s", " classified as ", "setosa"}], 
           Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 
          10.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "14", "\" example\"", "\"s\"", "\" classified as \"", 
               "\"versicolor\""}, "RowDefault"]}, {
             
             TemplateBox[{"\"Precision = \"", "0.9285714285714286`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{14, " example", "s", " classified as ", "versicolor"}], 
           Row[{"Precision = ", 0.9285714285714286}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 
          10.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "17", "\" example\"", "\"s\"", "\" classified as \"", 
               "\"virginica\""}, "RowDefault"]}, {
             
             TemplateBox[{"\"Precision = \"", "0.8823529411764706`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{17, " example", "s", " classified as ", "virginica"}], 
           Row[{"Precision = ", 0.8823529411764706}]}], "Tooltip"]& ]},
     Frame->True,
     FrameLabel->{
       FormBox["\"predicted class\"", TraditionalForm], 
       FormBox["\"actual class\"", TraditionalForm]},
     FrameTicks->{{{{2.5, 
          FormBox[
           RotationBox["\"setosa\"", BoxRotation -> 0.], TraditionalForm]}, {
         1.5, 
          FormBox[
           RotationBox["\"versicolor\"", BoxRotation -> 0.], 
           TraditionalForm]}, {0.5, 
          FormBox[
           RotationBox["\"virginica\"", BoxRotation -> 0.], 
           TraditionalForm]}}, {{2.5, 
          FormBox["15", TraditionalForm]}, {1.5, 
          FormBox["15", TraditionalForm]}, {0.5, 
          FormBox["15", TraditionalForm]}}}, {{{0.5, 
          FormBox[
           RotationBox["14", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["14", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["17", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, {{0.5, 
          FormBox[
           RotationBox["\"setosa\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["\"versicolor\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["\"virginica\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}}},
     FrameTicksStyle->12,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->300,
     Method->{
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]},
     PlotRangePadding->None]}], ",", 
   RowBox[{"\<\"GradientBoostedTrees\"\>", "\[Rule]", 
    GraphicsBox[
     RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {1., 0.42, 0.}}, {{1., 1., 1.}, {
      0.9161459677080646, 0.5032984334031332, 0.004174857650284698}, {
      0.930891358753435, 0.8573005998883996, 0.6362113603614415}}, {{1., 0.42,
       0.}, {1., 1., 1.}, {1., 1., 1.}}}, {{0, 0}, {3, 3}}, {0, 1}],
     Epilog->{{
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["15", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "15", "\" examples of \"", "\"setosa\"", 
                "\" correctly classified\""}, "RowDefault"]}, {
              TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
              TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
              TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            Row[{15, " examples of ", "setosa", " correctly classified"}], 
            Row[{"Precision = ", 1.}], 
            Row[{"Recall = ", 1.}], 
            Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"versicolor\"", 
                "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "versicolor", " misclassified as ", 
              "setosa"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"virginica\"", 
                "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "virginica", " misclassified as ", 
              "setosa"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"setosa\"", 
                "\" misclassified as \"", "\"versicolor\""}, "RowDefault"]}, {
             
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "setosa", " misclassified as ", 
              "versicolor"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["14", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "14", "\" examples of \"", "\"versicolor\"", 
                "\" correctly classified\""}, "RowDefault"]}, {
              TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
              
              TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
               "RowDefault"]}, {
              
              TemplateBox[{"\"FScore = \"", "0.9655172413793104`"}, 
               "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            Row[{14, " examples of ", "versicolor", " correctly classified"}], 
            Row[{"Precision = ", 1.}], 
            Row[{"Recall = ", 0.9333333333333333}], 
            Row[{"FScore = ", 0.9655172413793104}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"virginica\"", 
                "\" misclassified as \"", "\"versicolor\""}, "RowDefault"]}, {
             
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "virginica", " misclassified as ", 
              "versicolor"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["0", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "0", "\" example of \"", "\"setosa\"", 
                "\" misclassified as \"", "\"virginica\""}, "RowDefault"]}, {
              TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             
              TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{0, " example of ", "setosa", " misclassified as ", 
              "virginica"}], 
            Row[{"Column fraction = ", 0.}], 
            Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["1", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "1", "\" example of \"", "\"versicolor\"", 
                "\" misclassified as \"", "\"virginica\""}, "RowDefault"]}, {
              TemplateBox[{"\"Column fraction = \"", "0.0625`"}, 
               "RowDefault"]}, {
              
              TemplateBox[{"\"Row fraction = \"", "0.06666666666666667`"}, 
               "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            
            Row[{1, " example of ", "versicolor", " misclassified as ", 
              "virginica"}], 
            Row[{"Column fraction = ", 0.0625}], 
            Row[{"Row fraction = ", 0.06666666666666667}]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          InsetBox[
           GraphicsBox[{
             Opacity[1.], 
             InsetBox[
              FormBox["15", TraditionalForm], {0.5, 0.5}], 
             Opacity[0.], 
             RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
          TagBox[
           GridBox[{{
              
              TemplateBox[{
               "15", "\" examples of \"", "\"virginica\"", 
                "\" correctly classified\""}, "RowDefault"]}, {
              TemplateBox[{"\"Precision = \"", "0.9375`"}, "RowDefault"]}, {
              TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
              
              TemplateBox[{"\"FScore = \"", "0.967741935483871`"}, 
               "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{
            Row[{15, " examples of ", "virginica", " correctly classified"}], 
            
            Row[{"Precision = ", 0.9375}], 
            Row[{"Recall = ", 1.}], 
            Row[{"FScore = ", 0.967741935483871}]}], "Tooltip"]& ]}, 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {10., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "15", "\" example\"", "\"s\"", "\" of class \"", "\"setosa\""}, 
              "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{15, " example", "s", " of class ", "setosa"}], 
           Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {10., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "15", "\" example\"", "\"s\"", "\" of class \"", 
               "\"versicolor\""}, "RowDefault"]}, {
             
             TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{15, " example", "s", " of class ", "versicolor"}], 
           Row[{"Recall = ", 0.9333333333333333}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {10., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "15", "\" example\"", "\"s\"", "\" of class \"", 
               "\"virginica\""}, "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{15, " example", "s", " of class ", "virginica"}], 
           Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 
          10.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "15", "\" example\"", "\"s\"", "\" classified as \"", 
               "\"setosa\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{15, " example", "s", " classified as ", "setosa"}], 
           Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 
          10.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "14", "\" example\"", "\"s\"", "\" classified as \"", 
               "\"versicolor\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{14, " example", "s", " classified as ", "versicolor"}], 
           Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 
          10.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "16", "\" example\"", "\"s\"", "\" classified as \"", 
               "\"virginica\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "0.9375`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{16, " example", "s", " classified as ", "virginica"}], 
           Row[{"Precision = ", 0.9375}]}], "Tooltip"]& ]},
     Frame->True,
     FrameLabel->{
       FormBox["\"predicted class\"", TraditionalForm], 
       FormBox["\"actual class\"", TraditionalForm]},
     FrameTicks->{{{{2.5, 
          FormBox[
           RotationBox["\"setosa\"", BoxRotation -> 0.], TraditionalForm]}, {
         1.5, 
          FormBox[
           RotationBox["\"versicolor\"", BoxRotation -> 0.], 
           TraditionalForm]}, {0.5, 
          FormBox[
           RotationBox["\"virginica\"", BoxRotation -> 0.], 
           TraditionalForm]}}, {{2.5, 
          FormBox["15", TraditionalForm]}, {1.5, 
          FormBox["15", TraditionalForm]}, {0.5, 
          FormBox["15", TraditionalForm]}}}, {{{0.5, 
          FormBox[
           RotationBox["15", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["14", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["16", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, {{0.5, 
          FormBox[
           RotationBox["\"setosa\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["\"versicolor\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["\"virginica\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}}},
     FrameTicksStyle->12,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->300,
     Method->{
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]},
     PlotRangePadding->None]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.720297218256145*^9, 3.720297307222332*^9}, 
   3.720297398694873*^9, 3.7217444589242887`*^9, 3.721745255455949*^9, 
   3.721750258167268*^9, 
   3.7217570109478493`*^9},ExpressionUUID->"867c7451-5aef-4357-be40-\
d88b64182cbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"RulerBar",
WindowSize->{551, 1080},
WindowMargins->{{173, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{"Openers" -> {"ExampleSubsection" -> {"18" -> Closed}}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info73721732210-2781754"->{
  Cell[13196, 310, 3440, 54, 206, "Print",ExpressionUUID->"e2b078d6-8093-430b-9c50-74965f3adf93",
   CellTags->"Info73721732210-2781754"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info73721732210-2781754", 413489, 8748}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 414, 6, 160, "Title",ExpressionUUID->"3414ea2f-4509-4c5a-a02d-dd9b81320855"],
Cell[997, 30, 696, 15, 105, "Text",ExpressionUUID->"50c8a2f2-ad95-43e1-a8cf-800daf0992cd"],
Cell[CellGroupData[{
Cell[1718, 49, 463, 7, 69, "Chapter",ExpressionUUID->"2e5798e6-0771-4291-bfad-92143ba4a306"],
Cell[CellGroupData[{
Cell[2206, 60, 168, 3, 67, "Section",ExpressionUUID->"c99be4af-e9ce-49ed-b93c-760a3d79a93b"],
Cell[2377, 65, 274, 6, 30, "Input",ExpressionUUID->"bcc29e56-62f9-410e-9d03-0887477854de"],
Cell[2654, 73, 447, 9, 30, "Input",ExpressionUUID->"24769630-b8d7-46e1-9eec-5dba21b7a066"],
Cell[3104, 84, 336, 7, 30, "Input",ExpressionUUID->"f1c582a7-65af-480f-ac4c-b7bfcfb81599"],
Cell[CellGroupData[{
Cell[3465, 95, 477, 10, 52, "Input",ExpressionUUID->"563b6c8e-be78-470a-b05c-6bdcb1929298"],
Cell[3945, 107, 3708, 70, 350, "Output",ExpressionUUID->"3d8ab76a-4466-4962-806c-272b0a11064f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7690, 182, 373, 10, 30, "Input",ExpressionUUID->"28270b7d-94f8-4ffc-9056-45e0b6c6df14"],
Cell[8066, 194, 1675, 33, 119, "Output",ExpressionUUID->"a6a1dccb-f570-48f0-9325-56ea2b7bd0c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9778, 232, 396, 10, 30, "Input",ExpressionUUID->"eb3b2857-2ee9-47ad-8501-8cd42b96d802"],
Cell[10177, 244, 2798, 55, 203, "Output",ExpressionUUID->"31cc9759-e2d7-418d-a899-3449ff3e9369"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13012, 304, 181, 4, 30, "Input",ExpressionUUID->"fe947f65-1070-4c2f-a29d-d5424a600a3c"],
Cell[13196, 310, 3440, 54, 206, "Print",ExpressionUUID->"e2b078d6-8093-430b-9c50-74965f3adf93",
 CellTags->"Info73721732210-2781754"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16673, 369, 498, 12, 73, "Input",ExpressionUUID->"5ee5a5d3-a855-4f40-926b-fbf8e2b0e6c3"],
Cell[17174, 383, 651, 16, 34, "Output",ExpressionUUID->"14f48d52-7644-463e-945e-48d574f8f22f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17862, 404, 746, 15, 52, "Input",ExpressionUUID->"c09aa857-247b-4e5d-8784-803ddc9674d6"],
Cell[18611, 421, 4552, 90, 329, "Output",ExpressionUUID->"0eed9f2b-08f1-419e-85c3-f1b07f798011"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23200, 516, 359, 8, 30, "Input",ExpressionUUID->"237e5495-cc58-484a-b98c-03eef6ba0ea5"],
Cell[23562, 526, 989, 23, 56, "Output",ExpressionUUID->"edf48063-4b1a-44b2-89fc-57c6e134664f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24600, 555, 412, 6, 67, "Section",ExpressionUUID->"5f1de410-1edd-46bf-bd2b-9604d41f545a"],
Cell[25015, 563, 519, 10, 30, "Input",ExpressionUUID->"ccd5d70e-aa8a-4c04-abff-346993ae793f"],
Cell[25537, 575, 302, 7, 30, "Input",ExpressionUUID->"dca8e5f0-e27d-4338-8174-fe5d5a9c9e3a"],
Cell[CellGroupData[{
Cell[25864, 586, 199, 4, 30, "Input",ExpressionUUID->"f8358b46-c6d6-4eb9-9ed6-7ea9de75bf67"],
Cell[26066, 592, 934, 22, 60, "Output",ExpressionUUID->"45cf4419-f2d5-472b-b10e-a4071c04904f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27037, 619, 457, 12, 73, "Input",ExpressionUUID->"9c311f28-9300-4fde-8333-77d19ebd6398"],
Cell[27497, 633, 719, 15, 34, "Output",ExpressionUUID->"bb4e4165-d6ab-4ea2-b80f-0cfb85136392"]
}, Open  ]],
Cell[28231, 651, 916, 23, 73, "Input",ExpressionUUID->"3678d35b-12c7-407e-81ec-d6d38d4b101e"],
Cell[CellGroupData[{
Cell[29172, 678, 412, 10, 30, "Input",ExpressionUUID->"65f41110-8c9a-40ca-9b99-598b76245d4d"],
Cell[29587, 690, 750, 17, 56, "Output",ExpressionUUID->"42eb9584-34d3-4a54-8e7c-bb17d5a08845"]
}, Open  ]],
Cell[30352, 710, 593, 12, 73, "Input",ExpressionUUID->"0ec78ae9-45b2-4233-90c5-3301f50e1deb",
 CellID->1529498239],
Cell[CellGroupData[{
Cell[30970, 726, 315, 8, 30, "Input",ExpressionUUID->"b823e353-9194-4f6d-8251-b16bcdedcc50"],
Cell[31288, 736, 916, 22, 56, "Output",ExpressionUUID->"e5324c17-4e99-4323-871e-cdbd44627f6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32241, 763, 1344, 28, 178, "Input",ExpressionUUID->"91a801f7-737f-4d5a-a80c-fb9cc30d2090",
 CellID->201935119],
Cell[33588, 793, 14572, 304, 271, "Output",ExpressionUUID->"95684bb8-dc81-48d3-a08d-04e65eae97fa"]
}, Open  ]],
Cell[48175, 1100, 526, 12, 73, "Input",ExpressionUUID->"9f0b704d-1513-4118-b091-37c6f16dc55c"],
Cell[CellGroupData[{
Cell[48726, 1116, 1208, 28, 241, "Input",ExpressionUUID->"9f4f8c18-18fa-46cd-a7cc-743a2ee60557"],
Cell[49937, 1146, 13990, 292, 274, "Output",ExpressionUUID->"298852c7-f2a9-471a-9b20-8061d008b582"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63976, 1444, 159, 3, 67, "Section",ExpressionUUID->"babb5ab9-f3ba-4d7e-8a88-882238d5bf1f"],
Cell[64138, 1449, 664, 12, 52, "Input",ExpressionUUID->"f9c6ac91-8848-477d-a459-ec712eaeff9b"],
Cell[64805, 1463, 558, 15, 52, "Input",ExpressionUUID->"b72fc511-007a-4fc4-851d-e78315f5214a"],
Cell[65366, 1480, 634, 13, 52, "Input",ExpressionUUID->"fc0a81d6-f16f-4a10-a9e2-195b8ed9aef1"],
Cell[CellGroupData[{
Cell[66025, 1497, 215, 4, 30, "Input",ExpressionUUID->"d7132f79-2685-4415-aa4e-63d3a9105797"],
Cell[66243, 1503, 380, 6, 34, "Output",ExpressionUUID->"69f739de-811c-4e31-a83f-ca0530a3d431"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66660, 1514, 432, 11, 30, "Input",ExpressionUUID->"735ce9d8-c6dc-4da3-aa44-6e21eeaa85f6"],
Cell[67095, 1527, 989, 21, 56, "Output",ExpressionUUID->"64708fe9-b956-4f34-8aa6-167efa7b81e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68121, 1553, 302, 7, 30, "Input",ExpressionUUID->"3feb4dcd-9b15-42ec-82a2-f0395f251575"],
Cell[68426, 1562, 396, 6, 34, "Output",ExpressionUUID->"24ac4a67-a402-432c-a63f-8dbab4aa5ec3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68859, 1573, 438, 10, 30, "Input",ExpressionUUID->"ff7119c4-fbe6-4c9b-84e2-e38c54e6fef7"],
Cell[69300, 1585, 683, 12, 56, "Output",ExpressionUUID->"2f08044a-4986-4008-aabc-0133bc81bdb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70020, 1602, 406, 10, 30, "Input",ExpressionUUID->"3dce71dc-6329-4b01-b248-c2bda9ad7d91"],
Cell[70429, 1614, 640, 12, 34, "Output",ExpressionUUID->"7ace5c41-8b0a-4131-8f3b-02a9c84a74b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71106, 1631, 373, 7, 52, "Input",ExpressionUUID->"a07f6a27-a7f2-4619-92bf-5e96c625257a"],
Cell[71482, 1640, 415, 6, 34, "Output",ExpressionUUID->"d38ab5bb-b169-4be8-a23d-e52ebc9b87c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71934, 1651, 423, 9, 52, "Input",ExpressionUUID->"afe9ebbc-c0ee-4941-9cd9-0439726fafcb"],
Cell[72360, 1662, 560, 13, 34, "Output",ExpressionUUID->"f56aa258-1624-4c48-9450-ded66d9af5ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72957, 1680, 480, 10, 52, "Input",ExpressionUUID->"be0edbab-1e1d-477a-98d1-d893eba75e89"],
Cell[73440, 1692, 9514, 248, 321, "Output",ExpressionUUID->"5caefe35-255c-481c-81a1-12b6080bb43a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83003, 1946, 237, 4, 67, "Section",ExpressionUUID->"fec13e52-21cd-4e3a-9dc6-2e4645c9d765"],
Cell[CellGroupData[{
Cell[83265, 1954, 143, 2, 30, "Input",ExpressionUUID->"642a59ff-4ef8-4231-b055-699481bd7f1c"],
Cell[83411, 1958, 1188, 29, 203, "Output",ExpressionUUID->"c33ac3a5-e655-4dbd-8906-b646988bca73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84636, 1992, 375, 9, 52, "Input",ExpressionUUID->"208298d0-a7ed-4c21-bb85-3f926bd60b01"],
Cell[85014, 2003, 644, 11, 77, "Output",ExpressionUUID->"2670a3b3-97c2-4f19-987f-8f5b8928f895"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85695, 2019, 341, 8, 52, "Input",ExpressionUUID->"9ac6749b-a5a0-488f-93b5-ad4c680b7dd0"],
Cell[86039, 2029, 514, 8, 119, "Output",ExpressionUUID->"ebad672d-7399-45f3-9b4e-78d58d28f479"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86590, 2042, 329, 8, 52, "Input",ExpressionUUID->"e2da36e1-f709-48ef-941f-fee7aa2c3725"],
Cell[86922, 2052, 665, 10, 203, "Output",ExpressionUUID->"4de2dc35-1a96-48fd-8a60-489478ebc593"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87624, 2067, 398, 9, 52, "Input",ExpressionUUID->"ea260498-47f1-4bba-b708-3745f1a129d9"],
Cell[88025, 2078, 569, 12, 60, "Output",ExpressionUUID->"f2b4aecc-8dde-49b2-9be3-67de0b200f06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88631, 2095, 158, 3, 41, "WolframAlphaLong",ExpressionUUID->"f42f8e14-039c-406d-b1c2-6294d4ade54a"],
Cell[88792, 2100, 175222, 3360, 1184, "Print",ExpressionUUID->"cf00418e-4180-4069-b33a-a5dcb8ff6d83"]
}, Open  ]],
Cell[264029, 5463, 424, 11, 73, "Input",ExpressionUUID->"44c4d1eb-cf7e-4829-9536-ef083e914bf8"],
Cell[CellGroupData[{
Cell[264478, 5478, 235, 6, 30, "Input",ExpressionUUID->"fccf31b7-92aa-4ff6-a726-dfa85ea34c93"],
Cell[264716, 5486, 689, 18, 77, "Output",ExpressionUUID->"00331ba4-06f5-4073-b49d-5c01a70631d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265442, 5509, 383, 9, 52, "Input",ExpressionUUID->"ae4f636a-8cd7-4ebe-8e74-86806d602923"],
Cell[265828, 5520, 583, 11, 77, "Output",ExpressionUUID->"2a93ff9c-6842-4c64-84dd-10c7f3e77619"]
}, Open  ]],
Cell[266426, 5534, 409, 9, 52, "Input",ExpressionUUID->"125c55c0-f107-4d31-b55d-0e365f42ea06"],
Cell[CellGroupData[{
Cell[266860, 5547, 261, 7, 30, "Input",ExpressionUUID->"199e3820-d793-44e9-b6e7-7bb5827973a9"],
Cell[267124, 5556, 1201, 31, 119, "Output",ExpressionUUID->"e7d085ba-5c38-4c25-b883-6a220d48662f"]
}, Open  ]],
Cell[268340, 5590, 507, 14, 52, "Input",ExpressionUUID->"b767ce10-8ad7-46aa-ba62-95ab2ec3d0b8"],
Cell[268850, 5606, 570, 12, 115, "Input",ExpressionUUID->"d9c468e6-8f8b-472a-9e87-671d2966a1a7"],
Cell[CellGroupData[{
Cell[269445, 5622, 554, 15, 94, "Input",ExpressionUUID->"8b263840-d205-4d02-8c21-810cd890449b"],
Cell[270002, 5639, 97531, 1951, 761, "Output",ExpressionUUID->"6bffde72-c967-4697-90f9-6b27b4809235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367570, 7595, 186, 5, 30, "Input",ExpressionUUID->"8a665d84-e099-4111-b846-166d316d9ab9"],
Cell[367759, 7602, 343, 7, 34, "Output",ExpressionUUID->"4d47ccb3-bb4c-41d6-8201-1ee68374360f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368139, 7614, 539, 13, 52, "Input",ExpressionUUID->"a30c1b53-3e3f-412e-b60a-2261d3b8b65f"],
Cell[368681, 7629, 1151, 20, 164, "Output",ExpressionUUID->"90b87c71-0d60-4831-a655-0daaf889d16e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369869, 7654, 387, 10, 73, "Input",ExpressionUUID->"a042759d-b435-4ae8-9f1a-02355397c926"],
Cell[370259, 7666, 1022, 19, 143, "Output",ExpressionUUID->"4e66ce76-eb5d-4c8e-b4c6-e328b23263a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371318, 7690, 486, 11, 73, "Input",ExpressionUUID->"b56f4ab8-f150-48a4-9be8-5745659dc7c9"],
Cell[371807, 7703, 3484, 89, 311, "Output",ExpressionUUID->"4210ebd5-76e2-4a89-a836-3346d99a5f05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375328, 7797, 615, 14, 73, "Input",ExpressionUUID->"837f017c-28a8-42c0-9b2d-ea5b4ff31054"],
Cell[375946, 7813, 37012, 914, 726, "Output",ExpressionUUID->"867c7451-5aef-4357-be40-d88b64182cbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

